<?xml version="1.0" encoding="UTF-8"?>
<TestScript xmlns="http://hl7.org/fhir" xmlns:nts="http://nictiz.nl/xsl/testscript">
   <id value="gbz-fhir3-0-2-ikz-xis-4-4-json"/>
   <meta>
      <profile value="http://touchstone.aegis.net/touchstone/fhir/testing/StructureDefinition/testscript"/>
   </meta>
   <extension url="http://touchstone.aegis.net/touchstone/fhir/testing/StructureDefinition/testscript-rule">
      <extension url="ruleId">
         <valueId value="assert-response-queryParamsInSelfLink"/>
      </extension>
      <extension url="path">
         <valueString value="../_reference/rules/assert_response_queryParamsInSelfLink.groovy"/>
      </extension>
   </extension>
   <url value="http://nictiz.nl/fhir/TestScript/gbz-fhir3-0-2-ikz-xis-4-4-json"/>
   <version value="stu3-3.0-patchlevel 2025-02"/>
   <name value="Nictiz Geboortezorg - Server - Scenario 4.4 - Serve Integrale Zwangerschapskaart resources of Willemijn W Yzendoorn van den Berg - JSON Format"/>
   <status value="active"/>
   <publisher value="Nictiz"/>
   <contact>
      <name value="Nictiz"/>
      <telecom>
         <system value="email"/>
         <value value="kwalificatie@nictiz.nl"/>
         <use value="work"/>
      </telecom>
   </contact>
   <description value="Scenario 4.4: Serve Integrale Zwangerschapskaart resources of Willemijn W Yzendoorn van den Berg"/>
   <origin>
      <extension url="http://fhir.interoplab.eu/fhir/StructureDefinition/Interoplab-CL-ext-SUT">
         <valueBoolean value="false"/>
      </extension>
      <index value="1"/>
      <profile>
         <system value="http://terminology.hl7.org/CodeSystem/testscript-profile-origin-types"/>
         <code value="FHIR-Client"/>
      </profile>
   </origin>
   <destination>
      <extension url="http://fhir.interoplab.eu/fhir/StructureDefinition/Interoplab-CL-ext-SUT">
         <valueBoolean value="true"/>
      </extension>
      <index value="1"/>
      <profile>
         <system value="http://terminology.hl7.org/CodeSystem/testscript-profile-destination-types"/>
         <code value="FHIR-Server"/>
      </profile>
   </destination>
   <profile id="Bundle-profile"
            value="http://hl7.org/fhir/StructureDefinition/Bundle"/>
   <variable>
      <name value="patient-token-id"/>
      <defaultValue value="Bearer 01e5514d-ae75-4d14-b43b-86511e866fce"/>
      <description value="OAuth Token for current patient"/>
   </variable>
   <variable>
      <name value="episode-id"/>
      <description value="This variable needs to be filled with the following params. The name (the variable name), sourceId (id of the resource) and as resource EpisodeOfCare should be filled in"/>
      <expression value="Bundle.entry.where(resource.is(EpisodeOfCare)).resource.where(type.coding.code='364320009').id"/>
      <sourceId value="fixture-5-ServeMaternalRecord"/>
   </variable>
   <variable>
      <name value="T"/>
      <defaultValue value="${CURRENTDATE}"/>
   </variable>
   <variable>
      <name value="X-Correlation-ID"/>
      <defaultValue value="${UUID}"/>
      <description value="X-Correlation-ID, by default a UUID following the MedMij Afsprakenstelsel. Does not have to be edited, see https://nictiz.atlassian.net/browse/MM-5132 for more information"/>
   </variable>
   <test id="1-ServeWoman">
      <name value="1-ServeWoman"/>
      <description value="Query Patient resource for HCIM Patient"/>
      <action>
         <operation>
            <type>
               <system value="http://hl7.org/fhir/restful-interaction"/>
               <code value="search"/>
            </type>
            <resource value="Patient"/>
            <description value="Test XIS server to serve Patient resources."/>
            <accept value="json"/>
            <destination value="1"/>
            <encodeRequestUrl value="true"/>
            <origin value="1"/>
            <requestHeader>
               <field value="Authorization"/>
               <value value="${patient-token-id}"/>
            </requestHeader>
            <requestHeader>
               <field value="MedMij-Request-ID"/>
               <value value="${UUID}"/>
            </requestHeader>
            <requestHeader>
               <field value="X-Correlation-ID"/>
               <value value="${X-Correlation-ID}"/>
            </requestHeader>
         </operation>
      </action>
      <action>
         <assert>
            <description value="Confirm that the operation was successful"/>
            <operator value="in"/>
            <responseCode value="200,201"/>
            <stopTestOnFail value="true"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that the returned resource type is Bundle."/>
            <direction value="response"/>
            <resource value="Bundle"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that the returned Bundle type is searchset."/>
            <direction value="response"/>
            <expression value="Bundle.type"/>
            <operator value="equals"/>
            <stopTestOnFail value="false"/>
            <value value="searchset"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that all returned resources contain an Resource.id except when temporary ids are used in the Bundle. The only time that a resource does not have an id is when it is being submitted to the server using a create operation: https://www.hl7.org/fhir/STU3/resource-definitions.html#Resource.id "/>
            <direction value="response"/>
            <expression value="Bundle.entry.all( $this.fullUrl.matches('^urn:oid:[0-2](\\.(0|[1-9]\\d*))*$') or $this.fullUrl.matches('^urn:uuid:[A-Fa-f\\d]{8}-[A-Fa-f\\d]{4}-[A-Fa-f\\d]{4}-[A-Fa-f\\d]{4}-[A-Fa-f\\d]{12}$') or $this.resource.id.exists())"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that all returned resources except OperationOutcome and Binary contain a meta.profile tag."/>
            <direction value="response"/>
            <expression value="Bundle.entry.resource.where(is(OperationOutcome).not()).where(is(Binary).not()).where(meta.profile.empty()).empty()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that the fullUrl does not disagree with the id in the resource, see http://hl7.org/fhir/stu3/bundle-definitions.html#Bundle.entry.fullUrl"/>
            <direction value="response"/>
            <expression value="Bundle.entry.where(fullUrl.exists() and resource.id.exists()).all($this.fullUrl.endsWith($this.resource.id))"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that the fullUrl is an absolute URL, an uuid or an oid."/>
            <direction value="response"/>
            <expression value="Bundle.entry.fullUrl.all( startsWith('http://') or startsWith('https://') or matches('^urn:oid:[0-2](\\.(0|[1-9]\\d*))*$') or matches('^urn:uuid:[A-Fa-f\\d]{8}-[A-Fa-f\\d]{4}-[A-Fa-f\\d]{4}-[A-Fa-f\\d]{4}-[A-Fa-f\\d]{12}$') )"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that the returned Bundle conforms to the base FHIR specification and the resources to the stated profiles in the meta.profile tag."/>
            <direction value="response"/>
            <stopTestOnFail value="false"/>
            <validateProfileId value="Bundle-profile"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that all Coding elements contain both a .system and a .code."/>
            <direction value="response"/>
            <expression value="Bundle.descendants().where($this.is(Coding)).all(system.exists() and code.exists())"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that the OID of the zib valueset is not used for the system of a coding element."/>
            <direction value="response"/>
            <expression value="Bundle.descendants().where($this.is(coding)).where(system.startsWith('urn:oid:2.16.840.1.113883.2.4.3.11.60.40.2')).exists().not()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that all CodeableConcept elements contain either a coding.display or a text value if no Coding exists or has an extension (e.g. a nullFlavor or data-absent-reason extension). For more information see https://informatiestandaarden.nictiz.nl/wiki/FHIR:V1.0_FHIR_IG_STU3Use_of_coded_concepts."/>
            <direction value="response"/>
            <expression value="Bundle.descendants().where($this.is(CodeableConcept)) .all(coding.display.exists() or text.exists() or extension.exists())"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that all References have a display value, see https://informatiestandaarden.nictiz.nl/wiki/FHIR:V1.0_FHIR_IG_STU3#Use_of_the_reference_datatype."/>
            <direction value="response"/>
            <expression value="Bundle.descendants().where($this.is(Reference)).all(display.exists() or extension.where(url = 'http://hl7.org/fhir/StructureDefinition/data-absent-reason').exists() or extension.where(url = 'http://hl7.org/fhir/StructureDefinition/iso21090-nullFlavor').exists())"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that all Identifiers have both a .system and a .value. In rare cases where a general category of identifiers can be used, .type can replace .system. Edge cases for both .system and .type to be unknown are not applicable to Nictiz. For more information, see https://www.hl7.org/fhir/stu3/datatypes.html#Identifier."/>
            <direction value="response"/>
            <expression value="Bundle.descendants().where($this.is(Identifier)).all((system.exists() or type.exists()) and value.exists())"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that Bundle does not use Burgerservicenummer (BSN) anywhere."/>
            <direction value="response"/>
            <expression value="Bundle.descendants().select(identifier.where(system = 'http://fhir.nl/fhir/NamingSystem/bsn').where(value.empty().not() and value.extension.exists().not())).count() = 0"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that the returned Bundle total value matches or is less than the number of entries in the Bundle. The included resources should not be counted as entries in the Bundle.total."/>
            <direction value="response"/>
            <expression value="Bundle.total.exists() implies (Bundle.total.toInteger() &lt;= Bundle.entry.where(search.empty() or search.mode = 'match').count())"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that the returned Bundle contains a self link."/>
            <direction value="response"/>
            <expression value="Bundle.link.where(relation = 'self' and url.exists()).exists()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that Bundle does not use Burgerservicenummer (BSN) in the self link."/>
            <direction value="response"/>
            <expression value="Bundle.link.url.contains('http://fhir.nl/fhir/NamingSystem/bsn') = false"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that the response Bundle contains 1 Patient resource(s). "/>
            <direction value="response"/>
            <expression value="Bundle.entry.where(resource.is(Patient)).count() &gt;= 1"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
   </test>
   <test id="2-ServePayer">
      <name value="2-ServePayer"/>
      <description value="Query Coverage resource for HCIM Payer"/>
      <action>
         <operation>
            <type>
               <system value="http://hl7.org/fhir/restful-interaction"/>
               <code value="search"/>
            </type>
            <resource value="Coverage"/>
            <description value="Test XIS server to serve Coverage resources."/>
            <accept value="json"/>
            <destination value="1"/>
            <encodeRequestUrl value="true"/>
            <origin value="1"/>
            <requestHeader>
               <field value="Authorization"/>
               <value value="${patient-token-id}"/>
            </requestHeader>
            <requestHeader>
               <field value="MedMij-Request-ID"/>
               <value value="${UUID}"/>
            </requestHeader>
            <requestHeader>
               <field value="X-Correlation-ID"/>
               <value value="${X-Correlation-ID}"/>
            </requestHeader>
         </operation>
      </action>
      <action>
         <assert>
            <description value="Confirm that the operation was successful"/>
            <operator value="in"/>
            <responseCode value="200,201"/>
            <stopTestOnFail value="true"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that the returned resource type is Bundle."/>
            <direction value="response"/>
            <resource value="Bundle"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that the returned Bundle type is searchset."/>
            <direction value="response"/>
            <expression value="Bundle.type"/>
            <operator value="equals"/>
            <stopTestOnFail value="false"/>
            <value value="searchset"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that all returned resources contain an Resource.id except when temporary ids are used in the Bundle. The only time that a resource does not have an id is when it is being submitted to the server using a create operation: https://www.hl7.org/fhir/STU3/resource-definitions.html#Resource.id "/>
            <direction value="response"/>
            <expression value="Bundle.entry.all( $this.fullUrl.matches('^urn:oid:[0-2](\\.(0|[1-9]\\d*))*$') or $this.fullUrl.matches('^urn:uuid:[A-Fa-f\\d]{8}-[A-Fa-f\\d]{4}-[A-Fa-f\\d]{4}-[A-Fa-f\\d]{4}-[A-Fa-f\\d]{12}$') or $this.resource.id.exists())"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that all returned resources except OperationOutcome and Binary contain a meta.profile tag."/>
            <direction value="response"/>
            <expression value="Bundle.entry.resource.where(is(OperationOutcome).not()).where(is(Binary).not()).where(meta.profile.empty()).empty()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that the fullUrl does not disagree with the id in the resource, see http://hl7.org/fhir/stu3/bundle-definitions.html#Bundle.entry.fullUrl"/>
            <direction value="response"/>
            <expression value="Bundle.entry.where(fullUrl.exists() and resource.id.exists()).all($this.fullUrl.endsWith($this.resource.id))"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that the fullUrl is an absolute URL, an uuid or an oid."/>
            <direction value="response"/>
            <expression value="Bundle.entry.fullUrl.all( startsWith('http://') or startsWith('https://') or matches('^urn:oid:[0-2](\\.(0|[1-9]\\d*))*$') or matches('^urn:uuid:[A-Fa-f\\d]{8}-[A-Fa-f\\d]{4}-[A-Fa-f\\d]{4}-[A-Fa-f\\d]{4}-[A-Fa-f\\d]{12}$') )"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that the returned Bundle conforms to the base FHIR specification and the resources to the stated profiles in the meta.profile tag."/>
            <direction value="response"/>
            <stopTestOnFail value="false"/>
            <validateProfileId value="Bundle-profile"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that all Coding elements contain both a .system and a .code."/>
            <direction value="response"/>
            <expression value="Bundle.descendants().where($this.is(Coding)).all(system.exists() and code.exists())"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that the OID of the zib valueset is not used for the system of a coding element."/>
            <direction value="response"/>
            <expression value="Bundle.descendants().where($this.is(coding)).where(system.startsWith('urn:oid:2.16.840.1.113883.2.4.3.11.60.40.2')).exists().not()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that all CodeableConcept elements contain either a coding.display or a text value if no Coding exists or has an extension (e.g. a nullFlavor or data-absent-reason extension). For more information see https://informatiestandaarden.nictiz.nl/wiki/FHIR:V1.0_FHIR_IG_STU3Use_of_coded_concepts."/>
            <direction value="response"/>
            <expression value="Bundle.descendants().where($this.is(CodeableConcept)) .all(coding.display.exists() or text.exists() or extension.exists())"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that all References have a display value, see https://informatiestandaarden.nictiz.nl/wiki/FHIR:V1.0_FHIR_IG_STU3#Use_of_the_reference_datatype."/>
            <direction value="response"/>
            <expression value="Bundle.descendants().where($this.is(Reference)).all(display.exists() or extension.where(url = 'http://hl7.org/fhir/StructureDefinition/data-absent-reason').exists() or extension.where(url = 'http://hl7.org/fhir/StructureDefinition/iso21090-nullFlavor').exists())"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that all Identifiers have both a .system and a .value. In rare cases where a general category of identifiers can be used, .type can replace .system. Edge cases for both .system and .type to be unknown are not applicable to Nictiz. For more information, see https://www.hl7.org/fhir/stu3/datatypes.html#Identifier."/>
            <direction value="response"/>
            <expression value="Bundle.descendants().where($this.is(Identifier)).all((system.exists() or type.exists()) and value.exists())"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that Bundle does not use Burgerservicenummer (BSN) anywhere."/>
            <direction value="response"/>
            <expression value="Bundle.descendants().select(identifier.where(system = 'http://fhir.nl/fhir/NamingSystem/bsn').where(value.empty().not() and value.extension.exists().not())).count() = 0"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that the returned Bundle total value matches or is less than the number of entries in the Bundle. The included resources should not be counted as entries in the Bundle.total."/>
            <direction value="response"/>
            <expression value="Bundle.total.exists() implies (Bundle.total.toInteger() &lt;= Bundle.entry.where(search.empty() or search.mode = 'match').count())"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that the returned Bundle contains a self link."/>
            <direction value="response"/>
            <expression value="Bundle.link.where(relation = 'self' and url.exists()).exists()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that Bundle does not use Burgerservicenummer (BSN) in the self link."/>
            <direction value="response"/>
            <expression value="Bundle.link.url.contains('http://fhir.nl/fhir/NamingSystem/bsn') = false"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that the response Bundle contains 0 Coverage resource(s). "/>
            <direction value="response"/>
            <expression value="Bundle.entry.where(resource.is(Coverage)).count() = 0"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
   </test>
   <test id="3-ServeFamilyMemberHistory">
      <name value="3-ServeFamilyMemberHistory"/>
      <description value="Query FamilyMemberHistory resource for FamilyMemberHistory"/>
      <action>
         <operation>
            <type>
               <system value="http://hl7.org/fhir/restful-interaction"/>
               <code value="search"/>
            </type>
            <resource value="FamilyMemberHistory"/>
            <description value="Test XIS server to serve FamilyMemberHistory resources."/>
            <accept value="json"/>
            <destination value="1"/>
            <encodeRequestUrl value="true"/>
            <origin value="1"/>
            <requestHeader>
               <field value="Authorization"/>
               <value value="${patient-token-id}"/>
            </requestHeader>
            <requestHeader>
               <field value="MedMij-Request-ID"/>
               <value value="${UUID}"/>
            </requestHeader>
            <requestHeader>
               <field value="X-Correlation-ID"/>
               <value value="${X-Correlation-ID}"/>
            </requestHeader>
         </operation>
      </action>
      <action>
         <assert>
            <description value="Confirm that the operation was successful"/>
            <operator value="in"/>
            <responseCode value="200,201"/>
            <stopTestOnFail value="true"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that the returned resource type is Bundle."/>
            <direction value="response"/>
            <resource value="Bundle"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that the returned Bundle type is searchset."/>
            <direction value="response"/>
            <expression value="Bundle.type"/>
            <operator value="equals"/>
            <stopTestOnFail value="false"/>
            <value value="searchset"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that all returned resources contain an Resource.id except when temporary ids are used in the Bundle. The only time that a resource does not have an id is when it is being submitted to the server using a create operation: https://www.hl7.org/fhir/STU3/resource-definitions.html#Resource.id "/>
            <direction value="response"/>
            <expression value="Bundle.entry.all( $this.fullUrl.matches('^urn:oid:[0-2](\\.(0|[1-9]\\d*))*$') or $this.fullUrl.matches('^urn:uuid:[A-Fa-f\\d]{8}-[A-Fa-f\\d]{4}-[A-Fa-f\\d]{4}-[A-Fa-f\\d]{4}-[A-Fa-f\\d]{12}$') or $this.resource.id.exists())"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that all returned resources except OperationOutcome and Binary contain a meta.profile tag."/>
            <direction value="response"/>
            <expression value="Bundle.entry.resource.where(is(OperationOutcome).not()).where(is(Binary).not()).where(meta.profile.empty()).empty()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that the fullUrl does not disagree with the id in the resource, see http://hl7.org/fhir/stu3/bundle-definitions.html#Bundle.entry.fullUrl"/>
            <direction value="response"/>
            <expression value="Bundle.entry.where(fullUrl.exists() and resource.id.exists()).all($this.fullUrl.endsWith($this.resource.id))"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that the fullUrl is an absolute URL, an uuid or an oid."/>
            <direction value="response"/>
            <expression value="Bundle.entry.fullUrl.all( startsWith('http://') or startsWith('https://') or matches('^urn:oid:[0-2](\\.(0|[1-9]\\d*))*$') or matches('^urn:uuid:[A-Fa-f\\d]{8}-[A-Fa-f\\d]{4}-[A-Fa-f\\d]{4}-[A-Fa-f\\d]{4}-[A-Fa-f\\d]{12}$') )"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that the returned Bundle conforms to the base FHIR specification and the resources to the stated profiles in the meta.profile tag."/>
            <direction value="response"/>
            <stopTestOnFail value="false"/>
            <validateProfileId value="Bundle-profile"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that all Coding elements contain both a .system and a .code."/>
            <direction value="response"/>
            <expression value="Bundle.descendants().where($this.is(Coding)).all(system.exists() and code.exists())"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that the OID of the zib valueset is not used for the system of a coding element."/>
            <direction value="response"/>
            <expression value="Bundle.descendants().where($this.is(coding)).where(system.startsWith('urn:oid:2.16.840.1.113883.2.4.3.11.60.40.2')).exists().not()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that all CodeableConcept elements contain either a coding.display or a text value if no Coding exists or has an extension (e.g. a nullFlavor or data-absent-reason extension). For more information see https://informatiestandaarden.nictiz.nl/wiki/FHIR:V1.0_FHIR_IG_STU3Use_of_coded_concepts."/>
            <direction value="response"/>
            <expression value="Bundle.descendants().where($this.is(CodeableConcept)) .all(coding.display.exists() or text.exists() or extension.exists())"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that all References have a display value, see https://informatiestandaarden.nictiz.nl/wiki/FHIR:V1.0_FHIR_IG_STU3#Use_of_the_reference_datatype."/>
            <direction value="response"/>
            <expression value="Bundle.descendants().where($this.is(Reference)).all(display.exists() or extension.where(url = 'http://hl7.org/fhir/StructureDefinition/data-absent-reason').exists() or extension.where(url = 'http://hl7.org/fhir/StructureDefinition/iso21090-nullFlavor').exists())"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that all Identifiers have both a .system and a .value. In rare cases where a general category of identifiers can be used, .type can replace .system. Edge cases for both .system and .type to be unknown are not applicable to Nictiz. For more information, see https://www.hl7.org/fhir/stu3/datatypes.html#Identifier."/>
            <direction value="response"/>
            <expression value="Bundle.descendants().where($this.is(Identifier)).all((system.exists() or type.exists()) and value.exists())"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that Bundle does not use Burgerservicenummer (BSN) anywhere."/>
            <direction value="response"/>
            <expression value="Bundle.descendants().select(identifier.where(system = 'http://fhir.nl/fhir/NamingSystem/bsn').where(value.empty().not() and value.extension.exists().not())).count() = 0"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that the returned Bundle total value matches or is less than the number of entries in the Bundle. The included resources should not be counted as entries in the Bundle.total."/>
            <direction value="response"/>
            <expression value="Bundle.total.exists() implies (Bundle.total.toInteger() &lt;= Bundle.entry.where(search.empty() or search.mode = 'match').count())"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that the returned Bundle contains a self link."/>
            <direction value="response"/>
            <expression value="Bundle.link.where(relation = 'self' and url.exists()).exists()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that Bundle does not use Burgerservicenummer (BSN) in the self link."/>
            <direction value="response"/>
            <expression value="Bundle.link.url.contains('http://fhir.nl/fhir/NamingSystem/bsn') = false"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that the response Bundle contains 0 FamilyMemberHistory resource(s). "/>
            <direction value="response"/>
            <expression value="Bundle.entry.where(resource.is(FamilyMemberHistory)).count() = 0"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
   </test>
   <test id="4-ServeDeviceUseStatement">
      <name value="4-ServeDeviceUseStatement"/>
      <description value="Query DeviceUseStatement resource for HCIM BladderFunction-UrineCatheter"/>
      <action>
         <operation>
            <type>
               <system value="http://hl7.org/fhir/restful-interaction"/>
               <code value="search"/>
            </type>
            <resource value="DeviceUseStatement"/>
            <description value="Test XIS server to serve DeviceUseStatement resources."/>
            <accept value="json"/>
            <destination value="1"/>
            <encodeRequestUrl value="true"/>
            <origin value="1"/>
            <params value="?_include=DeviceUseStatement:device"/>
            <requestHeader>
               <field value="Authorization"/>
               <value value="${patient-token-id}"/>
            </requestHeader>
            <requestHeader>
               <field value="MedMij-Request-ID"/>
               <value value="${UUID}"/>
            </requestHeader>
            <requestHeader>
               <field value="X-Correlation-ID"/>
               <value value="${X-Correlation-ID}"/>
            </requestHeader>
         </operation>
      </action>
      <action>
         <assert>
            <description value="Confirm that the operation was successful"/>
            <operator value="in"/>
            <responseCode value="200,201"/>
            <stopTestOnFail value="true"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that the returned resource type is Bundle."/>
            <direction value="response"/>
            <resource value="Bundle"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that the returned Bundle type is searchset."/>
            <direction value="response"/>
            <expression value="Bundle.type"/>
            <operator value="equals"/>
            <stopTestOnFail value="false"/>
            <value value="searchset"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that all returned resources contain an Resource.id except when temporary ids are used in the Bundle. The only time that a resource does not have an id is when it is being submitted to the server using a create operation: https://www.hl7.org/fhir/STU3/resource-definitions.html#Resource.id "/>
            <direction value="response"/>
            <expression value="Bundle.entry.all( $this.fullUrl.matches('^urn:oid:[0-2](\\.(0|[1-9]\\d*))*$') or $this.fullUrl.matches('^urn:uuid:[A-Fa-f\\d]{8}-[A-Fa-f\\d]{4}-[A-Fa-f\\d]{4}-[A-Fa-f\\d]{4}-[A-Fa-f\\d]{12}$') or $this.resource.id.exists())"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that all returned resources except OperationOutcome and Binary contain a meta.profile tag."/>
            <direction value="response"/>
            <expression value="Bundle.entry.resource.where(is(OperationOutcome).not()).where(is(Binary).not()).where(meta.profile.empty()).empty()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that the fullUrl does not disagree with the id in the resource, see http://hl7.org/fhir/stu3/bundle-definitions.html#Bundle.entry.fullUrl"/>
            <direction value="response"/>
            <expression value="Bundle.entry.where(fullUrl.exists() and resource.id.exists()).all($this.fullUrl.endsWith($this.resource.id))"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that the fullUrl is an absolute URL, an uuid or an oid."/>
            <direction value="response"/>
            <expression value="Bundle.entry.fullUrl.all( startsWith('http://') or startsWith('https://') or matches('^urn:oid:[0-2](\\.(0|[1-9]\\d*))*$') or matches('^urn:uuid:[A-Fa-f\\d]{8}-[A-Fa-f\\d]{4}-[A-Fa-f\\d]{4}-[A-Fa-f\\d]{4}-[A-Fa-f\\d]{12}$') )"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that the returned Bundle conforms to the base FHIR specification and the resources to the stated profiles in the meta.profile tag."/>
            <direction value="response"/>
            <stopTestOnFail value="false"/>
            <validateProfileId value="Bundle-profile"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that all Coding elements contain both a .system and a .code."/>
            <direction value="response"/>
            <expression value="Bundle.descendants().where($this.is(Coding)).all(system.exists() and code.exists())"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that the OID of the zib valueset is not used for the system of a coding element."/>
            <direction value="response"/>
            <expression value="Bundle.descendants().where($this.is(coding)).where(system.startsWith('urn:oid:2.16.840.1.113883.2.4.3.11.60.40.2')).exists().not()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that all CodeableConcept elements contain either a coding.display or a text value if no Coding exists or has an extension (e.g. a nullFlavor or data-absent-reason extension). For more information see https://informatiestandaarden.nictiz.nl/wiki/FHIR:V1.0_FHIR_IG_STU3Use_of_coded_concepts."/>
            <direction value="response"/>
            <expression value="Bundle.descendants().where($this.is(CodeableConcept)) .all(coding.display.exists() or text.exists() or extension.exists())"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that all References have a display value, see https://informatiestandaarden.nictiz.nl/wiki/FHIR:V1.0_FHIR_IG_STU3#Use_of_the_reference_datatype."/>
            <direction value="response"/>
            <expression value="Bundle.descendants().where($this.is(Reference)).all(display.exists() or extension.where(url = 'http://hl7.org/fhir/StructureDefinition/data-absent-reason').exists() or extension.where(url = 'http://hl7.org/fhir/StructureDefinition/iso21090-nullFlavor').exists())"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that all Identifiers have both a .system and a .value. In rare cases where a general category of identifiers can be used, .type can replace .system. Edge cases for both .system and .type to be unknown are not applicable to Nictiz. For more information, see https://www.hl7.org/fhir/stu3/datatypes.html#Identifier."/>
            <direction value="response"/>
            <expression value="Bundle.descendants().where($this.is(Identifier)).all((system.exists() or type.exists()) and value.exists())"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that Bundle does not use Burgerservicenummer (BSN) anywhere."/>
            <direction value="response"/>
            <expression value="Bundle.descendants().select(identifier.where(system = 'http://fhir.nl/fhir/NamingSystem/bsn').where(value.empty().not() and value.extension.exists().not())).count() = 0"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that the returned Bundle total value matches or is less than the number of entries in the Bundle. The included resources should not be counted as entries in the Bundle.total."/>
            <direction value="response"/>
            <expression value="Bundle.total.exists() implies (Bundle.total.toInteger() &lt;= Bundle.entry.where(search.empty() or search.mode = 'match').count())"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that the returned Bundle contains a self link."/>
            <direction value="response"/>
            <expression value="Bundle.link.where(relation = 'self' and url.exists()).exists()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that Bundle does not use Burgerservicenummer (BSN) in the self link."/>
            <direction value="response"/>
            <expression value="Bundle.link.url.contains('http://fhir.nl/fhir/NamingSystem/bsn') = false"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <extension url="http://touchstone.aegis.net/touchstone/fhir/testing/StructureDefinition/testscript-assert-rule">
               <extension url="ruleId">
                  <valueId value="assert-response-queryParamsInSelfLink"/>
               </extension>
            </extension>
            <description value="Confirm that the parameters in the request URL are all handled by the server, by inspecting the self link."/>
            <stopTestOnFail value="false"/>
            <warningOnly value="true"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that the response Bundle contains 1 DeviceUseStatement resource(s). "/>
            <direction value="response"/>
            <expression value="Bundle.entry.where(resource.is(DeviceUseStatement)).count() = 1"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
   </test>
   <test id="5-ServeMaternalRecord">
      <name value="5-ServeMaternalRecord"/>
      <description value="Test Server query operation for MaternalRecord (EpisodeOfCare) including managing organization (Organization) and care manager (Practitioner)"/>
      <action>
         <operation>
            <type>
               <system value="http://hl7.org/fhir/restful-interaction"/>
               <code value="search"/>
            </type>
            <resource value="EpisodeOfCare"/>
            <description value="Test XIS server to serve EpisodeOfCare resources."/>
            <accept value="json"/>
            <destination value="1"/>
            <encodeRequestUrl value="true"/>
            <origin value="1"/>
            <params value="?type=http://snomed.info/sct|364320009&amp;_include=EpisodeOfCare:organization&amp;_include=EpisodeOfCare:care-manager"/>
            <requestHeader>
               <field value="Authorization"/>
               <value value="${patient-token-id}"/>
            </requestHeader>
            <requestHeader>
               <field value="MedMij-Request-ID"/>
               <value value="${UUID}"/>
            </requestHeader>
            <requestHeader>
               <field value="X-Correlation-ID"/>
               <value value="${X-Correlation-ID}"/>
            </requestHeader>
            <responseId value="fixture-5-ServeMaternalRecord"/>
         </operation>
      </action>
      <action>
         <assert>
            <description value="Confirm that the operation was successful"/>
            <operator value="in"/>
            <responseCode value="200,201"/>
            <stopTestOnFail value="true"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that the returned resource type is Bundle."/>
            <direction value="response"/>
            <resource value="Bundle"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that the returned Bundle type is searchset."/>
            <direction value="response"/>
            <expression value="Bundle.type"/>
            <operator value="equals"/>
            <stopTestOnFail value="false"/>
            <value value="searchset"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that all returned resources contain an Resource.id except when temporary ids are used in the Bundle. The only time that a resource does not have an id is when it is being submitted to the server using a create operation: https://www.hl7.org/fhir/STU3/resource-definitions.html#Resource.id "/>
            <direction value="response"/>
            <expression value="Bundle.entry.all( $this.fullUrl.matches('^urn:oid:[0-2](\\.(0|[1-9]\\d*))*$') or $this.fullUrl.matches('^urn:uuid:[A-Fa-f\\d]{8}-[A-Fa-f\\d]{4}-[A-Fa-f\\d]{4}-[A-Fa-f\\d]{4}-[A-Fa-f\\d]{12}$') or $this.resource.id.exists())"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that all returned resources except OperationOutcome and Binary contain a meta.profile tag."/>
            <direction value="response"/>
            <expression value="Bundle.entry.resource.where(is(OperationOutcome).not()).where(is(Binary).not()).where(meta.profile.empty()).empty()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that the fullUrl does not disagree with the id in the resource, see http://hl7.org/fhir/stu3/bundle-definitions.html#Bundle.entry.fullUrl"/>
            <direction value="response"/>
            <expression value="Bundle.entry.where(fullUrl.exists() and resource.id.exists()).all($this.fullUrl.endsWith($this.resource.id))"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that the fullUrl is an absolute URL, an uuid or an oid."/>
            <direction value="response"/>
            <expression value="Bundle.entry.fullUrl.all( startsWith('http://') or startsWith('https://') or matches('^urn:oid:[0-2](\\.(0|[1-9]\\d*))*$') or matches('^urn:uuid:[A-Fa-f\\d]{8}-[A-Fa-f\\d]{4}-[A-Fa-f\\d]{4}-[A-Fa-f\\d]{4}-[A-Fa-f\\d]{12}$') )"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that the returned Bundle conforms to the base FHIR specification and the resources to the stated profiles in the meta.profile tag."/>
            <direction value="response"/>
            <stopTestOnFail value="false"/>
            <validateProfileId value="Bundle-profile"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that all Coding elements contain both a .system and a .code."/>
            <direction value="response"/>
            <expression value="Bundle.descendants().where($this.is(Coding)).all(system.exists() and code.exists())"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that the OID of the zib valueset is not used for the system of a coding element."/>
            <direction value="response"/>
            <expression value="Bundle.descendants().where($this.is(coding)).where(system.startsWith('urn:oid:2.16.840.1.113883.2.4.3.11.60.40.2')).exists().not()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that all CodeableConcept elements contain either a coding.display or a text value if no Coding exists or has an extension (e.g. a nullFlavor or data-absent-reason extension). For more information see https://informatiestandaarden.nictiz.nl/wiki/FHIR:V1.0_FHIR_IG_STU3Use_of_coded_concepts."/>
            <direction value="response"/>
            <expression value="Bundle.descendants().where($this.is(CodeableConcept)) .all(coding.display.exists() or text.exists() or extension.exists())"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that all References have a display value, see https://informatiestandaarden.nictiz.nl/wiki/FHIR:V1.0_FHIR_IG_STU3#Use_of_the_reference_datatype."/>
            <direction value="response"/>
            <expression value="Bundle.descendants().where($this.is(Reference)).all(display.exists() or extension.where(url = 'http://hl7.org/fhir/StructureDefinition/data-absent-reason').exists() or extension.where(url = 'http://hl7.org/fhir/StructureDefinition/iso21090-nullFlavor').exists())"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that all Identifiers have both a .system and a .value. In rare cases where a general category of identifiers can be used, .type can replace .system. Edge cases for both .system and .type to be unknown are not applicable to Nictiz. For more information, see https://www.hl7.org/fhir/stu3/datatypes.html#Identifier."/>
            <direction value="response"/>
            <expression value="Bundle.descendants().where($this.is(Identifier)).all((system.exists() or type.exists()) and value.exists())"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that Bundle does not use Burgerservicenummer (BSN) anywhere."/>
            <direction value="response"/>
            <expression value="Bundle.descendants().select(identifier.where(system = 'http://fhir.nl/fhir/NamingSystem/bsn').where(value.empty().not() and value.extension.exists().not())).count() = 0"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that the returned Bundle total value matches or is less than the number of entries in the Bundle. The included resources should not be counted as entries in the Bundle.total."/>
            <direction value="response"/>
            <expression value="Bundle.total.exists() implies (Bundle.total.toInteger() &lt;= Bundle.entry.where(search.empty() or search.mode = 'match').count())"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that the returned Bundle contains a self link."/>
            <direction value="response"/>
            <expression value="Bundle.link.where(relation = 'self' and url.exists()).exists()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that Bundle does not use Burgerservicenummer (BSN) in the self link."/>
            <direction value="response"/>
            <expression value="Bundle.link.url.contains('http://fhir.nl/fhir/NamingSystem/bsn') = false"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <extension url="http://touchstone.aegis.net/touchstone/fhir/testing/StructureDefinition/testscript-assert-rule">
               <extension url="ruleId">
                  <valueId value="assert-response-queryParamsInSelfLink"/>
               </extension>
            </extension>
            <description value="Confirm that the parameters in the request URL are all handled by the server, by inspecting the self link."/>
            <stopTestOnFail value="false"/>
            <warningOnly value="true"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that the response Bundle contains 1 EpisodeOfCare resource(s). "/>
            <direction value="response"/>
            <expression value="Bundle.entry.where(resource.is(EpisodeOfCare)).count() = 1"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that the response Bundle contains 1 Organization resource(s). "/>
            <direction value="response"/>
            <expression value="Bundle.entry.where(resource.is(Organization)).count() = 1"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that the response Bundle contains 1 Practitioner resource(s). "/>
            <direction value="response"/>
            <expression value="Bundle.entry.where(resource.is(Practitioner)).count() = 1"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
   </test>
   <test id="6-ServeConditions">
      <name value="6-ServeConditions"/>
      <description value="Test Server query operation for Conditions (including Pregnancy)"/>
      <action>
         <operation>
            <type>
               <system value="http://hl7.org/fhir/restful-interaction"/>
               <code value="search"/>
            </type>
            <resource value="Condition"/>
            <description value="Test XIS server to serve Condition resources."/>
            <accept value="json"/>
            <destination value="1"/>
            <encodeRequestUrl value="true"/>
            <origin value="1"/>
            <params value="?context=EpisodeOfCare/${episode-id}"/>
            <requestHeader>
               <field value="Authorization"/>
               <value value="${patient-token-id}"/>
            </requestHeader>
            <requestHeader>
               <field value="MedMij-Request-ID"/>
               <value value="${UUID}"/>
            </requestHeader>
            <requestHeader>
               <field value="X-Correlation-ID"/>
               <value value="${X-Correlation-ID}"/>
            </requestHeader>
         </operation>
      </action>
      <action>
         <assert>
            <description value="Confirm that the operation was successful"/>
            <operator value="in"/>
            <responseCode value="200,201"/>
            <stopTestOnFail value="true"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that the returned resource type is Bundle."/>
            <direction value="response"/>
            <resource value="Bundle"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that the returned Bundle type is searchset."/>
            <direction value="response"/>
            <expression value="Bundle.type"/>
            <operator value="equals"/>
            <stopTestOnFail value="false"/>
            <value value="searchset"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that all returned resources contain an Resource.id except when temporary ids are used in the Bundle. The only time that a resource does not have an id is when it is being submitted to the server using a create operation: https://www.hl7.org/fhir/STU3/resource-definitions.html#Resource.id "/>
            <direction value="response"/>
            <expression value="Bundle.entry.all( $this.fullUrl.matches('^urn:oid:[0-2](\\.(0|[1-9]\\d*))*$') or $this.fullUrl.matches('^urn:uuid:[A-Fa-f\\d]{8}-[A-Fa-f\\d]{4}-[A-Fa-f\\d]{4}-[A-Fa-f\\d]{4}-[A-Fa-f\\d]{12}$') or $this.resource.id.exists())"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that all returned resources except OperationOutcome and Binary contain a meta.profile tag."/>
            <direction value="response"/>
            <expression value="Bundle.entry.resource.where(is(OperationOutcome).not()).where(is(Binary).not()).where(meta.profile.empty()).empty()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that the fullUrl does not disagree with the id in the resource, see http://hl7.org/fhir/stu3/bundle-definitions.html#Bundle.entry.fullUrl"/>
            <direction value="response"/>
            <expression value="Bundle.entry.where(fullUrl.exists() and resource.id.exists()).all($this.fullUrl.endsWith($this.resource.id))"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that the fullUrl is an absolute URL, an uuid or an oid."/>
            <direction value="response"/>
            <expression value="Bundle.entry.fullUrl.all( startsWith('http://') or startsWith('https://') or matches('^urn:oid:[0-2](\\.(0|[1-9]\\d*))*$') or matches('^urn:uuid:[A-Fa-f\\d]{8}-[A-Fa-f\\d]{4}-[A-Fa-f\\d]{4}-[A-Fa-f\\d]{4}-[A-Fa-f\\d]{12}$') )"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that the returned Bundle conforms to the base FHIR specification and the resources to the stated profiles in the meta.profile tag."/>
            <direction value="response"/>
            <stopTestOnFail value="false"/>
            <validateProfileId value="Bundle-profile"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that all Coding elements contain both a .system and a .code."/>
            <direction value="response"/>
            <expression value="Bundle.descendants().where($this.is(Coding)).all(system.exists() and code.exists())"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that the OID of the zib valueset is not used for the system of a coding element."/>
            <direction value="response"/>
            <expression value="Bundle.descendants().where($this.is(coding)).where(system.startsWith('urn:oid:2.16.840.1.113883.2.4.3.11.60.40.2')).exists().not()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that all CodeableConcept elements contain either a coding.display or a text value if no Coding exists or has an extension (e.g. a nullFlavor or data-absent-reason extension). For more information see https://informatiestandaarden.nictiz.nl/wiki/FHIR:V1.0_FHIR_IG_STU3Use_of_coded_concepts."/>
            <direction value="response"/>
            <expression value="Bundle.descendants().where($this.is(CodeableConcept)) .all(coding.display.exists() or text.exists() or extension.exists())"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that all References have a display value, see https://informatiestandaarden.nictiz.nl/wiki/FHIR:V1.0_FHIR_IG_STU3#Use_of_the_reference_datatype."/>
            <direction value="response"/>
            <expression value="Bundle.descendants().where($this.is(Reference)).all(display.exists() or extension.where(url = 'http://hl7.org/fhir/StructureDefinition/data-absent-reason').exists() or extension.where(url = 'http://hl7.org/fhir/StructureDefinition/iso21090-nullFlavor').exists())"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that all Identifiers have both a .system and a .value. In rare cases where a general category of identifiers can be used, .type can replace .system. Edge cases for both .system and .type to be unknown are not applicable to Nictiz. For more information, see https://www.hl7.org/fhir/stu3/datatypes.html#Identifier."/>
            <direction value="response"/>
            <expression value="Bundle.descendants().where($this.is(Identifier)).all((system.exists() or type.exists()) and value.exists())"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that Bundle does not use Burgerservicenummer (BSN) anywhere."/>
            <direction value="response"/>
            <expression value="Bundle.descendants().select(identifier.where(system = 'http://fhir.nl/fhir/NamingSystem/bsn').where(value.empty().not() and value.extension.exists().not())).count() = 0"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that the returned Bundle total value matches or is less than the number of entries in the Bundle. The included resources should not be counted as entries in the Bundle.total."/>
            <direction value="response"/>
            <expression value="Bundle.total.exists() implies (Bundle.total.toInteger() &lt;= Bundle.entry.where(search.empty() or search.mode = 'match').count())"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that the returned Bundle contains a self link."/>
            <direction value="response"/>
            <expression value="Bundle.link.where(relation = 'self' and url.exists()).exists()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that Bundle does not use Burgerservicenummer (BSN) in the self link."/>
            <direction value="response"/>
            <expression value="Bundle.link.url.contains('http://fhir.nl/fhir/NamingSystem/bsn') = false"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <extension url="http://touchstone.aegis.net/touchstone/fhir/testing/StructureDefinition/testscript-assert-rule">
               <extension url="ruleId">
                  <valueId value="assert-response-queryParamsInSelfLink"/>
               </extension>
            </extension>
            <description value="Confirm that the parameters in the request URL are all handled by the server, by inspecting the self link."/>
            <stopTestOnFail value="false"/>
            <warningOnly value="true"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that the response Bundle contains 5 Condition resource(s). "/>
            <direction value="response"/>
            <expression value="Bundle.entry.where(resource.is(Condition)).count() = 5"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <!-- Zwangerschap -->
      <action>
         <assert>
            <description value="Confirm that the returned searchset Bundle contains 1 Condition resource(s) with code http://snomed.info/sct | 118185001. (Zwangerschap)"/>
            <direction value="response"/>
            <expression value="Bundle.where(entry.where(resource.is(Condition)).resource.code.coding.where(system = 'http://snomed.info/sct' and code = '118185001').count()=1).exists()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <!-- Groeiachterstand -->
      <action>
         <assert>
            <description value="Confirm that the returned searchset Bundle contains 1 Condition resource(s) with code http://snomed.info/sct | 22033007. (Groeiachterstand)"/>
            <direction value="response"/>
            <expression value="Bundle.where(entry.where(resource.is(Condition)).resource.code.coding.where(system = 'http://snomed.info/sct' and code = '22033007').count()=1).exists()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <!-- Foetale nood -->
      <action>
         <assert>
            <description value="Confirm that the returned searchset Bundle contains 1 Condition resource(s) with code http://snomed.info/sct | 288274003. (Foetale nood)"/>
            <direction value="response"/>
            <expression value="Bundle.where(entry.where(resource.is(Condition)).resource.code.coding.where(system = 'http://snomed.info/sct' and code = '288274003').count()=1).exists()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <!-- Neonatale hypoglykemie -->
      <action>
         <assert>
            <description value="Confirm that the returned searchset Bundle contains 1 Condition resource(s) with code http://snomed.info/sct | 52767006. (Neonatale hypoglykemie)"/>
            <direction value="response"/>
            <expression value="Bundle.where(entry.where(resource.is(Condition)).resource.code.coding.where(system = 'http://snomed.info/sct' and code = '52767006').count()=1).exists()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <!-- Fractuur van clavicula -->
      <action>
         <assert>
            <description value="Confirm that the returned searchset Bundle contains 1 Condition resource(s) with code http://snomed.info/sct | 58150001. (Fractuur van clavicula)"/>
            <direction value="response"/>
            <expression value="Bundle.where(entry.where(resource.is(Condition)).resource.code.coding.where(system = 'http://snomed.info/sct' and code = '58150001').count()=1).exists()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
   </test>
   <test id="7-ServeEncounters">
      <name value="7-ServeEncounters"/>
      <description value="Test Server query operation for Encounters"/>
      <action>
         <operation>
            <type>
               <system value="http://hl7.org/fhir/restful-interaction"/>
               <code value="search"/>
            </type>
            <resource value="Encounter"/>
            <description value="Test XIS server to serve Encounter resources."/>
            <accept value="json"/>
            <destination value="1"/>
            <encodeRequestUrl value="true"/>
            <origin value="1"/>
            <params value="?episodeofcare=${episode-id}&amp;_include=Encounter:practitioner"/>
            <requestHeader>
               <field value="Authorization"/>
               <value value="${patient-token-id}"/>
            </requestHeader>
            <requestHeader>
               <field value="MedMij-Request-ID"/>
               <value value="${UUID}"/>
            </requestHeader>
            <requestHeader>
               <field value="X-Correlation-ID"/>
               <value value="${X-Correlation-ID}"/>
            </requestHeader>
         </operation>
      </action>
      <action>
         <assert>
            <description value="Confirm that the operation was successful"/>
            <operator value="in"/>
            <responseCode value="200,201"/>
            <stopTestOnFail value="true"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that the returned resource type is Bundle."/>
            <direction value="response"/>
            <resource value="Bundle"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that the returned Bundle type is searchset."/>
            <direction value="response"/>
            <expression value="Bundle.type"/>
            <operator value="equals"/>
            <stopTestOnFail value="false"/>
            <value value="searchset"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that all returned resources contain an Resource.id except when temporary ids are used in the Bundle. The only time that a resource does not have an id is when it is being submitted to the server using a create operation: https://www.hl7.org/fhir/STU3/resource-definitions.html#Resource.id "/>
            <direction value="response"/>
            <expression value="Bundle.entry.all( $this.fullUrl.matches('^urn:oid:[0-2](\\.(0|[1-9]\\d*))*$') or $this.fullUrl.matches('^urn:uuid:[A-Fa-f\\d]{8}-[A-Fa-f\\d]{4}-[A-Fa-f\\d]{4}-[A-Fa-f\\d]{4}-[A-Fa-f\\d]{12}$') or $this.resource.id.exists())"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that all returned resources except OperationOutcome and Binary contain a meta.profile tag."/>
            <direction value="response"/>
            <expression value="Bundle.entry.resource.where(is(OperationOutcome).not()).where(is(Binary).not()).where(meta.profile.empty()).empty()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that the fullUrl does not disagree with the id in the resource, see http://hl7.org/fhir/stu3/bundle-definitions.html#Bundle.entry.fullUrl"/>
            <direction value="response"/>
            <expression value="Bundle.entry.where(fullUrl.exists() and resource.id.exists()).all($this.fullUrl.endsWith($this.resource.id))"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that the fullUrl is an absolute URL, an uuid or an oid."/>
            <direction value="response"/>
            <expression value="Bundle.entry.fullUrl.all( startsWith('http://') or startsWith('https://') or matches('^urn:oid:[0-2](\\.(0|[1-9]\\d*))*$') or matches('^urn:uuid:[A-Fa-f\\d]{8}-[A-Fa-f\\d]{4}-[A-Fa-f\\d]{4}-[A-Fa-f\\d]{4}-[A-Fa-f\\d]{12}$') )"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that the returned Bundle conforms to the base FHIR specification and the resources to the stated profiles in the meta.profile tag."/>
            <direction value="response"/>
            <stopTestOnFail value="false"/>
            <validateProfileId value="Bundle-profile"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that all Coding elements contain both a .system and a .code."/>
            <direction value="response"/>
            <expression value="Bundle.descendants().where($this.is(Coding)).all(system.exists() and code.exists())"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that the OID of the zib valueset is not used for the system of a coding element."/>
            <direction value="response"/>
            <expression value="Bundle.descendants().where($this.is(coding)).where(system.startsWith('urn:oid:2.16.840.1.113883.2.4.3.11.60.40.2')).exists().not()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that all CodeableConcept elements contain either a coding.display or a text value if no Coding exists or has an extension (e.g. a nullFlavor or data-absent-reason extension). For more information see https://informatiestandaarden.nictiz.nl/wiki/FHIR:V1.0_FHIR_IG_STU3Use_of_coded_concepts."/>
            <direction value="response"/>
            <expression value="Bundle.descendants().where($this.is(CodeableConcept)) .all(coding.display.exists() or text.exists() or extension.exists())"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that all References have a display value, see https://informatiestandaarden.nictiz.nl/wiki/FHIR:V1.0_FHIR_IG_STU3#Use_of_the_reference_datatype."/>
            <direction value="response"/>
            <expression value="Bundle.descendants().where($this.is(Reference)).all(display.exists() or extension.where(url = 'http://hl7.org/fhir/StructureDefinition/data-absent-reason').exists() or extension.where(url = 'http://hl7.org/fhir/StructureDefinition/iso21090-nullFlavor').exists())"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that all Identifiers have both a .system and a .value. In rare cases where a general category of identifiers can be used, .type can replace .system. Edge cases for both .system and .type to be unknown are not applicable to Nictiz. For more information, see https://www.hl7.org/fhir/stu3/datatypes.html#Identifier."/>
            <direction value="response"/>
            <expression value="Bundle.descendants().where($this.is(Identifier)).all((system.exists() or type.exists()) and value.exists())"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that Bundle does not use Burgerservicenummer (BSN) anywhere."/>
            <direction value="response"/>
            <expression value="Bundle.descendants().select(identifier.where(system = 'http://fhir.nl/fhir/NamingSystem/bsn').where(value.empty().not() and value.extension.exists().not())).count() = 0"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that the returned Bundle total value matches or is less than the number of entries in the Bundle. The included resources should not be counted as entries in the Bundle.total."/>
            <direction value="response"/>
            <expression value="Bundle.total.exists() implies (Bundle.total.toInteger() &lt;= Bundle.entry.where(search.empty() or search.mode = 'match').count())"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that the returned Bundle contains a self link."/>
            <direction value="response"/>
            <expression value="Bundle.link.where(relation = 'self' and url.exists()).exists()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that Bundle does not use Burgerservicenummer (BSN) in the self link."/>
            <direction value="response"/>
            <expression value="Bundle.link.url.contains('http://fhir.nl/fhir/NamingSystem/bsn') = false"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <extension url="http://touchstone.aegis.net/touchstone/fhir/testing/StructureDefinition/testscript-assert-rule">
               <extension url="ruleId">
                  <valueId value="assert-response-queryParamsInSelfLink"/>
               </extension>
            </extension>
            <description value="Confirm that the parameters in the request URL are all handled by the server, by inspecting the self link."/>
            <stopTestOnFail value="false"/>
            <warningOnly value="true"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that the response Bundle contains 3 Encounter resource(s). "/>
            <direction value="response"/>
            <expression value="Bundle.entry.where(resource.is(Encounter)).count() = 3"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that the response Bundle contains 1 Practitioner resource(s). "/>
            <direction value="response"/>
            <expression value="Bundle.entry.where(resource.is(Practitioner)).count() = 1"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <!-- Prenatale controle -->
      <action>
         <assert>
            <description value="Confirm that the returned searchset Bundle contains 3 Encounter resource(s) that contains type.coding.code = 11429006. (ContactSoort)"/>
            <direction value="response"/>
            <expression value="Bundle.entry.select(resource as Encounter).where(type.coding.code.where($this='11429006').exists()).count() = 3"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <!-- TODO deze laatste is nu gekoppeld aan het kind, klopt dat? discriminator toevoegen -->
      <!--      <nts:contentAsserts href="mm-gbz-bc-Encounter-7aad39e7-6aef-11ec-0000-020000000000.xml" nts:in-targets="CheckContent">
         <nts:discriminator>class.where(coding.where(code='HH'))</nts:discriminator>
      </nts:contentAsserts>-->
   </test>
   <test id="8a-ServeObservations">
      <name value="8a-ServeObservations"/>
      <description value="Test Server query operation for Observations"/>
      <action>
         <operation>
            <type>
               <system value="http://hl7.org/fhir/restful-interaction"/>
               <code value="search"/>
            </type>
            <resource value="Observation"/>
            <description value="Test XIS server to serve Observation resources."/>
            <accept value="json"/>
            <destination value="1"/>
            <encodeRequestUrl value="true"/>
            <origin value="1"/>
            <params value="?context=EpisodeOfCare/${episode-id}"/>
            <requestHeader>
               <field value="Authorization"/>
               <value value="${patient-token-id}"/>
            </requestHeader>
            <requestHeader>
               <field value="MedMij-Request-ID"/>
               <value value="${UUID}"/>
            </requestHeader>
            <requestHeader>
               <field value="X-Correlation-ID"/>
               <value value="${X-Correlation-ID}"/>
            </requestHeader>
         </operation>
      </action>
      <action>
         <assert>
            <description value="Confirm that the operation was successful"/>
            <operator value="in"/>
            <responseCode value="200,201"/>
            <stopTestOnFail value="true"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that the returned resource type is Bundle."/>
            <direction value="response"/>
            <resource value="Bundle"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that the returned Bundle type is searchset."/>
            <direction value="response"/>
            <expression value="Bundle.type"/>
            <operator value="equals"/>
            <stopTestOnFail value="false"/>
            <value value="searchset"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that all returned resources contain an Resource.id except when temporary ids are used in the Bundle. The only time that a resource does not have an id is when it is being submitted to the server using a create operation: https://www.hl7.org/fhir/STU3/resource-definitions.html#Resource.id "/>
            <direction value="response"/>
            <expression value="Bundle.entry.all( $this.fullUrl.matches('^urn:oid:[0-2](\\.(0|[1-9]\\d*))*$') or $this.fullUrl.matches('^urn:uuid:[A-Fa-f\\d]{8}-[A-Fa-f\\d]{4}-[A-Fa-f\\d]{4}-[A-Fa-f\\d]{4}-[A-Fa-f\\d]{12}$') or $this.resource.id.exists())"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that all returned resources except OperationOutcome and Binary contain a meta.profile tag."/>
            <direction value="response"/>
            <expression value="Bundle.entry.resource.where(is(OperationOutcome).not()).where(is(Binary).not()).where(meta.profile.empty()).empty()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that the fullUrl does not disagree with the id in the resource, see http://hl7.org/fhir/stu3/bundle-definitions.html#Bundle.entry.fullUrl"/>
            <direction value="response"/>
            <expression value="Bundle.entry.where(fullUrl.exists() and resource.id.exists()).all($this.fullUrl.endsWith($this.resource.id))"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that the fullUrl is an absolute URL, an uuid or an oid."/>
            <direction value="response"/>
            <expression value="Bundle.entry.fullUrl.all( startsWith('http://') or startsWith('https://') or matches('^urn:oid:[0-2](\\.(0|[1-9]\\d*))*$') or matches('^urn:uuid:[A-Fa-f\\d]{8}-[A-Fa-f\\d]{4}-[A-Fa-f\\d]{4}-[A-Fa-f\\d]{4}-[A-Fa-f\\d]{12}$') )"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that the returned Bundle conforms to the base FHIR specification and the resources to the stated profiles in the meta.profile tag."/>
            <direction value="response"/>
            <stopTestOnFail value="false"/>
            <validateProfileId value="Bundle-profile"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that all Coding elements contain both a .system and a .code."/>
            <direction value="response"/>
            <expression value="Bundle.descendants().where($this.is(Coding)).all(system.exists() and code.exists())"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that the OID of the zib valueset is not used for the system of a coding element."/>
            <direction value="response"/>
            <expression value="Bundle.descendants().where($this.is(coding)).where(system.startsWith('urn:oid:2.16.840.1.113883.2.4.3.11.60.40.2')).exists().not()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that all CodeableConcept elements contain either a coding.display or a text value if no Coding exists or has an extension (e.g. a nullFlavor or data-absent-reason extension). For more information see https://informatiestandaarden.nictiz.nl/wiki/FHIR:V1.0_FHIR_IG_STU3Use_of_coded_concepts."/>
            <direction value="response"/>
            <expression value="Bundle.descendants().where($this.is(CodeableConcept)) .all(coding.display.exists() or text.exists() or extension.exists())"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that all References have a display value, see https://informatiestandaarden.nictiz.nl/wiki/FHIR:V1.0_FHIR_IG_STU3#Use_of_the_reference_datatype."/>
            <direction value="response"/>
            <expression value="Bundle.descendants().where($this.is(Reference)).all(display.exists() or extension.where(url = 'http://hl7.org/fhir/StructureDefinition/data-absent-reason').exists() or extension.where(url = 'http://hl7.org/fhir/StructureDefinition/iso21090-nullFlavor').exists())"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that all Identifiers have both a .system and a .value. In rare cases where a general category of identifiers can be used, .type can replace .system. Edge cases for both .system and .type to be unknown are not applicable to Nictiz. For more information, see https://www.hl7.org/fhir/stu3/datatypes.html#Identifier."/>
            <direction value="response"/>
            <expression value="Bundle.descendants().where($this.is(Identifier)).all((system.exists() or type.exists()) and value.exists())"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that Bundle does not use Burgerservicenummer (BSN) anywhere."/>
            <direction value="response"/>
            <expression value="Bundle.descendants().select(identifier.where(system = 'http://fhir.nl/fhir/NamingSystem/bsn').where(value.empty().not() and value.extension.exists().not())).count() = 0"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that the returned Bundle total value matches or is less than the number of entries in the Bundle. The included resources should not be counted as entries in the Bundle.total."/>
            <direction value="response"/>
            <expression value="Bundle.total.exists() implies (Bundle.total.toInteger() &lt;= Bundle.entry.where(search.empty() or search.mode = 'match').count())"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that the returned Bundle contains a self link."/>
            <direction value="response"/>
            <expression value="Bundle.link.where(relation = 'self' and url.exists()).exists()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that Bundle does not use Burgerservicenummer (BSN) in the self link."/>
            <direction value="response"/>
            <expression value="Bundle.link.url.contains('http://fhir.nl/fhir/NamingSystem/bsn') = false"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <extension url="http://touchstone.aegis.net/touchstone/fhir/testing/StructureDefinition/testscript-assert-rule">
               <extension url="ruleId">
                  <valueId value="assert-response-queryParamsInSelfLink"/>
               </extension>
            </extension>
            <description value="Confirm that the parameters in the request URL are all handled by the server, by inspecting the self link."/>
            <stopTestOnFail value="false"/>
            <warningOnly value="true"/>
         </assert>
      </action>
      <!-- parity -->
      <action>
         <assert>
            <description value="Confirm that the returned searchset Bundle contains 1 Observation resource(s) with code http://loinc.org | 11977-6. (parity)"/>
            <direction value="response"/>
            <expression value="Bundle.where(entry.where(resource.is(Observation)).resource.code.coding.where(system = 'http://loinc.org' and code = '11977-6').count()=1).exists()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <!-- gravidity -->
      <action>
         <assert>
            <description value="Confirm that the returned searchset Bundle contains 1 Observation resource(s) with code http://loinc.org | 11996-6. (gravidity)"/>
            <direction value="response"/>
            <expression value="Bundle.where(entry.where(resource.is(Observation)).resource.code.coding.where(system = 'http://loinc.org' and code = '11996-6').count()=1).exists()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <!-- a terme datum -->
      <action>
         <assert>
            <description value="Confirm that the returned searchset Bundle contains 1 Observation resource(s) with code http://snomed.info/sct | 161714006. (geschatte a terme datum)"/>
            <direction value="response"/>
            <expression value="Bundle.where(entry.where(resource.is(Observation)).resource.code.coding.where(system = 'http://snomed.info/sct' and code = '161714006').count()=1).exists()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <!-- datum laatste menstruatie -->
      <action>
         <assert>
            <description value="Confirm that the returned searchset Bundle contains 1 Observation resource(s) with code http://loinc.org | 8665-2. (geschatte a terme datum)"/>
            <direction value="response"/>
            <expression value="Bundle.where(entry.where(resource.is(Observation)).resource.code.coding.where(system = 'http://loinc.org' and code = '8665-2').count()=1).exists()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <!-- vaccinatie kinkhoest -->
      <action>
         <assert>
            <description value="Confirm that the returned searchset Bundle contains 1 Observation resource(s) with code http://snomed.info/sct | 39343008. (vaccinatie kinkhoest)"/>
            <direction value="response"/>
            <expression value="Bundle.where(entry.where(resource.is(Observation)).resource.code.coding.where(system = 'http://snomed.info/sct' and code = '39343008').count()=1).exists()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <!-- voorgeschiedenis trisomie -->
      <action>
         <assert>
            <description value="Confirm that the returned searchset Bundle contains 1 Observation resource(s) with code http://snomed.info/sct | 390281000146101. (voorgeschiedenis trisomie)"/>
            <direction value="response"/>
            <expression value="Bundle.where(entry.where(resource.is(Observation)).resource.code.coding.where(system = 'http://snomed.info/sct' and code = '390281000146101').count()=1).exists()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <!-- plaats voorkeur bevalling -->
      <action>
         <assert>
            <description value="Confirm that the returned searchset Bundle contains 1 Observation resource(s) with code http://snomed.info/sct | 142961000146102. (plaats voorkeur bevalling)"/>
            <direction value="response"/>
            <expression value="Bundle.where(entry.where(resource.is(Observation)).resource.code.coding.where(system = 'http://snomed.info/sct' and code = '142961000146102').count()=1).exists()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <!-- voorgenomen lijn in zorg -->
      <action>
         <assert>
            <description value="Confirm that the returned searchset Bundle contains 1 Observation resource(s) with code http://snomed.info/sct | 159821000146107. (voorgenomen lijn in zorg)"/>
            <direction value="response"/>
            <expression value="Bundle.where(entry.where(resource.is(Observation)).resource.code.coding.where(system = 'http://snomed.info/sct' and code = '159821000146107').count()=1).exists()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <!-- voorgenomen voeding -->
      <action>
         <assert>
            <description value="Confirm that the returned searchset Bundle contains 1 Observation resource(s) with code http://snomed.info/sct | 169740003. (voorgenomen voeding)"/>
            <direction value="response"/>
            <expression value="Bundle.where(entry.where(resource.is(Observation)).resource.code.coding.where(system = 'http://snomed.info/sct' and code = '169740003').count()=1).exists()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <!-- zorg voor kind -->
      <action>
         <assert>
            <description value="Confirm that the returned searchset Bundle contains 1 Observation resource(s) with code http://snomed.info/sct | 129879003. (zorg voor kind)"/>
            <direction value="response"/>
            <expression value="Bundle.where(entry.where(resource.is(Observation)).resource.code.coding.where(system = 'http://snomed.info/sct' and code = '129879003').count()=1).exists()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <!-- hartslag -->
      <action>
         <assert>
            <description value="Confirm that the returned searchset Bundle contains 1 Observation resource(s) with code http://loinc.org | 8893-0. (hartslag)"/>
            <direction value="response"/>
            <expression value="Bundle.where(entry.where(resource.is(Observation)).resource.code.coding.where(system = 'http://loinc.org' and code = '8893-0').count()=1).exists()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <!-- urinatie geweest -->
      <action>
         <assert>
            <description value="Confirm that the returned searchset Bundle contains 1 Observation resource(s) with code http://snomed.info/sct | 249278006. (urinatie geweest)"/>
            <direction value="response"/>
            <expression value="Bundle.where(entry.where(resource.is(Observation)).resource.code.coding.where(system = 'http://snomed.info/sct' and code = '249278006').count()=1).exists()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <!-- lochia -->
      <action>
         <assert>
            <description value="Confirm that the returned searchset Bundle contains 2 Observation resource(s) with code http://snomed.info/sct | 249211006. (lochia)"/>
            <direction value="response"/>
            <expression value="Bundle.where(entry.where(resource.is(Observation)).resource.code.coding.where(system = 'http://snomed.info/sct' and code = '249211006').count()=2).exists()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <!-- hoeveelheid lochia -->
      <action>
         <assert>
            <description value="Confirm that the returned searchset Bundle contains 1 Observation resource(s) with code http://snomed.info/sct | 366299003. (hoeveelheid lochia)"/>
            <direction value="response"/>
            <expression value="Bundle.where(entry.where(resource.is(Observation)).resource.code.coding.where(system = 'http://snomed.info/sct' and code = '366299003').count()=1).exists()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <!-- stinkende lochia -->
      <action>
         <assert>
            <description value="Confirm that the returned searchset Bundle contains 1 Observation resource(s) with code http://snomed.info/sct | 276375002. (stinkende lochia)"/>
            <direction value="response"/>
            <expression value="Bundle.where(entry.where(resource.is(Observation)).resource.code.coding.where(system = 'http://snomed.info/sct' and code = '276375002').count()=1).exists()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <!-- grote bloedstolsels in lochia -->
      <action>
         <assert>
            <description value="Confirm that the returned searchset Bundle contains 1 Observation resource(s) with code http://snomed.info/sct | 146381000146107. (grote bloedstolsels in lochia)"/>
            <direction value="response"/>
            <expression value="Bundle.where(entry.where(resource.is(Observation)).resource.code.coding.where(system = 'http://snomed.info/sct' and code = '146381000146107').count()=1).exists()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <!-- bevindingen borsten -->
      <action>
         <assert>
            <description value="Confirm that the returned searchset Bundle contains 1 Observation resource(s) with code http://snomed.info/sct | 116339002. (bevindingen borsten)"/>
            <direction value="response"/>
            <expression value="Bundle.where(entry.where(resource.is(Observation)).resource.code.coding.where(system = 'http://snomed.info/sct' and code = '116339002').count()=1).exists()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <!-- flatusincontinentie -->
      <action>
         <assert>
            <description value="Confirm that the returned searchset Bundle contains 1 Observation resource(s) with code http://snomed.info/sct | 249508009. (flatusincontinentie)"/>
            <direction value="response"/>
            <expression value="Bundle.where(entry.where(resource.is(Observation)).resource.code.coding.where(system = 'http://snomed.info/sct' and code = '249508009').count()=1).exists()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <!-- voorlichting anticonceptie -->
      <action>
         <assert>
            <description value="Confirm that the returned searchset Bundle contains 1 Observation resource(s) with code http://snomed.info/sct | 150811000119101. (voorlichting anticonceptie)"/>
            <direction value="response"/>
            <expression value="Bundle.where(entry.where(resource.is(Observation)).resource.code.coding.where(system = 'http://snomed.info/sct' and code = '150811000119101').count()=1).exists()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <!-- conditie perineum -->
      <action>
         <assert>
            <description value="Confirm that the returned searchset Bundle contains 1 Observation resource(s) with code http://snomed.info/sct | 364297003. (conditie perineum)"/>
            <direction value="response"/>
            <expression value="Bundle.where(entry.where(resource.is(Observation)).resource.code.coding.where(system = 'http://snomed.info/sct' and code = '364297003').count()=1).exists()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <!-- bloeddruk (nacontrole) -->
      <action>
         <assert>
            <description value="Confirm that the returned searchset Bundle contains 1 Observation resource(s) with code http://loinc.org | 85354-9. (bloeddruk (nacontrole))"/>
            <direction value="response"/>
            <expression value="Bundle.where(entry.where(resource.is(Observation)).resource.code.coding.where(system = 'http://loinc.org' and code = '85354-9').count()=1).exists()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <!-- voedingspatroon zuigeling -->
      <action>
         <assert>
            <description value="Confirm that the returned searchset Bundle contains 1 Observation resource(s) with code http://snomed.info/sct | 289145007. (voedingspatroon zuigeling)"/>
            <direction value="response"/>
            <expression value="Bundle.where(entry.where(resource.is(Observation)).resource.code.coding.where(system = 'http://snomed.info/sct' and code = '289145007').count()=1).exists()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <!-- lichaamstemperatuur -->
      <action>
         <assert>
            <description value="Confirm that the returned searchset Bundle contains 1 Observation resource(s) with code http://loinc.org | 8310-5. (lichaamstemperatuur)"/>
            <direction value="response"/>
            <expression value="Bundle.where(entry.where(resource.is(Observation)).resource.code.coding.where(system = 'http://loinc.org' and code = '8310-5').count()=1).exists()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <!-- zwangerschapsduur -->
      <action>
         <assert>
            <description value="Confirm that the returned searchset Bundle contains 3 Observation resource(s) with code http://snomed.info/sct | 57036006. (zwangerschapsduur)"/>
            <direction value="response"/>
            <expression value="Bundle.where(entry.where(resource.is(Observation)).resource.code.coding.where(system = 'http://snomed.info/sct' and code = '57036006').count()=3).exists()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <!-- blaasfunctie -->
      <action>
         <assert>
            <description value="Confirm that the returned searchset Bundle contains 1 Observation resource(s) with code http://snomed.info/sct | 28278009. (blaasfunctie)"/>
            <direction value="response"/>
            <expression value="Bundle.where(entry.where(resource.is(Observation)).resource.code.coding.where(system = 'http://snomed.info/sct' and code = '28278009').count()=1).exists()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <!-- darmfunctie -->
      <action>
         <assert>
            <description value="Confirm that the returned searchset Bundle contains 1 Observation resource(s) with code http://snomed.info/sct | 111989001. (darmfunctie)"/>
            <direction value="response"/>
            <expression value="Bundle.where(entry.where(resource.is(Observation)).resource.code.coding.where(system = 'http://snomed.info/sct' and code = '111989001').count()=1).exists()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <!-- foetus -->
      <!-- echo bevindingen algemeen -->
      <action>
         <assert>
            <description value="Confirm that the returned searchset Bundle contains 1 Observation resource(s) with code http://snomed.info/sct | 370379002. (echo bevindingen algemeen)"/>
            <direction value="response"/>
            <expression value="Bundle.where(entry.where(resource.is(Observation)).resource.code.coding.where(system = 'http://snomed.info/sct' and code = '370379002').count()=1).exists()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <!-- buikomtrek -->
      <action>
         <assert>
            <description value="Confirm that the returned searchset Bundle contains 1 Observation resource(s) with code http://loinc.org | 11979-2. (buikomtrek)"/>
            <direction value="response"/>
            <expression value="Bundle.where(entry.where(resource.is(Observation)).resource.code.coding.where(system = 'http://loinc.org' and code = '11979-2').count()=1).exists()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <!-- hoofdomtrek -->
      <action>
         <assert>
            <description value="Confirm that the returned searchset Bundle contains 1 Observation resource(s) with code http://snomed.info/sct | 363812007. (hoofdomtrek)"/>
            <direction value="response"/>
            <expression value="Bundle.where(entry.where(resource.is(Observation)).resource.code.coding.where(system = 'http://snomed.info/sct' and code = '363812007').count()=1).exists()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <!-- kind -->
      <!-- feces -->
      <action>
         <assert>
            <description value="Confirm that the returned searchset Bundle contains 1 Observation resource(s) with code http://snomed.info/sct | 249612005. (feces)"/>
            <direction value="response"/>
            <expression value="Bundle.where(entry.where(resource.is(Observation)).resource.code.coding.where(system = 'http://snomed.info/sct' and code = '249612005').count()=1).exists()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <!-- vitamine K -->
      <action>
         <assert>
            <description value="Confirm that the returned searchset Bundle contains 1 Observation resource(s) with code http://snomed.info/sct | 698350008. (vitamine K)"/>
            <direction value="response"/>
            <expression value="Bundle.where(entry.where(resource.is(Observation)).resource.code.coding.where(system = 'http://snomed.info/sct' and code = '698350008').count()=1).exists()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <!-- neonatale sterfte -->
      <action>
         <assert>
            <description value="Confirm that the returned searchset Bundle contains 1 Observation resource(s) with code http://snomed.info/sct | 276506001. (neonatale sterfte)"/>
            <direction value="response"/>
            <expression value="Bundle.where(entry.where(resource.is(Observation)).resource.code.coding.where(system = 'http://snomed.info/sct' and code = '276506001').count()=1).exists()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <!-- geboortegewicht -->
      <action>
         <assert>
            <description value="Confirm that the returned searchset Bundle contains 1 Observation resource(s) with code http://loinc.org | 8339-4. (geboortegewicht)"/>
            <direction value="response"/>
            <expression value="Bundle.where(entry.where(resource.is(Observation)).resource.code.coding.where(system = 'http://loinc.org' and code = '8339-4').count()=1).exists()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <!-- geboortelengte -->
      <action>
         <assert>
            <description value="Confirm that the returned searchset Bundle contains 1 Observation resource(s) with code http://loinc.org | 89269-5. (geboortelengte)"/>
            <direction value="response"/>
            <expression value="Bundle.where(entry.where(resource.is(Observation)).resource.code.coding.where(system = 'http://loinc.org' and code = '89269-5').count()=1).exists()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <!-- Apgar 1 minuut -->
      <action>
         <assert>
            <description value="Confirm that the returned searchset Bundle contains 1 Observation resource(s) with code http://loinc.org | 9272-6. (Apgar 1 minuut)"/>
            <direction value="response"/>
            <expression value="Bundle.where(entry.where(resource.is(Observation)).resource.code.coding.where(system = 'http://loinc.org' and code = '9272-6').count()=1).exists()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <!-- Apgar 5 minuten -->
      <action>
         <assert>
            <description value="Confirm that the returned searchset Bundle contains 1 Observation resource(s) with code http://loinc.org | 9274-2. (Apgar 5 minuten)"/>
            <direction value="response"/>
            <expression value="Bundle.where(entry.where(resource.is(Observation)).resource.code.coding.where(system = 'http://loinc.org' and code = '9274-2').count()=1).exists()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <!-- Apgar 10 minuten -->
      <action>
         <assert>
            <description value="Confirm that the returned searchset Bundle contains 1 Observation resource(s) with code http://loinc.org | 9271-8. (Apgar 10 minuten)"/>
            <direction value="response"/>
            <expression value="Bundle.where(entry.where(resource.is(Observation)).resource.code.coding.where(system = 'http://loinc.org' and code = '9271-8').count()=1).exists()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <!-- Bevinding huid -->
      <action>
         <assert>
            <description value="Confirm that the returned searchset Bundle contains 1 Observation resource(s) with code http://snomed.info/sct | 364528001. (Bevinding huid)"/>
            <direction value="response"/>
            <expression value="Bundle.where(entry.where(resource.is(Observation)).resource.code.coding.where(system = 'http://snomed.info/sct' and code = '364528001').count()=1).exists()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <!-- Bevinding hoofd-hals -->
      <action>
         <assert>
            <description value="Confirm that the returned searchset Bundle contains 1 Observation resource(s) with code http://snomed.info/sct | 364403006. (Bevinding hoofd-hals)"/>
            <direction value="response"/>
            <expression value="Bundle.where(entry.where(resource.is(Observation)).resource.code.coding.where(system = 'http://snomed.info/sct' and code = '364403006').count()=1).exists()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <!-- Bevinding thorax -->
      <action>
         <assert>
            <description value="Confirm that the returned searchset Bundle contains 1 Observation resource(s) with code http://snomed.info/sct | 364434005. (Bevinding thorax)"/>
            <direction value="response"/>
            <expression value="Bundle.where(entry.where(resource.is(Observation)).resource.code.coding.where(system = 'http://snomed.info/sct' and code = '364434005').count()=1).exists()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <!-- Bevinding abdomen -->
      <action>
         <assert>
            <description value="Confirm that the returned searchset Bundle contains 1 Observation resource(s) with code http://snomed.info/sct | 364446009. (Bevinding abdomen)"/>
            <direction value="response"/>
            <expression value="Bundle.where(entry.where(resource.is(Observation)).resource.code.coding.where(system = 'http://snomed.info/sct' and code = '364446009').count()=1).exists()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <!-- Bevinding rug -->
      <action>
         <assert>
            <description value="Confirm that the returned searchset Bundle contains 1 Observation resource(s) with code http://snomed.info/sct | 364415005. (Bevinding rug)"/>
            <direction value="response"/>
            <expression value="Bundle.where(entry.where(resource.is(Observation)).resource.code.coding.where(system = 'http://snomed.info/sct' and code = '364415005').count()=1).exists()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <!-- Bevinding extremiteiten -->
      <action>
         <assert>
            <description value="Confirm that the returned searchset Bundle contains 1 Observation resource(s) with code http://snomed.info/sct | 363799009. (Bevinding extremiteiten)"/>
            <direction value="response"/>
            <expression value="Bundle.where(entry.where(resource.is(Observation)).resource.code.coding.where(system = 'http://snomed.info/sct' and code = '363799009').count()=1).exists()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <!-- Bevinding genitalia -->
      <action>
         <assert>
            <description value="Confirm that the returned searchset Bundle contains 1 Observation resource(s) with code http://snomed.info/sct | 364204002. (Bevinding genitalia)"/>
            <direction value="response"/>
            <expression value="Bundle.where(entry.where(resource.is(Observation)).resource.code.coding.where(system = 'http://snomed.info/sct' and code = '364204002').count()=1).exists()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <!-- Bevinding neurologie -->
      <action>
         <assert>
            <description value="Confirm that the returned searchset Bundle contains 1 Observation resource(s) with code http://snomed.info/sct | 363820009. (Bevinding neurologie)"/>
            <direction value="response"/>
            <expression value="Bundle.where(entry.where(resource.is(Observation)).resource.code.coding.where(system = 'http://snomed.info/sct' and code = '363820009').count()=1).exists()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <!-- deze zouden eigenlijk mogelijk aan context Encounter moeten hangen? bevalling -->
      <!-- tijdstip gebroken vliezen -->
      <action>
         <assert>
            <description value="Confirm that the returned searchset Bundle contains 1 Observation resource(s) with code http://snomed.info/sct | 289251005. (tijdstip gebroken vliezen)"/>
            <direction value="response"/>
            <expression value="Bundle.where(entry.where(resource.is(Observation)).resource.code.coding.where(system = 'http://snomed.info/sct' and code = '289251005').count()=1).exists()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <!-- vruchtwater -->
      <action>
         <assert>
            <description value="Confirm that the returned searchset Bundle contains 1 Observation resource(s) with code http://snomed.info/sct | 366334007. (vruchtwater)"/>
            <direction value="response"/>
            <expression value="Bundle.where(entry.where(resource.is(Observation)).resource.code.coding.where(system = 'http://snomed.info/sct' and code = '366334007').count()=1).exists()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <!-- type partus -->
      <action>
         <assert>
            <description value="Confirm that the returned searchset Bundle contains 1 Observation resource(s) with code http://snomed.info/sct | 366334007. (type partus)"/>
            <direction value="response"/>
            <expression value="Bundle.where(entry.where(resource.is(Observation)).resource.code.coding.where(system = 'http://snomed.info/sct' and code = '366334007').count()=1).exists()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <!-- ligging kind -->
      <action>
         <assert>
            <description value="Confirm that the returned searchset Bundle contains 1 Observation resource(s) with code http://snomed.info/sct | 271692001. (ligging kind)"/>
            <direction value="response"/>
            <expression value="Bundle.where(entry.where(resource.is(Observation)).resource.code.coding.where(system = 'http://snomed.info/sct' and code = '271692001').count()=1).exists()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <!-- plaats baring -->
      <action>
         <assert>
            <description value="Confirm that the returned searchset Bundle contains 1 Observation resource(s) with code http://snomed.info/sct | 366344009. (plaats baring)"/>
            <direction value="response"/>
            <expression value="Bundle.where(entry.where(resource.is(Observation)).resource.code.coding.where(system = 'http://snomed.info/sct' and code = '366344009').count()=1).exists()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <!-- geboorte placenta -->
      <action>
         <assert>
            <description value="Confirm that the returned searchset Bundle contains 1 Observation resource(s) with code http://snomed.info/sct | 236994008. (geboorte placenta)"/>
            <direction value="response"/>
            <expression value="Bundle.where(entry.where(resource.is(Observation)).resource.code.coding.where(system = 'http://snomed.info/sct' and code = '236994008').count()=1).exists()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <!-- tijdstip geboorte placenta -->
      <action>
         <assert>
            <description value="Confirm that the returned searchset Bundle contains 1 Observation resource(s) with code http://snomed.info/sct | 136311000146100. (tijdstip geboorte placenta)"/>
            <direction value="response"/>
            <expression value="Bundle.where(entry.where(resource.is(Observation)).resource.code.coding.where(system = 'http://snomed.info/sct' and code = '136311000146100').count()=1).exists()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <!-- compleetheid placenta -->
      <action>
         <assert>
            <description value="Confirm that the returned searchset Bundle contains 1 Observation resource(s) with code http://snomed.info/sct | 364343000. (compleetheid placenta)"/>
            <direction value="response"/>
            <expression value="Bundle.where(entry.where(resource.is(Observation)).resource.code.coding.where(system = 'http://snomed.info/sct' and code = '364343000').count()=1).exists()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <!-- placenta PA -->
      <action>
         <assert>
            <description value="Confirm that the returned searchset Bundle contains 1 Observation resource(s) with code http://snomed.info/sct | 168123008. (placenta PA)"/>
            <direction value="response"/>
            <expression value="Bundle.where(entry.where(resource.is(Observation)).resource.code.coding.where(system = 'http://snomed.info/sct' and code = '168123008').count()=1).exists()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <!-- testuitslag PA -->
      <action>
         <assert>
            <description value="Confirm that the returned searchset Bundle contains 1 Observation resource(s) with code http://snomed.info/sct | 726566009. (testuitslag PA)"/>
            <direction value="response"/>
            <expression value="Bundle.where(entry.where(resource.is(Observation)).resource.code.coding.where(system = 'http://snomed.info/sct' and code = '726566009').count()=1).exists()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <!-- vruchtvliezen -->
      <action>
         <assert>
            <description value="Confirm that the returned searchset Bundle contains 1 Observation resource(s) with code http://snomed.info/sct | 364351002. (vruchtvliezen)"/>
            <direction value="response"/>
            <expression value="Bundle.where(entry.where(resource.is(Observation)).resource.code.coding.where(system = 'http://snomed.info/sct' and code = '364351002').count()=1).exists()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <!-- navelstreng -->
      <action>
         <assert>
            <description value="Confirm that the returned searchset Bundle contains 1 Observation resource(s) with code http://snomed.info/sct | 249191003. (navelstreng)"/>
            <direction value="response"/>
            <expression value="Bundle.where(entry.where(resource.is(Observation)).resource.code.coding.where(system = 'http://snomed.info/sct' and code = '249191003').count()=1).exists()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <!-- bloedverlies -->
      <action>
         <assert>
            <description value="Confirm that the returned searchset Bundle contains 1 Observation resource(s) with code http://snomed.info/sct | 364332008. (bloedverlies)"/>
            <direction value="response"/>
            <expression value="Bundle.where(entry.where(resource.is(Observation)).resource.code.coding.where(system = 'http://snomed.info/sct' and code = '364332008').count()=1).exists()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <!-- datum begin eerste fase partus -->
      <action>
         <assert>
            <description value="Confirm that the returned searchset Bundle contains 1 Observation resource(s) with code http://snomed.info/sct | 160621000146107. (datum begin eerste fase partus)"/>
            <direction value="response"/>
            <expression value="Bundle.where(entry.where(resource.is(Observation)).resource.code.coding.where(system = 'http://snomed.info/sct' and code = '160621000146107').count()=1).exists()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <!-- wijze begin eerste fase partus -->
      <action>
         <assert>
            <description value="Confirm that the returned searchset Bundle contains 1 Observation resource(s) with code http://snomed.info/sct | 160611000146102. (wijze begin eerste fase partus)"/>
            <direction value="response"/>
            <expression value="Bundle.where(entry.where(resource.is(Observation)).resource.code.coding.where(system = 'http://snomed.info/sct' and code = '160611000146102').count()=1).exists()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <!-- content asserts -->
      <!-- parity -->
      <!-- gravidity -->
      <!-- datum laatste menstruatie -->
      <!-- vaccinatie kinkhoest -->
      <!-- voorgeschiedenis trisomie -->
      <!-- plaats voorkeur bevalling -->
      <!-- lijn in zorg -->
      <!-- voorkeur wijze van voeden -->
      <!-- zorg voor kind -->
      <!-- hartslag -->
      <!-- urinatie geweest -->
      <!-- lochia -->
      <!-- todo: extra discriminator of selector -->
      <!-- hoeveelheid lochia -->
      <!-- stinkende lochia -->
      <!-- grote bloedstolsels in lochia -->
      <!-- bevindingen borsten -->
      <!-- flatus incontinentie -->
      <!-- voorlichting anticonceptie -->
      <!-- conditie perineum -->
      <!-- bloeddruk (nacontrole) -->
      <!-- voedingspatroon zuigeling -->
      <!-- lichaamstemperatuur -->
      <!-- zwangerschapsduur -->
      <!-- TODO: extra discriminator of selector toevoegen -->
      <!-- blaasfunctie -->
      <!-- darmfunctie -->
      <!-- foetus -->
      <!-- echo bevindingen algemeen -->
      <!-- buikomtrek -->
      <!-- hoofdomtrek -->
      <!-- kind -->
      <!-- feces -->
      <!-- vitamine K -->
      <!-- neonatale sterfte -->
      <!-- geboortegewicht -->
      <!-- geboortelengte -->
      <!-- Apgar 1 minuut  -->
      <!-- Apgar 5 minuten  -->
      <!-- Apgar 10 minuten  -->
      <!-- Bevinding huid  -->
      <!-- Bevinding hoofd-hals  -->
      <!-- Bevinding thorax  -->
      <!-- Bevinding abdomen  -->
      <!-- Bevinding rug  -->
      <!-- Bevinding extremiteiten -->
      <!-- Bevinding genitalia -->
      <!-- Bevinding neurologie -->
      <!-- deze zouden eigenlijk mogelijk aan context Encounter moeten hangen? bevalling -->
      <!-- tijdstip gebroken vliezen -->
      <!-- vruchtwater -->
      <!-- type partus -->
      <!-- ligging kind -->
      <!-- plaats baring -->
      <!-- geboorte placenta -->
      <!-- compleetheid placenta -->
      <!-- placenta PA -->
      <!-- testuitslag PA -->
      <!-- navelstreng -->
      <!-- bloedverlies -->
      <!-- datum begin eerste fase partus -->
      <!-- wijze begin eerste fase partus -->
   </test>
   <test id="8b-ServeObservations">
      <name value="8b-ServeObservations"/>
      <description value="Test Server query operation for Observations"/>
      <action>
         <operation>
            <type>
               <system value="http://hl7.org/fhir/restful-interaction"/>
               <code value="search"/>
            </type>
            <resource value="Observation"/>
            <description value="Test XIS server to serve Observation resources."/>
            <accept value="json"/>
            <destination value="1"/>
            <encodeRequestUrl value="true"/>
            <origin value="1"/>
            <params value="?context:Encounter.episodeofcare=EpisodeOfCare/${episode-id}"/>
            <requestHeader>
               <field value="Authorization"/>
               <value value="${patient-token-id}"/>
            </requestHeader>
            <requestHeader>
               <field value="MedMij-Request-ID"/>
               <value value="${UUID}"/>
            </requestHeader>
            <requestHeader>
               <field value="X-Correlation-ID"/>
               <value value="${X-Correlation-ID}"/>
            </requestHeader>
         </operation>
      </action>
      <action>
         <assert>
            <description value="Confirm that the operation was successful"/>
            <operator value="in"/>
            <responseCode value="200,201"/>
            <stopTestOnFail value="true"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that the returned resource type is Bundle."/>
            <direction value="response"/>
            <resource value="Bundle"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that the returned Bundle type is searchset."/>
            <direction value="response"/>
            <expression value="Bundle.type"/>
            <operator value="equals"/>
            <stopTestOnFail value="false"/>
            <value value="searchset"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that all returned resources contain an Resource.id except when temporary ids are used in the Bundle. The only time that a resource does not have an id is when it is being submitted to the server using a create operation: https://www.hl7.org/fhir/STU3/resource-definitions.html#Resource.id "/>
            <direction value="response"/>
            <expression value="Bundle.entry.all( $this.fullUrl.matches('^urn:oid:[0-2](\\.(0|[1-9]\\d*))*$') or $this.fullUrl.matches('^urn:uuid:[A-Fa-f\\d]{8}-[A-Fa-f\\d]{4}-[A-Fa-f\\d]{4}-[A-Fa-f\\d]{4}-[A-Fa-f\\d]{12}$') or $this.resource.id.exists())"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that all returned resources except OperationOutcome and Binary contain a meta.profile tag."/>
            <direction value="response"/>
            <expression value="Bundle.entry.resource.where(is(OperationOutcome).not()).where(is(Binary).not()).where(meta.profile.empty()).empty()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that the fullUrl does not disagree with the id in the resource, see http://hl7.org/fhir/stu3/bundle-definitions.html#Bundle.entry.fullUrl"/>
            <direction value="response"/>
            <expression value="Bundle.entry.where(fullUrl.exists() and resource.id.exists()).all($this.fullUrl.endsWith($this.resource.id))"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that the fullUrl is an absolute URL, an uuid or an oid."/>
            <direction value="response"/>
            <expression value="Bundle.entry.fullUrl.all( startsWith('http://') or startsWith('https://') or matches('^urn:oid:[0-2](\\.(0|[1-9]\\d*))*$') or matches('^urn:uuid:[A-Fa-f\\d]{8}-[A-Fa-f\\d]{4}-[A-Fa-f\\d]{4}-[A-Fa-f\\d]{4}-[A-Fa-f\\d]{12}$') )"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that the returned Bundle conforms to the base FHIR specification and the resources to the stated profiles in the meta.profile tag."/>
            <direction value="response"/>
            <stopTestOnFail value="false"/>
            <validateProfileId value="Bundle-profile"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that all Coding elements contain both a .system and a .code."/>
            <direction value="response"/>
            <expression value="Bundle.descendants().where($this.is(Coding)).all(system.exists() and code.exists())"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that the OID of the zib valueset is not used for the system of a coding element."/>
            <direction value="response"/>
            <expression value="Bundle.descendants().where($this.is(coding)).where(system.startsWith('urn:oid:2.16.840.1.113883.2.4.3.11.60.40.2')).exists().not()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that all CodeableConcept elements contain either a coding.display or a text value if no Coding exists or has an extension (e.g. a nullFlavor or data-absent-reason extension). For more information see https://informatiestandaarden.nictiz.nl/wiki/FHIR:V1.0_FHIR_IG_STU3Use_of_coded_concepts."/>
            <direction value="response"/>
            <expression value="Bundle.descendants().where($this.is(CodeableConcept)) .all(coding.display.exists() or text.exists() or extension.exists())"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that all References have a display value, see https://informatiestandaarden.nictiz.nl/wiki/FHIR:V1.0_FHIR_IG_STU3#Use_of_the_reference_datatype."/>
            <direction value="response"/>
            <expression value="Bundle.descendants().where($this.is(Reference)).all(display.exists() or extension.where(url = 'http://hl7.org/fhir/StructureDefinition/data-absent-reason').exists() or extension.where(url = 'http://hl7.org/fhir/StructureDefinition/iso21090-nullFlavor').exists())"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that all Identifiers have both a .system and a .value. In rare cases where a general category of identifiers can be used, .type can replace .system. Edge cases for both .system and .type to be unknown are not applicable to Nictiz. For more information, see https://www.hl7.org/fhir/stu3/datatypes.html#Identifier."/>
            <direction value="response"/>
            <expression value="Bundle.descendants().where($this.is(Identifier)).all((system.exists() or type.exists()) and value.exists())"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that Bundle does not use Burgerservicenummer (BSN) anywhere."/>
            <direction value="response"/>
            <expression value="Bundle.descendants().select(identifier.where(system = 'http://fhir.nl/fhir/NamingSystem/bsn').where(value.empty().not() and value.extension.exists().not())).count() = 0"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that the returned Bundle total value matches or is less than the number of entries in the Bundle. The included resources should not be counted as entries in the Bundle.total."/>
            <direction value="response"/>
            <expression value="Bundle.total.exists() implies (Bundle.total.toInteger() &lt;= Bundle.entry.where(search.empty() or search.mode = 'match').count())"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that the returned Bundle contains a self link."/>
            <direction value="response"/>
            <expression value="Bundle.link.where(relation = 'self' and url.exists()).exists()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that Bundle does not use Burgerservicenummer (BSN) in the self link."/>
            <direction value="response"/>
            <expression value="Bundle.link.url.contains('http://fhir.nl/fhir/NamingSystem/bsn') = false"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <extension url="http://touchstone.aegis.net/touchstone/fhir/testing/StructureDefinition/testscript-assert-rule">
               <extension url="ruleId">
                  <valueId value="assert-response-queryParamsInSelfLink"/>
               </extension>
            </extension>
            <description value="Confirm that the parameters in the request URL are all handled by the server, by inspecting the self link."/>
            <stopTestOnFail value="false"/>
            <warningOnly value="true"/>
         </assert>
      </action>
      <!-- bewegingspatroon foetus -->
      <action>
         <assert>
            <description value="Confirm that the returned searchset Bundle contains 1 Observation resource(s) with code http://snomed.info/sct | 364618000. (bewegingspatroon foetus)"/>
            <direction value="response"/>
            <expression value="Bundle.where(entry.where(resource.is(Observation)).resource.code.coding.where(system = 'http://snomed.info/sct' and code = '364618000').count()=1).exists()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <!-- hoogte uterus -->
      <action>
         <assert>
            <description value="Confirm that the returned searchset Bundle contains 1 Observation resource(s) with code http://snomed.info/sct | 364265003. (hoogte uterus)"/>
            <direction value="response"/>
            <expression value="Bundle.where(entry.where(resource.is(Observation)).resource.code.coding.where(system = 'http://snomed.info/sct' and code = '364265003').count()=1).exists()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <!-- ligging foetus -->
      <action>
         <assert>
            <description value="Confirm that the returned searchset Bundle contains 1 Observation resource(s) with code http://snomed.info/sct | 249062004. (ligging foetus)"/>
            <direction value="response"/>
            <expression value="Bundle.where(entry.where(resource.is(Observation)).resource.code.coding.where(system = 'http://snomed.info/sct' and code = '249062004').count()=1).exists()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <!-- indaling foetus -->
      <action>
         <assert>
            <description value="Confirm that the returned searchset Bundle contains 1 Observation resource(s) with code http://snomed.info/sct | 364611006. (indaling foetus)"/>
            <direction value="response"/>
            <expression value="Bundle.where(entry.where(resource.is(Observation)).resource.code.coding.where(system = 'http://snomed.info/sct' and code = '364611006').count()=1).exists()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <!-- bewegingspatroon foetus -->
      <!-- hoogte uterus -->
      <!-- ligging foetus -->
      <!-- indaling foetus -->
   </test>
   <test id="9-ServeProcedures">
      <name value="9-ServeProcedures"/>
      <description value="Test Server query operation for (Obstetric) Procedures"/>
      <action>
         <operation>
            <type>
               <system value="http://hl7.org/fhir/restful-interaction"/>
               <code value="search"/>
            </type>
            <resource value="Procedure"/>
            <description value="Test XIS server to serve Procedure resources."/>
            <accept value="json"/>
            <destination value="1"/>
            <encodeRequestUrl value="true"/>
            <origin value="1"/>
            <params value="?context=EpisodeOfCare/${episode-id}&amp;_include=Procedure:performer&amp;_include=Procedure:based-on"/>
            <requestHeader>
               <field value="Authorization"/>
               <value value="${patient-token-id}"/>
            </requestHeader>
            <requestHeader>
               <field value="MedMij-Request-ID"/>
               <value value="${UUID}"/>
            </requestHeader>
            <requestHeader>
               <field value="X-Correlation-ID"/>
               <value value="${X-Correlation-ID}"/>
            </requestHeader>
         </operation>
      </action>
      <action>
         <assert>
            <description value="Confirm that the operation was successful"/>
            <operator value="in"/>
            <responseCode value="200,201"/>
            <stopTestOnFail value="true"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that the returned resource type is Bundle."/>
            <direction value="response"/>
            <resource value="Bundle"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that the returned Bundle type is searchset."/>
            <direction value="response"/>
            <expression value="Bundle.type"/>
            <operator value="equals"/>
            <stopTestOnFail value="false"/>
            <value value="searchset"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that all returned resources contain an Resource.id except when temporary ids are used in the Bundle. The only time that a resource does not have an id is when it is being submitted to the server using a create operation: https://www.hl7.org/fhir/STU3/resource-definitions.html#Resource.id "/>
            <direction value="response"/>
            <expression value="Bundle.entry.all( $this.fullUrl.matches('^urn:oid:[0-2](\\.(0|[1-9]\\d*))*$') or $this.fullUrl.matches('^urn:uuid:[A-Fa-f\\d]{8}-[A-Fa-f\\d]{4}-[A-Fa-f\\d]{4}-[A-Fa-f\\d]{4}-[A-Fa-f\\d]{12}$') or $this.resource.id.exists())"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that all returned resources except OperationOutcome and Binary contain a meta.profile tag."/>
            <direction value="response"/>
            <expression value="Bundle.entry.resource.where(is(OperationOutcome).not()).where(is(Binary).not()).where(meta.profile.empty()).empty()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that the fullUrl does not disagree with the id in the resource, see http://hl7.org/fhir/stu3/bundle-definitions.html#Bundle.entry.fullUrl"/>
            <direction value="response"/>
            <expression value="Bundle.entry.where(fullUrl.exists() and resource.id.exists()).all($this.fullUrl.endsWith($this.resource.id))"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that the fullUrl is an absolute URL, an uuid or an oid."/>
            <direction value="response"/>
            <expression value="Bundle.entry.fullUrl.all( startsWith('http://') or startsWith('https://') or matches('^urn:oid:[0-2](\\.(0|[1-9]\\d*))*$') or matches('^urn:uuid:[A-Fa-f\\d]{8}-[A-Fa-f\\d]{4}-[A-Fa-f\\d]{4}-[A-Fa-f\\d]{4}-[A-Fa-f\\d]{12}$') )"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that the returned Bundle conforms to the base FHIR specification and the resources to the stated profiles in the meta.profile tag."/>
            <direction value="response"/>
            <stopTestOnFail value="false"/>
            <validateProfileId value="Bundle-profile"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that all Coding elements contain both a .system and a .code."/>
            <direction value="response"/>
            <expression value="Bundle.descendants().where($this.is(Coding)).all(system.exists() and code.exists())"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that the OID of the zib valueset is not used for the system of a coding element."/>
            <direction value="response"/>
            <expression value="Bundle.descendants().where($this.is(coding)).where(system.startsWith('urn:oid:2.16.840.1.113883.2.4.3.11.60.40.2')).exists().not()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that all CodeableConcept elements contain either a coding.display or a text value if no Coding exists or has an extension (e.g. a nullFlavor or data-absent-reason extension). For more information see https://informatiestandaarden.nictiz.nl/wiki/FHIR:V1.0_FHIR_IG_STU3Use_of_coded_concepts."/>
            <direction value="response"/>
            <expression value="Bundle.descendants().where($this.is(CodeableConcept)) .all(coding.display.exists() or text.exists() or extension.exists())"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that all References have a display value, see https://informatiestandaarden.nictiz.nl/wiki/FHIR:V1.0_FHIR_IG_STU3#Use_of_the_reference_datatype."/>
            <direction value="response"/>
            <expression value="Bundle.descendants().where($this.is(Reference)).all(display.exists() or extension.where(url = 'http://hl7.org/fhir/StructureDefinition/data-absent-reason').exists() or extension.where(url = 'http://hl7.org/fhir/StructureDefinition/iso21090-nullFlavor').exists())"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that all Identifiers have both a .system and a .value. In rare cases where a general category of identifiers can be used, .type can replace .system. Edge cases for both .system and .type to be unknown are not applicable to Nictiz. For more information, see https://www.hl7.org/fhir/stu3/datatypes.html#Identifier."/>
            <direction value="response"/>
            <expression value="Bundle.descendants().where($this.is(Identifier)).all((system.exists() or type.exists()) and value.exists())"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that Bundle does not use Burgerservicenummer (BSN) anywhere."/>
            <direction value="response"/>
            <expression value="Bundle.descendants().select(identifier.where(system = 'http://fhir.nl/fhir/NamingSystem/bsn').where(value.empty().not() and value.extension.exists().not())).count() = 0"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that the returned Bundle total value matches or is less than the number of entries in the Bundle. The included resources should not be counted as entries in the Bundle.total."/>
            <direction value="response"/>
            <expression value="Bundle.total.exists() implies (Bundle.total.toInteger() &lt;= Bundle.entry.where(search.empty() or search.mode = 'match').count())"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that the returned Bundle contains a self link."/>
            <direction value="response"/>
            <expression value="Bundle.link.where(relation = 'self' and url.exists()).exists()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that Bundle does not use Burgerservicenummer (BSN) in the self link."/>
            <direction value="response"/>
            <expression value="Bundle.link.url.contains('http://fhir.nl/fhir/NamingSystem/bsn') = false"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <extension url="http://touchstone.aegis.net/touchstone/fhir/testing/StructureDefinition/testscript-assert-rule">
               <extension url="ruleId">
                  <valueId value="assert-response-queryParamsInSelfLink"/>
               </extension>
            </extension>
            <description value="Confirm that the parameters in the request URL are all handled by the server, by inspecting the self link."/>
            <stopTestOnFail value="false"/>
            <warningOnly value="true"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that the response Bundle contains 6 Procedure resource(s). "/>
            <direction value="response"/>
            <expression value="Bundle.entry.where(resource.is(Procedure)).count() = 6"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <!--      <nts:include value="assert.response.numResources" scope="common" resource="Organization" count="0"/>
      <nts:include value="assert.response.numResources" scope="common" resource="ProcedureRequest" count="0"/>-->
      <!-- echografie foetus -->
      <action>
         <assert>
            <description value="Confirm that the returned searchset Bundle contains 1 Procedure resource(s) with code http://snomed.info/sct | 241491007. (echografie foetus)"/>
            <direction value="response"/>
            <expression value="Bundle.where(entry.where(resource.is(Procedure)).resource.code.coding.where(system = 'http://snomed.info/sct' and code = '241491007').count()=1).exists()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <!-- bevalling -->
      <action>
         <assert>
            <description value="Confirm that the returned searchset Bundle contains 1 Procedure resource(s) with code http://snomed.info/sct | 236973005. (bevalling)"/>
            <direction value="response"/>
            <expression value="Bundle.where(entry.where(resource.is(Procedure)).resource.code.coding.where(system = 'http://snomed.info/sct' and code = '236973005').count()=1).exists()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <!-- vaginaal toucher -->
      <action>
         <assert>
            <description value="Confirm that the returned searchset Bundle contains 1 Procedure resource(s) with code http://snomed.info/sct | 51597003. (vaginaal toucher)"/>
            <direction value="response"/>
            <expression value="Bundle.where(entry.where(resource.is(Procedure)).resource.code.coding.where(system = 'http://snomed.info/sct' and code = '51597003').count()=1).exists()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <!-- sectio -->
      <action>
         <assert>
            <description value="Confirm that the returned searchset Bundle contains 1 Procedure resource(s) with code http://snomed.info/sct | 80801000146105. (sectio)"/>
            <direction value="response"/>
            <expression value="Bundle.where(entry.where(resource.is(Procedure)).resource.code.coding.where(system = 'http://snomed.info/sct' and code = '80801000146105').count()=1).exists()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <!-- prenatale risico evaluatie -->
      <action>
         <assert>
            <description value="Confirm that the returned searchset Bundle contains 1 Procedure resource(s) with code http://snomed.info/sct | 713076009. (ligging foetus)"/>
            <direction value="response"/>
            <expression value="Bundle.where(entry.where(resource.is(Procedure)).resource.code.coding.where(system = 'http://snomed.info/sct' and code = '713076009').count()=1).exists()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <!-- geboorte -->
      <action>
         <assert>
            <description value="Confirm that the returned searchset Bundle contains 1 Procedure resource(s) with code http://snomed.info/sct | 3950001. (geboorte)"/>
            <direction value="response"/>
            <expression value="Bundle.where(entry.where(resource.is(Procedure)).resource.code.coding.where(system = 'http://snomed.info/sct' and code = '3950001').count()=1).exists()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <!-- echografie foetus -->
      <!-- bevalling -->
      <!-- vaginaal toucher -->
      <!-- sectio -->
      <!-- prenatale risico evaluatie -->
      <!-- geboorte -->
   </test>
   <test id="10-ServeCareTeam">
      <name value="10-ServeCareTeam"/>
      <description value="Test Server query operation for CareTeam"/>
      <action>
         <operation>
            <type>
               <system value="http://hl7.org/fhir/restful-interaction"/>
               <code value="search"/>
            </type>
            <resource value="CareTeam"/>
            <description value="Test XIS server to serve CareTeam resources."/>
            <accept value="json"/>
            <destination value="1"/>
            <encodeRequestUrl value="true"/>
            <origin value="1"/>
            <params value="?context=EpisodeOfCare/${episode-id}"/>
            <requestHeader>
               <field value="Authorization"/>
               <value value="${patient-token-id}"/>
            </requestHeader>
            <requestHeader>
               <field value="MedMij-Request-ID"/>
               <value value="${UUID}"/>
            </requestHeader>
            <requestHeader>
               <field value="X-Correlation-ID"/>
               <value value="${X-Correlation-ID}"/>
            </requestHeader>
         </operation>
      </action>
      <action>
         <assert>
            <description value="Confirm that the operation was successful"/>
            <operator value="in"/>
            <responseCode value="200,201"/>
            <stopTestOnFail value="true"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that the returned resource type is Bundle."/>
            <direction value="response"/>
            <resource value="Bundle"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that the returned Bundle type is searchset."/>
            <direction value="response"/>
            <expression value="Bundle.type"/>
            <operator value="equals"/>
            <stopTestOnFail value="false"/>
            <value value="searchset"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that all returned resources contain an Resource.id except when temporary ids are used in the Bundle. The only time that a resource does not have an id is when it is being submitted to the server using a create operation: https://www.hl7.org/fhir/STU3/resource-definitions.html#Resource.id "/>
            <direction value="response"/>
            <expression value="Bundle.entry.all( $this.fullUrl.matches('^urn:oid:[0-2](\\.(0|[1-9]\\d*))*$') or $this.fullUrl.matches('^urn:uuid:[A-Fa-f\\d]{8}-[A-Fa-f\\d]{4}-[A-Fa-f\\d]{4}-[A-Fa-f\\d]{4}-[A-Fa-f\\d]{12}$') or $this.resource.id.exists())"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that all returned resources except OperationOutcome and Binary contain a meta.profile tag."/>
            <direction value="response"/>
            <expression value="Bundle.entry.resource.where(is(OperationOutcome).not()).where(is(Binary).not()).where(meta.profile.empty()).empty()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that the fullUrl does not disagree with the id in the resource, see http://hl7.org/fhir/stu3/bundle-definitions.html#Bundle.entry.fullUrl"/>
            <direction value="response"/>
            <expression value="Bundle.entry.where(fullUrl.exists() and resource.id.exists()).all($this.fullUrl.endsWith($this.resource.id))"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that the fullUrl is an absolute URL, an uuid or an oid."/>
            <direction value="response"/>
            <expression value="Bundle.entry.fullUrl.all( startsWith('http://') or startsWith('https://') or matches('^urn:oid:[0-2](\\.(0|[1-9]\\d*))*$') or matches('^urn:uuid:[A-Fa-f\\d]{8}-[A-Fa-f\\d]{4}-[A-Fa-f\\d]{4}-[A-Fa-f\\d]{4}-[A-Fa-f\\d]{12}$') )"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that the returned Bundle conforms to the base FHIR specification and the resources to the stated profiles in the meta.profile tag."/>
            <direction value="response"/>
            <stopTestOnFail value="false"/>
            <validateProfileId value="Bundle-profile"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that all Coding elements contain both a .system and a .code."/>
            <direction value="response"/>
            <expression value="Bundle.descendants().where($this.is(Coding)).all(system.exists() and code.exists())"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that the OID of the zib valueset is not used for the system of a coding element."/>
            <direction value="response"/>
            <expression value="Bundle.descendants().where($this.is(coding)).where(system.startsWith('urn:oid:2.16.840.1.113883.2.4.3.11.60.40.2')).exists().not()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that all CodeableConcept elements contain either a coding.display or a text value if no Coding exists or has an extension (e.g. a nullFlavor or data-absent-reason extension). For more information see https://informatiestandaarden.nictiz.nl/wiki/FHIR:V1.0_FHIR_IG_STU3Use_of_coded_concepts."/>
            <direction value="response"/>
            <expression value="Bundle.descendants().where($this.is(CodeableConcept)) .all(coding.display.exists() or text.exists() or extension.exists())"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that all References have a display value, see https://informatiestandaarden.nictiz.nl/wiki/FHIR:V1.0_FHIR_IG_STU3#Use_of_the_reference_datatype."/>
            <direction value="response"/>
            <expression value="Bundle.descendants().where($this.is(Reference)).all(display.exists() or extension.where(url = 'http://hl7.org/fhir/StructureDefinition/data-absent-reason').exists() or extension.where(url = 'http://hl7.org/fhir/StructureDefinition/iso21090-nullFlavor').exists())"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that all Identifiers have both a .system and a .value. In rare cases where a general category of identifiers can be used, .type can replace .system. Edge cases for both .system and .type to be unknown are not applicable to Nictiz. For more information, see https://www.hl7.org/fhir/stu3/datatypes.html#Identifier."/>
            <direction value="response"/>
            <expression value="Bundle.descendants().where($this.is(Identifier)).all((system.exists() or type.exists()) and value.exists())"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that Bundle does not use Burgerservicenummer (BSN) anywhere."/>
            <direction value="response"/>
            <expression value="Bundle.descendants().select(identifier.where(system = 'http://fhir.nl/fhir/NamingSystem/bsn').where(value.empty().not() and value.extension.exists().not())).count() = 0"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that the returned Bundle total value matches or is less than the number of entries in the Bundle. The included resources should not be counted as entries in the Bundle.total."/>
            <direction value="response"/>
            <expression value="Bundle.total.exists() implies (Bundle.total.toInteger() &lt;= Bundle.entry.where(search.empty() or search.mode = 'match').count())"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that the returned Bundle contains a self link."/>
            <direction value="response"/>
            <expression value="Bundle.link.where(relation = 'self' and url.exists()).exists()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that Bundle does not use Burgerservicenummer (BSN) in the self link."/>
            <direction value="response"/>
            <expression value="Bundle.link.url.contains('http://fhir.nl/fhir/NamingSystem/bsn') = false"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <extension url="http://touchstone.aegis.net/touchstone/fhir/testing/StructureDefinition/testscript-assert-rule">
               <extension url="ruleId">
                  <valueId value="assert-response-queryParamsInSelfLink"/>
               </extension>
            </extension>
            <description value="Confirm that the parameters in the request URL are all handled by the server, by inspecting the self link."/>
            <stopTestOnFail value="false"/>
            <warningOnly value="true"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that the response Bundle contains 0 CareTeam resource(s). "/>
            <direction value="response"/>
            <expression value="Bundle.entry.where(resource.is(CareTeam)).count() = 0"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
   </test>
   <test id="11-ServeConsent">
      <name value="11-ServeConsent"/>
      <description value="Test Server query operation for Consent"/>
      <action>
         <operation>
            <type>
               <system value="http://hl7.org/fhir/restful-interaction"/>
               <code value="search"/>
            </type>
            <resource value="Consent"/>
            <description value="Test XIS server to serve Consent resources."/>
            <accept value="json"/>
            <destination value="1"/>
            <encodeRequestUrl value="true"/>
            <origin value="1"/>
            <requestHeader>
               <field value="Authorization"/>
               <value value="${patient-token-id}"/>
            </requestHeader>
            <requestHeader>
               <field value="MedMij-Request-ID"/>
               <value value="${UUID}"/>
            </requestHeader>
            <requestHeader>
               <field value="X-Correlation-ID"/>
               <value value="${X-Correlation-ID}"/>
            </requestHeader>
         </operation>
      </action>
      <action>
         <assert>
            <description value="Confirm that the operation was successful"/>
            <operator value="in"/>
            <responseCode value="200,201"/>
            <stopTestOnFail value="true"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that the returned resource type is Bundle."/>
            <direction value="response"/>
            <resource value="Bundle"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that the returned Bundle type is searchset."/>
            <direction value="response"/>
            <expression value="Bundle.type"/>
            <operator value="equals"/>
            <stopTestOnFail value="false"/>
            <value value="searchset"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that all returned resources contain an Resource.id except when temporary ids are used in the Bundle. The only time that a resource does not have an id is when it is being submitted to the server using a create operation: https://www.hl7.org/fhir/STU3/resource-definitions.html#Resource.id "/>
            <direction value="response"/>
            <expression value="Bundle.entry.all( $this.fullUrl.matches('^urn:oid:[0-2](\\.(0|[1-9]\\d*))*$') or $this.fullUrl.matches('^urn:uuid:[A-Fa-f\\d]{8}-[A-Fa-f\\d]{4}-[A-Fa-f\\d]{4}-[A-Fa-f\\d]{4}-[A-Fa-f\\d]{12}$') or $this.resource.id.exists())"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that all returned resources except OperationOutcome and Binary contain a meta.profile tag."/>
            <direction value="response"/>
            <expression value="Bundle.entry.resource.where(is(OperationOutcome).not()).where(is(Binary).not()).where(meta.profile.empty()).empty()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that the fullUrl does not disagree with the id in the resource, see http://hl7.org/fhir/stu3/bundle-definitions.html#Bundle.entry.fullUrl"/>
            <direction value="response"/>
            <expression value="Bundle.entry.where(fullUrl.exists() and resource.id.exists()).all($this.fullUrl.endsWith($this.resource.id))"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that the fullUrl is an absolute URL, an uuid or an oid."/>
            <direction value="response"/>
            <expression value="Bundle.entry.fullUrl.all( startsWith('http://') or startsWith('https://') or matches('^urn:oid:[0-2](\\.(0|[1-9]\\d*))*$') or matches('^urn:uuid:[A-Fa-f\\d]{8}-[A-Fa-f\\d]{4}-[A-Fa-f\\d]{4}-[A-Fa-f\\d]{4}-[A-Fa-f\\d]{12}$') )"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that the returned Bundle conforms to the base FHIR specification and the resources to the stated profiles in the meta.profile tag."/>
            <direction value="response"/>
            <stopTestOnFail value="false"/>
            <validateProfileId value="Bundle-profile"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that all Coding elements contain both a .system and a .code."/>
            <direction value="response"/>
            <expression value="Bundle.descendants().where($this.is(Coding)).all(system.exists() and code.exists())"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that the OID of the zib valueset is not used for the system of a coding element."/>
            <direction value="response"/>
            <expression value="Bundle.descendants().where($this.is(coding)).where(system.startsWith('urn:oid:2.16.840.1.113883.2.4.3.11.60.40.2')).exists().not()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that all CodeableConcept elements contain either a coding.display or a text value if no Coding exists or has an extension (e.g. a nullFlavor or data-absent-reason extension). For more information see https://informatiestandaarden.nictiz.nl/wiki/FHIR:V1.0_FHIR_IG_STU3Use_of_coded_concepts."/>
            <direction value="response"/>
            <expression value="Bundle.descendants().where($this.is(CodeableConcept)) .all(coding.display.exists() or text.exists() or extension.exists())"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that all References have a display value, see https://informatiestandaarden.nictiz.nl/wiki/FHIR:V1.0_FHIR_IG_STU3#Use_of_the_reference_datatype."/>
            <direction value="response"/>
            <expression value="Bundle.descendants().where($this.is(Reference)).all(display.exists() or extension.where(url = 'http://hl7.org/fhir/StructureDefinition/data-absent-reason').exists() or extension.where(url = 'http://hl7.org/fhir/StructureDefinition/iso21090-nullFlavor').exists())"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that all Identifiers have both a .system and a .value. In rare cases where a general category of identifiers can be used, .type can replace .system. Edge cases for both .system and .type to be unknown are not applicable to Nictiz. For more information, see https://www.hl7.org/fhir/stu3/datatypes.html#Identifier."/>
            <direction value="response"/>
            <expression value="Bundle.descendants().where($this.is(Identifier)).all((system.exists() or type.exists()) and value.exists())"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that Bundle does not use Burgerservicenummer (BSN) anywhere."/>
            <direction value="response"/>
            <expression value="Bundle.descendants().select(identifier.where(system = 'http://fhir.nl/fhir/NamingSystem/bsn').where(value.empty().not() and value.extension.exists().not())).count() = 0"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that the returned Bundle total value matches or is less than the number of entries in the Bundle. The included resources should not be counted as entries in the Bundle.total."/>
            <direction value="response"/>
            <expression value="Bundle.total.exists() implies (Bundle.total.toInteger() &lt;= Bundle.entry.where(search.empty() or search.mode = 'match').count())"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that the returned Bundle contains a self link."/>
            <direction value="response"/>
            <expression value="Bundle.link.where(relation = 'self' and url.exists()).exists()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that Bundle does not use Burgerservicenummer (BSN) in the self link."/>
            <direction value="response"/>
            <expression value="Bundle.link.url.contains('http://fhir.nl/fhir/NamingSystem/bsn') = false"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that the response Bundle contains 0 Consent resource(s). "/>
            <direction value="response"/>
            <expression value="Bundle.entry.where(resource.is(Consent)).count() = 0"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
   </test>
   <test id="12-RelatedPerson">
      <name value="12-RelatedPerson"/>
      <description value="Test Server query operation for RelatedPerson"/>
      <action>
         <operation>
            <type>
               <system value="http://hl7.org/fhir/restful-interaction"/>
               <code value="search"/>
            </type>
            <resource value="RelatedPerson"/>
            <description value="Test XIS server to serve RelatedPerson resources."/>
            <accept value="json"/>
            <destination value="1"/>
            <encodeRequestUrl value="true"/>
            <origin value="1"/>
            <requestHeader>
               <field value="Authorization"/>
               <value value="${patient-token-id}"/>
            </requestHeader>
            <requestHeader>
               <field value="MedMij-Request-ID"/>
               <value value="${UUID}"/>
            </requestHeader>
            <requestHeader>
               <field value="X-Correlation-ID"/>
               <value value="${X-Correlation-ID}"/>
            </requestHeader>
         </operation>
      </action>
      <action>
         <assert>
            <description value="Confirm that the operation was successful"/>
            <operator value="in"/>
            <responseCode value="200,201"/>
            <stopTestOnFail value="true"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that the returned resource type is Bundle."/>
            <direction value="response"/>
            <resource value="Bundle"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that the returned Bundle type is searchset."/>
            <direction value="response"/>
            <expression value="Bundle.type"/>
            <operator value="equals"/>
            <stopTestOnFail value="false"/>
            <value value="searchset"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that all returned resources contain an Resource.id except when temporary ids are used in the Bundle. The only time that a resource does not have an id is when it is being submitted to the server using a create operation: https://www.hl7.org/fhir/STU3/resource-definitions.html#Resource.id "/>
            <direction value="response"/>
            <expression value="Bundle.entry.all( $this.fullUrl.matches('^urn:oid:[0-2](\\.(0|[1-9]\\d*))*$') or $this.fullUrl.matches('^urn:uuid:[A-Fa-f\\d]{8}-[A-Fa-f\\d]{4}-[A-Fa-f\\d]{4}-[A-Fa-f\\d]{4}-[A-Fa-f\\d]{12}$') or $this.resource.id.exists())"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that all returned resources except OperationOutcome and Binary contain a meta.profile tag."/>
            <direction value="response"/>
            <expression value="Bundle.entry.resource.where(is(OperationOutcome).not()).where(is(Binary).not()).where(meta.profile.empty()).empty()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that the fullUrl does not disagree with the id in the resource, see http://hl7.org/fhir/stu3/bundle-definitions.html#Bundle.entry.fullUrl"/>
            <direction value="response"/>
            <expression value="Bundle.entry.where(fullUrl.exists() and resource.id.exists()).all($this.fullUrl.endsWith($this.resource.id))"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that the fullUrl is an absolute URL, an uuid or an oid."/>
            <direction value="response"/>
            <expression value="Bundle.entry.fullUrl.all( startsWith('http://') or startsWith('https://') or matches('^urn:oid:[0-2](\\.(0|[1-9]\\d*))*$') or matches('^urn:uuid:[A-Fa-f\\d]{8}-[A-Fa-f\\d]{4}-[A-Fa-f\\d]{4}-[A-Fa-f\\d]{4}-[A-Fa-f\\d]{12}$') )"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that the returned Bundle conforms to the base FHIR specification and the resources to the stated profiles in the meta.profile tag."/>
            <direction value="response"/>
            <stopTestOnFail value="false"/>
            <validateProfileId value="Bundle-profile"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that all Coding elements contain both a .system and a .code."/>
            <direction value="response"/>
            <expression value="Bundle.descendants().where($this.is(Coding)).all(system.exists() and code.exists())"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that the OID of the zib valueset is not used for the system of a coding element."/>
            <direction value="response"/>
            <expression value="Bundle.descendants().where($this.is(coding)).where(system.startsWith('urn:oid:2.16.840.1.113883.2.4.3.11.60.40.2')).exists().not()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that all CodeableConcept elements contain either a coding.display or a text value if no Coding exists or has an extension (e.g. a nullFlavor or data-absent-reason extension). For more information see https://informatiestandaarden.nictiz.nl/wiki/FHIR:V1.0_FHIR_IG_STU3Use_of_coded_concepts."/>
            <direction value="response"/>
            <expression value="Bundle.descendants().where($this.is(CodeableConcept)) .all(coding.display.exists() or text.exists() or extension.exists())"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that all References have a display value, see https://informatiestandaarden.nictiz.nl/wiki/FHIR:V1.0_FHIR_IG_STU3#Use_of_the_reference_datatype."/>
            <direction value="response"/>
            <expression value="Bundle.descendants().where($this.is(Reference)).all(display.exists() or extension.where(url = 'http://hl7.org/fhir/StructureDefinition/data-absent-reason').exists() or extension.where(url = 'http://hl7.org/fhir/StructureDefinition/iso21090-nullFlavor').exists())"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that all Identifiers have both a .system and a .value. In rare cases where a general category of identifiers can be used, .type can replace .system. Edge cases for both .system and .type to be unknown are not applicable to Nictiz. For more information, see https://www.hl7.org/fhir/stu3/datatypes.html#Identifier."/>
            <direction value="response"/>
            <expression value="Bundle.descendants().where($this.is(Identifier)).all((system.exists() or type.exists()) and value.exists())"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that Bundle does not use Burgerservicenummer (BSN) anywhere."/>
            <direction value="response"/>
            <expression value="Bundle.descendants().select(identifier.where(system = 'http://fhir.nl/fhir/NamingSystem/bsn').where(value.empty().not() and value.extension.exists().not())).count() = 0"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that the returned Bundle total value matches or is less than the number of entries in the Bundle. The included resources should not be counted as entries in the Bundle.total."/>
            <direction value="response"/>
            <expression value="Bundle.total.exists() implies (Bundle.total.toInteger() &lt;= Bundle.entry.where(search.empty() or search.mode = 'match').count())"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that the returned Bundle contains a self link."/>
            <direction value="response"/>
            <expression value="Bundle.link.where(relation = 'self' and url.exists()).exists()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that Bundle does not use Burgerservicenummer (BSN) in the self link."/>
            <direction value="response"/>
            <expression value="Bundle.link.url.contains('http://fhir.nl/fhir/NamingSystem/bsn') = false"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that the response Bundle contains 2 RelatedPerson resource(s). "/>
            <direction value="response"/>
            <expression value="Bundle.entry.where(resource.is(RelatedPerson)).count() = 2"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <!-- TODO: add discriminator or selector -->
      <!--      <nts:contentAsserts href="mm-gbz-nl-core-relatedperson-relatedperson-mm-gbz-LILIANLLILIANVAN-DEN-XXX-BERGXXX-YZENDOORN.xml" nts:in-targets="CheckContent"/>
      <nts:contentAsserts href="mm-gbz-nl-core-relatedperson-relatedperson-mm-gbz-JASPERXXX-YZENDOORN.xml" nts:in-targets="CheckContent"/>-->
   </test>
</TestScript>
