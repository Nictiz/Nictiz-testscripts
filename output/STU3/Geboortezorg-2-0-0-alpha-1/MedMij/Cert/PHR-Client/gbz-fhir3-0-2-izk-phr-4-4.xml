<?xml version="1.0" encoding="UTF-8"?>
<TestScript xmlns="http://hl7.org/fhir" xmlns:nts="http://nictiz.nl/xsl/testscript">
   <id value="gbz-fhir3-0-2-ikz-phr-4-4"/>
   <meta>
      <profile value="http://touchstone.aegis.net/touchstone/fhir/testing/StructureDefinition/testscript"/>
   </meta>
   <url value="http://nictiz.nl/fhir/TestScript/gbz-fhir3-0-2-ikz-phr-4-4"/>
   <version value="stu3-3.0-patchlevel 2025-02"/>
   <name value="Nictiz Geboortezorg - Client - Scenario 4.4 - Retrieve Integrale Zwangerschapskaart resources of Wilemijn XXX_Yzendoorn"/>
   <status value="active"/>
   <publisher value="Nictiz"/>
   <contact>
      <name value="Nictiz"/>
      <telecom>
         <system value="email"/>
         <value value="kwalificatie@nictiz.nl"/>
         <use value="work"/>
      </telecom>
   </contact>
   <description value="Scenario 4.4: Retrieve Integrale Zwangerschapskaart resources of Wilemijn XXX_Yzendoorn"/>
   <origin>
      <extension url="http://fhir.interoplab.eu/fhir/StructureDefinition/Interoplab-CL-ext-SUT">
         <valueBoolean value="true"/>
      </extension>
      <index value="1"/>
      <profile>
         <system value="http://terminology.hl7.org/CodeSystem/testscript-profile-origin-types"/>
         <code value="FHIR-Client"/>
      </profile>
   </origin>
   <destination>
      <extension url="http://fhir.interoplab.eu/fhir/StructureDefinition/Interoplab-CL-ext-SUT">
         <valueBoolean value="false"/>
      </extension>
      <index value="1"/>
      <profile>
         <system value="http://terminology.hl7.org/CodeSystem/testscript-profile-destination-types"/>
         <code value="FHIR-Server"/>
      </profile>
   </destination>
   <fixture id="episodeofcare-fixture">
      <autocreate value="false"/>
      <autodelete value="false"/>
      <resource>
         <reference value="../_reference/mm-gbz-bc-MaternalRecord-7846eb5f-6acb-11ec-0000-020000000000.xml"/>
      </resource>
   </fixture>
   <variable>
      <name value="episode-id"/>
      <expression value="EpisodeOfCare.id"/>
      <sourceId value="episodeofcare-fixture"/>
   </variable>
   <variable>
      <name value="T"/>
      <defaultValue value="${CURRENTDATE}"/>
   </variable>
   <test id="1-RetrieveWoman">
      <name value="1-RetrieveWoman"/>
      <description value="Query Patient resource for HCIM Patient"/>
      <action>
         <operation>
            <type>
               <system value="http://hl7.org/fhir/restful-interaction"/>
               <code value="search"/>
            </type>
            <resource value="Patient"/>
            <description value="Test PHR client to retrieve Patient resources."/>
            <destination value="1"/>
            <encodeRequestUrl value="true"/>
            <origin value="1"/>
            <requestHeader>
               <field value="Authorization"/>
               <value value="Bearer 01e5514d-ae75-4d14-b43b-86511e866fce"/>
            </requestHeader>
            <requestHeader>
               <field value="MedMij-Request-ID"/>
               <value value="${UUID}"/>
            </requestHeader>
         </operation>
      </action>
      <action>
         <assert>
            <description value="Confirm that HTTP header Authorization contains the patient token Bearer 01e5514d-ae75-4d14-b43b-86511e866fce"/>
            <direction value="request"/>
            <headerField value="Authorization"/>
            <stopTestOnFail value="false"/>
            <value value="Bearer 01e5514d-ae75-4d14-b43b-86511e866fce"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that query parameter 'patient=' was not present to avoid BSNs in the URL."/>
            <direction value="request"/>
            <operator value="notContains"/>
            <requestURL value="patient="/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that query parameter 'subject=' was not present to avoid BSNs in the URL."/>
            <direction value="request"/>
            <operator value="notContains"/>
            <requestURL value="subject="/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Make sure that the server of the test simulator gives a success response."/>
            <operator value="in"/>
            <responseCode value="200,201"/>
            <stopTestOnFail value="true"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that the server of the test simulator returns a Bundle."/>
            <direction value="response"/>
            <resource value="Bundle"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that the response Bundle contains 1 Patient resource(s). "/>
            <direction value="response"/>
            <expression value="Bundle.entry.where(resource.is(Patient)).count() &gt;= 1"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
   </test>
   <test id="2-RetrievePayer">
      <name value="2-RetrievePayer"/>
      <description value="Query Coverage resource for HCIM Payer"/>
      <action>
         <operation>
            <type>
               <system value="http://hl7.org/fhir/restful-interaction"/>
               <code value="search"/>
            </type>
            <resource value="Coverage"/>
            <description value="Test PHR client to retrieve Coverage resources."/>
            <destination value="1"/>
            <encodeRequestUrl value="true"/>
            <origin value="1"/>
            <requestHeader>
               <field value="Authorization"/>
               <value value="Bearer 01e5514d-ae75-4d14-b43b-86511e866fce"/>
            </requestHeader>
            <requestHeader>
               <field value="MedMij-Request-ID"/>
               <value value="${UUID}"/>
            </requestHeader>
         </operation>
      </action>
      <action>
         <assert>
            <description value="Confirm that HTTP header Authorization contains the patient token Bearer 01e5514d-ae75-4d14-b43b-86511e866fce"/>
            <direction value="request"/>
            <headerField value="Authorization"/>
            <stopTestOnFail value="false"/>
            <value value="Bearer 01e5514d-ae75-4d14-b43b-86511e866fce"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that query parameter 'patient=' was not present to avoid BSNs in the URL."/>
            <direction value="request"/>
            <operator value="notContains"/>
            <requestURL value="patient="/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that query parameter 'subject=' was not present to avoid BSNs in the URL."/>
            <direction value="request"/>
            <operator value="notContains"/>
            <requestURL value="subject="/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Make sure that the server of the test simulator gives a success response."/>
            <operator value="in"/>
            <responseCode value="200,201"/>
            <stopTestOnFail value="true"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that the server of the test simulator returns a Bundle."/>
            <direction value="response"/>
            <resource value="Bundle"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that the response Bundle contains 0 Coverage resource(s). "/>
            <direction value="response"/>
            <expression value="Bundle.entry.where(resource.is(Coverage)).count() &gt;= 0"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
   </test>
   <test id="3-RetrieveFamilyMemberHistory">
      <name value="3-RetrieveFamilyMemberHistory"/>
      <description value="Query FamilyMemberHistory resource for FamilyMemberHistory"/>
      <action>
         <operation>
            <type>
               <system value="http://hl7.org/fhir/restful-interaction"/>
               <code value="search"/>
            </type>
            <resource value="FamilyMemberHistory"/>
            <description value="Test PHR client to retrieve FamilyMemberHistory resources."/>
            <destination value="1"/>
            <encodeRequestUrl value="true"/>
            <origin value="1"/>
            <requestHeader>
               <field value="Authorization"/>
               <value value="Bearer 01e5514d-ae75-4d14-b43b-86511e866fce"/>
            </requestHeader>
            <requestHeader>
               <field value="MedMij-Request-ID"/>
               <value value="${UUID}"/>
            </requestHeader>
         </operation>
      </action>
      <action>
         <assert>
            <description value="Confirm that HTTP header Authorization contains the patient token Bearer 01e5514d-ae75-4d14-b43b-86511e866fce"/>
            <direction value="request"/>
            <headerField value="Authorization"/>
            <stopTestOnFail value="false"/>
            <value value="Bearer 01e5514d-ae75-4d14-b43b-86511e866fce"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that query parameter 'patient=' was not present to avoid BSNs in the URL."/>
            <direction value="request"/>
            <operator value="notContains"/>
            <requestURL value="patient="/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that query parameter 'subject=' was not present to avoid BSNs in the URL."/>
            <direction value="request"/>
            <operator value="notContains"/>
            <requestURL value="subject="/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Make sure that the server of the test simulator gives a success response."/>
            <operator value="in"/>
            <responseCode value="200,201"/>
            <stopTestOnFail value="true"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that the server of the test simulator returns a Bundle."/>
            <direction value="response"/>
            <resource value="Bundle"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that the response Bundle contains 0 FamilyMemberHistory resource(s). "/>
            <direction value="response"/>
            <expression value="Bundle.entry.where(resource.is(FamilyMemberHistory)).count() &gt;= 0"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
   </test>
   <test id="4-RetrieveDeviceUseStatement">
      <name value="4-RetrieveDeviceUseStatement"/>
      <description value="Query DeviceUseStatement resource for HCIM BladderFunction-UrineCatheter"/>
      <action>
         <operation>
            <type>
               <system value="http://hl7.org/fhir/restful-interaction"/>
               <code value="search"/>
            </type>
            <resource value="DeviceUseStatement"/>
            <description value="Test PHR client to retrieve DeviceUseStatement resources."/>
            <destination value="1"/>
            <encodeRequestUrl value="true"/>
            <origin value="1"/>
            <params value="?_include=DeviceUseStatement:device"/>
            <requestHeader>
               <field value="Authorization"/>
               <value value="Bearer 01e5514d-ae75-4d14-b43b-86511e866fce"/>
            </requestHeader>
            <requestHeader>
               <field value="MedMij-Request-ID"/>
               <value value="${UUID}"/>
            </requestHeader>
         </operation>
      </action>
      <action>
         <assert>
            <description value="Confirm that HTTP header Authorization contains the patient token Bearer 01e5514d-ae75-4d14-b43b-86511e866fce"/>
            <direction value="request"/>
            <headerField value="Authorization"/>
            <stopTestOnFail value="false"/>
            <value value="Bearer 01e5514d-ae75-4d14-b43b-86511e866fce"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that query parameter 'patient=' was not present to avoid BSNs in the URL."/>
            <direction value="request"/>
            <operator value="notContains"/>
            <requestURL value="patient="/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that query parameter 'subject=' was not present to avoid BSNs in the URL."/>
            <direction value="request"/>
            <operator value="notContains"/>
            <requestURL value="subject="/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Make sure that the server of the test simulator gives a success response."/>
            <operator value="in"/>
            <responseCode value="200,201"/>
            <stopTestOnFail value="true"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that the server of the test simulator returns a Bundle."/>
            <direction value="response"/>
            <resource value="Bundle"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that the response Bundle contains 1 DeviceUseStatement resource(s). "/>
            <direction value="response"/>
            <expression value="Bundle.entry.where(resource.is(DeviceUseStatement)).count() &gt;= 1"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
   </test>
   <test id="5-RetrieveMaternalRecord">
      <name value="5-RetrieveMaternalRecord"/>
      <description value="Test Client query operation for MaternalRecord (EpisodeOfCare) including managing organization (Organization) and care manager (Practitioner)"/>
      <action>
         <operation>
            <type>
               <system value="http://hl7.org/fhir/restful-interaction"/>
               <code value="search"/>
            </type>
            <resource value="EpisodeOfCare"/>
            <description value="Test PHR client to retrieve EpisodeOfCare resources."/>
            <destination value="1"/>
            <encodeRequestUrl value="true"/>
            <origin value="1"/>
            <params value="?type=http://snomed.info/sct|364320009&amp;_include=EpisodeOfCare:organization&amp;_include=EpisodeOfCare:care-manager"/>
            <requestHeader>
               <field value="Authorization"/>
               <value value="Bearer 01e5514d-ae75-4d14-b43b-86511e866fce"/>
            </requestHeader>
            <requestHeader>
               <field value="MedMij-Request-ID"/>
               <value value="${UUID}"/>
            </requestHeader>
         </operation>
      </action>
      <action>
         <assert>
            <description value="Confirm that HTTP header Authorization contains the patient token Bearer 01e5514d-ae75-4d14-b43b-86511e866fce"/>
            <direction value="request"/>
            <headerField value="Authorization"/>
            <stopTestOnFail value="false"/>
            <value value="Bearer 01e5514d-ae75-4d14-b43b-86511e866fce"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that query parameter 'patient=' was not present to avoid BSNs in the URL."/>
            <direction value="request"/>
            <operator value="notContains"/>
            <requestURL value="patient="/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that query parameter 'subject=' was not present to avoid BSNs in the URL."/>
            <direction value="request"/>
            <operator value="notContains"/>
            <requestURL value="subject="/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Make sure that the server of the test simulator gives a success response."/>
            <operator value="in"/>
            <responseCode value="200,201"/>
            <stopTestOnFail value="true"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that the server of the test simulator returns a Bundle."/>
            <direction value="response"/>
            <resource value="Bundle"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that the response Bundle contains 1 EpisodeOfCare resource(s). "/>
            <direction value="response"/>
            <expression value="Bundle.entry.where(resource.is(EpisodeOfCare)).count() = 1"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that the response Bundle contains 1 Organization resource(s). "/>
            <direction value="response"/>
            <expression value="Bundle.entry.where(resource.is(Organization)).count() = 1"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that the response Bundle contains 1 Practitioner resource(s). "/>
            <direction value="response"/>
            <expression value="Bundle.entry.where(resource.is(Practitioner)).count() = 1"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
   </test>
   <test id="6-RetrieveConditions">
      <name value="6-RetrieveConditions"/>
      <description value="Test Client query operation for Conditions (including Pregnancy)"/>
      <action>
         <operation>
            <type>
               <system value="http://hl7.org/fhir/restful-interaction"/>
               <code value="search"/>
            </type>
            <resource value="Condition"/>
            <description value="Test PHR client to retrieve Condition resources."/>
            <destination value="1"/>
            <encodeRequestUrl value="true"/>
            <origin value="1"/>
            <params value="?context=EpisodeOfCare/${episode-id}"/>
            <requestHeader>
               <field value="Authorization"/>
               <value value="Bearer 01e5514d-ae75-4d14-b43b-86511e866fce"/>
            </requestHeader>
            <requestHeader>
               <field value="MedMij-Request-ID"/>
               <value value="${UUID}"/>
            </requestHeader>
         </operation>
      </action>
      <action>
         <assert>
            <description value="Confirm that HTTP header Authorization contains the patient token Bearer 01e5514d-ae75-4d14-b43b-86511e866fce"/>
            <direction value="request"/>
            <headerField value="Authorization"/>
            <stopTestOnFail value="false"/>
            <value value="Bearer 01e5514d-ae75-4d14-b43b-86511e866fce"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that query parameter 'patient=' was not present to avoid BSNs in the URL."/>
            <direction value="request"/>
            <operator value="notContains"/>
            <requestURL value="patient="/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that query parameter 'subject=' was not present to avoid BSNs in the URL."/>
            <direction value="request"/>
            <operator value="notContains"/>
            <requestURL value="subject="/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Make sure that the server of the test simulator gives a success response."/>
            <operator value="in"/>
            <responseCode value="200,201"/>
            <stopTestOnFail value="true"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that the server of the test simulator returns a Bundle."/>
            <direction value="response"/>
            <resource value="Bundle"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that the response Bundle contains 6 Condition resource(s). "/>
            <direction value="response"/>
            <expression value="Bundle.entry.where(resource.is(Condition)).count() = 6"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <!-- Zwangerschap -->
      <action>
         <assert>
            <description value="Confirm that the returned searchset Bundle contains 1 Condition resource(s) with code http://snomed.info/sct | 118185001. (Zwangerschap)"/>
            <direction value="response"/>
            <expression value="Bundle.where(entry.where(resource.is(Condition)).resource.code.coding.where(system = 'http://snomed.info/sct' and code = '118185001').count()=1).exists()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <!-- Groeiachterstand -->
      <action>
         <assert>
            <description value="Confirm that the returned searchset Bundle contains 1 Condition resource(s) with code http://snomed.info/sct | 22033007. (Groeiachterstand)"/>
            <direction value="response"/>
            <expression value="Bundle.where(entry.where(resource.is(Condition)).resource.code.coding.where(system = 'http://snomed.info/sct' and code = '22033007').count()=1).exists()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <!-- Foetale nood -->
      <action>
         <assert>
            <description value="Confirm that the returned searchset Bundle contains 1 Condition resource(s) with code http://snomed.info/sct | 288274003. (Foetale nood)"/>
            <direction value="response"/>
            <expression value="Bundle.where(entry.where(resource.is(Condition)).resource.code.coding.where(system = 'http://snomed.info/sct' and code = '288274003').count()=1).exists()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <!-- Neonatale hypoglykemie -->
      <action>
         <assert>
            <description value="Confirm that the returned searchset Bundle contains 1 Condition resource(s) with code http://snomed.info/sct | 52767006. (Neonatale hypoglykemie)"/>
            <direction value="response"/>
            <expression value="Bundle.where(entry.where(resource.is(Condition)).resource.code.coding.where(system = 'http://snomed.info/sct' and code = '52767006').count()=1).exists()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <!-- Fractuur van clavicula -->
      <action>
         <assert>
            <description value="Confirm that the returned searchset Bundle contains 1 Condition resource(s) with code http://snomed.info/sct | 58150001. (Fractuur van clavicula)"/>
            <direction value="response"/>
            <expression value="Bundle.where(entry.where(resource.is(Condition)).resource.code.coding.where(system = 'http://snomed.info/sct' and code = '58150001').count()=1).exists()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
   </test>
   <test id="7-RetrieveEncounters">
      <name value="7-RetrieveEncounters"/>
      <description value="Test Client query operation for Encounters"/>
      <action>
         <operation>
            <type>
               <system value="http://hl7.org/fhir/restful-interaction"/>
               <code value="search"/>
            </type>
            <resource value="Encounter"/>
            <description value="Test PHR client to retrieve Encounter resources."/>
            <destination value="1"/>
            <encodeRequestUrl value="true"/>
            <origin value="1"/>
            <params value="?episodeofcare=${episode-id}&amp;_include=Encounter:practitioner"/>
            <requestHeader>
               <field value="Authorization"/>
               <value value="Bearer 01e5514d-ae75-4d14-b43b-86511e866fce"/>
            </requestHeader>
            <requestHeader>
               <field value="MedMij-Request-ID"/>
               <value value="${UUID}"/>
            </requestHeader>
         </operation>
      </action>
      <action>
         <assert>
            <description value="Confirm that HTTP header Authorization contains the patient token Bearer 01e5514d-ae75-4d14-b43b-86511e866fce"/>
            <direction value="request"/>
            <headerField value="Authorization"/>
            <stopTestOnFail value="false"/>
            <value value="Bearer 01e5514d-ae75-4d14-b43b-86511e866fce"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that query parameter 'patient=' was not present to avoid BSNs in the URL."/>
            <direction value="request"/>
            <operator value="notContains"/>
            <requestURL value="patient="/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that query parameter 'subject=' was not present to avoid BSNs in the URL."/>
            <direction value="request"/>
            <operator value="notContains"/>
            <requestURL value="subject="/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Make sure that the server of the test simulator gives a success response."/>
            <operator value="in"/>
            <responseCode value="200,201"/>
            <stopTestOnFail value="true"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that the server of the test simulator returns a Bundle."/>
            <direction value="response"/>
            <resource value="Bundle"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that the response Bundle contains 3 Encounter resource(s). "/>
            <direction value="response"/>
            <expression value="Bundle.entry.where(resource.is(Encounter)).count() = 3"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that the response Bundle contains 1 Practitioner resource(s). "/>
            <direction value="response"/>
            <expression value="Bundle.entry.where(resource.is(Practitioner)).count() = 1"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <!-- Prenatale controle -->
      <action>
         <assert>
            <description value="Confirm that the returned searchset Bundle contains 3 Encounter resource(s) that contains type.coding.code = 11429006. (ContactSoort)"/>
            <direction value="response"/>
            <expression value="Bundle.entry.select(resource as Encounter).where(type.coding.code.where($this='11429006').exists()).count() = 3"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
   </test>
   <test id="8a-RetrieveObservations">
      <name value="8a-RetrieveObservations"/>
      <description value="Test Client query operation for Observations"/>
      <action>
         <operation>
            <type>
               <system value="http://hl7.org/fhir/restful-interaction"/>
               <code value="search"/>
            </type>
            <resource value="Observation"/>
            <description value="Test PHR client to retrieve Observation resources."/>
            <destination value="1"/>
            <encodeRequestUrl value="true"/>
            <origin value="1"/>
            <params value="?context=EpisodeOfCare/${episode-id}"/>
            <requestHeader>
               <field value="Authorization"/>
               <value value="Bearer 01e5514d-ae75-4d14-b43b-86511e866fce"/>
            </requestHeader>
            <requestHeader>
               <field value="MedMij-Request-ID"/>
               <value value="${UUID}"/>
            </requestHeader>
         </operation>
      </action>
      <action>
         <assert>
            <description value="Confirm that HTTP header Authorization contains the patient token Bearer 01e5514d-ae75-4d14-b43b-86511e866fce"/>
            <direction value="request"/>
            <headerField value="Authorization"/>
            <stopTestOnFail value="false"/>
            <value value="Bearer 01e5514d-ae75-4d14-b43b-86511e866fce"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that query parameter 'patient=' was not present to avoid BSNs in the URL."/>
            <direction value="request"/>
            <operator value="notContains"/>
            <requestURL value="patient="/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that query parameter 'subject=' was not present to avoid BSNs in the URL."/>
            <direction value="request"/>
            <operator value="notContains"/>
            <requestURL value="subject="/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Make sure that the server of the test simulator gives a success response."/>
            <operator value="in"/>
            <responseCode value="200,201"/>
            <stopTestOnFail value="true"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that the server of the test simulator returns a Bundle."/>
            <direction value="response"/>
            <resource value="Bundle"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <!-- parity -->
      <action>
         <assert>
            <description value="Confirm that the returned searchset Bundle contains 1 Observation resource(s) with code http://loinc.org | 11977-6. (parity)"/>
            <direction value="response"/>
            <expression value="Bundle.where(entry.where(resource.is(Observation)).resource.code.coding.where(system = 'http://loinc.org' and code = '11977-6').count()=1).exists()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <!-- gravidity -->
      <action>
         <assert>
            <description value="Confirm that the returned searchset Bundle contains 1 Observation resource(s) with code http://loinc.org | 11996-6. (gravidity)"/>
            <direction value="response"/>
            <expression value="Bundle.where(entry.where(resource.is(Observation)).resource.code.coding.where(system = 'http://loinc.org' and code = '11996-6').count()=1).exists()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <!-- geschatte a terme datum -->
      <action>
         <assert>
            <description value="Confirm that the returned searchset Bundle contains 1 Observation resource(s) with code http://snomed.info/sct | 161714006. (geschatte a terme datum)"/>
            <direction value="response"/>
            <expression value="Bundle.where(entry.where(resource.is(Observation)).resource.code.coding.where(system = 'http://snomed.info/sct' and code = '161714006').count()=1).exists()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <!-- datum laatste menstruatie -->
      <action>
         <assert>
            <description value="Confirm that the returned searchset Bundle contains 1 Observation resource(s) with code http://loinc.org | 8665-2. (geschatte a terme datum)"/>
            <direction value="response"/>
            <expression value="Bundle.where(entry.where(resource.is(Observation)).resource.code.coding.where(system = 'http://loinc.org' and code = '8665-2').count()=1).exists()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <!-- vaccinatie kinkhoest -->
      <action>
         <assert>
            <description value="Confirm that the returned searchset Bundle contains 1 Observation resource(s) with code http://snomed.info/sct | 39343008. (vaccinatie kinkhoest)"/>
            <direction value="response"/>
            <expression value="Bundle.where(entry.where(resource.is(Observation)).resource.code.coding.where(system = 'http://snomed.info/sct' and code = '39343008').count()=1).exists()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <!-- voorgeschiedenis trisomie -->
      <action>
         <assert>
            <description value="Confirm that the returned searchset Bundle contains 1 Observation resource(s) with code http://snomed.info/sct | 390281000146101. (voorgeschiedenis trisomie)"/>
            <direction value="response"/>
            <expression value="Bundle.where(entry.where(resource.is(Observation)).resource.code.coding.where(system = 'http://snomed.info/sct' and code = '390281000146101').count()=1).exists()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <!-- plaats voorkeur bevalling -->
      <action>
         <assert>
            <description value="Confirm that the returned searchset Bundle contains 1 Observation resource(s) with code http://snomed.info/sct | 142961000146102. (plaats voorkeur bevalling)"/>
            <direction value="response"/>
            <expression value="Bundle.where(entry.where(resource.is(Observation)).resource.code.coding.where(system = 'http://snomed.info/sct' and code = '142961000146102').count()=1).exists()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <!-- voorgenomen lijn in zorg -->
      <action>
         <assert>
            <description value="Confirm that the returned searchset Bundle contains 1 Observation resource(s) with code http://snomed.info/sct | 159821000146107. (voorgenomen lijn in zorg)"/>
            <direction value="response"/>
            <expression value="Bundle.where(entry.where(resource.is(Observation)).resource.code.coding.where(system = 'http://snomed.info/sct' and code = '159821000146107').count()=1).exists()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <!-- voorgenomen voeding -->
      <action>
         <assert>
            <description value="Confirm that the returned searchset Bundle contains 1 Observation resource(s) with code http://snomed.info/sct | 169740003. (voorgenomen voeding)"/>
            <direction value="response"/>
            <expression value="Bundle.where(entry.where(resource.is(Observation)).resource.code.coding.where(system = 'http://snomed.info/sct' and code = '169740003').count()=1).exists()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <!-- zorg voor kind -->
      <action>
         <assert>
            <description value="Confirm that the returned searchset Bundle contains 1 Observation resource(s) with code http://snomed.info/sct | 129879003. (zorg voor kind)"/>
            <direction value="response"/>
            <expression value="Bundle.where(entry.where(resource.is(Observation)).resource.code.coding.where(system = 'http://snomed.info/sct' and code = '129879003').count()=1).exists()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <!-- hartslag -->
      <action>
         <assert>
            <description value="Confirm that the returned searchset Bundle contains 1 Observation resource(s) with code http://loinc.org | 8893-0. (hartslag)"/>
            <direction value="response"/>
            <expression value="Bundle.where(entry.where(resource.is(Observation)).resource.code.coding.where(system = 'http://loinc.org' and code = '8893-0').count()=1).exists()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <!-- urinatie geweest -->
      <action>
         <assert>
            <description value="Confirm that the returned searchset Bundle contains 1 Observation resource(s) with code http://snomed.info/sct | 249278006. (urinatie geweest)"/>
            <direction value="response"/>
            <expression value="Bundle.where(entry.where(resource.is(Observation)).resource.code.coding.where(system = 'http://snomed.info/sct' and code = '249278006').count()=1).exists()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <!-- lochia -->
      <action>
         <assert>
            <description value="Confirm that the returned searchset Bundle contains 2 Observation resource(s) with code http://snomed.info/sct | 249211006. (lochia)"/>
            <direction value="response"/>
            <expression value="Bundle.where(entry.where(resource.is(Observation)).resource.code.coding.where(system = 'http://snomed.info/sct' and code = '249211006').count()=2).exists()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <!-- hoeveelheid lochia -->
      <action>
         <assert>
            <description value="Confirm that the returned searchset Bundle contains 1 Observation resource(s) with code http://snomed.info/sct | 366299003. (hoeveelheid lochia)"/>
            <direction value="response"/>
            <expression value="Bundle.where(entry.where(resource.is(Observation)).resource.code.coding.where(system = 'http://snomed.info/sct' and code = '366299003').count()=1).exists()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <!-- stinkende lochia -->
      <action>
         <assert>
            <description value="Confirm that the returned searchset Bundle contains 1 Observation resource(s) with code http://snomed.info/sct | 276375002. (stinkende lochia)"/>
            <direction value="response"/>
            <expression value="Bundle.where(entry.where(resource.is(Observation)).resource.code.coding.where(system = 'http://snomed.info/sct' and code = '276375002').count()=1).exists()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <!-- grote bloedstolsels in lochia -->
      <action>
         <assert>
            <description value="Confirm that the returned searchset Bundle contains 1 Observation resource(s) with code http://snomed.info/sct | 146381000146107. (grote bloedstolsels in lochia)"/>
            <direction value="response"/>
            <expression value="Bundle.where(entry.where(resource.is(Observation)).resource.code.coding.where(system = 'http://snomed.info/sct' and code = '146381000146107').count()=1).exists()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <!-- bevindingen borsten -->
      <action>
         <assert>
            <description value="Confirm that the returned searchset Bundle contains 1 Observation resource(s) with code http://snomed.info/sct | 116339002. (bevindingen borsten)"/>
            <direction value="response"/>
            <expression value="Bundle.where(entry.where(resource.is(Observation)).resource.code.coding.where(system = 'http://snomed.info/sct' and code = '116339002').count()=1).exists()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <!-- flatusincontinentie -->
      <action>
         <assert>
            <description value="Confirm that the returned searchset Bundle contains 1 Observation resource(s) with code http://snomed.info/sct | 249508009. (flatusincontinentie)"/>
            <direction value="response"/>
            <expression value="Bundle.where(entry.where(resource.is(Observation)).resource.code.coding.where(system = 'http://snomed.info/sct' and code = '249508009').count()=1).exists()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <!-- voorlichting anticonceptie -->
      <action>
         <assert>
            <description value="Confirm that the returned searchset Bundle contains 1 Observation resource(s) with code http://snomed.info/sct | 150811000119101. (voorlichting anticonceptie)"/>
            <direction value="response"/>
            <expression value="Bundle.where(entry.where(resource.is(Observation)).resource.code.coding.where(system = 'http://snomed.info/sct' and code = '150811000119101').count()=1).exists()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <!-- conditie perineum -->
      <action>
         <assert>
            <description value="Confirm that the returned searchset Bundle contains 1 Observation resource(s) with code http://snomed.info/sct | 364297003. (conditie perineum)"/>
            <direction value="response"/>
            <expression value="Bundle.where(entry.where(resource.is(Observation)).resource.code.coding.where(system = 'http://snomed.info/sct' and code = '364297003').count()=1).exists()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <!-- bloeddruk (nacontrole) -->
      <action>
         <assert>
            <description value="Confirm that the returned searchset Bundle contains 1 Observation resource(s) with code http://loinc.org | 85354-9. (bloeddruk (nacontrole))"/>
            <direction value="response"/>
            <expression value="Bundle.where(entry.where(resource.is(Observation)).resource.code.coding.where(system = 'http://loinc.org' and code = '85354-9').count()=1).exists()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <!-- voedingspatroon zuigeling -->
      <action>
         <assert>
            <description value="Confirm that the returned searchset Bundle contains 1 Observation resource(s) with code http://snomed.info/sct | 289145007. (voedingspatroon zuigeling)"/>
            <direction value="response"/>
            <expression value="Bundle.where(entry.where(resource.is(Observation)).resource.code.coding.where(system = 'http://snomed.info/sct' and code = '289145007').count()=1).exists()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <!-- lichaamstemperatuur -->
      <action>
         <assert>
            <description value="Confirm that the returned searchset Bundle contains 1 Observation resource(s) with code http://loinc.org | 8310-5. (lichaamstemperatuur)"/>
            <direction value="response"/>
            <expression value="Bundle.where(entry.where(resource.is(Observation)).resource.code.coding.where(system = 'http://loinc.org' and code = '8310-5').count()=1).exists()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <!-- zwangerschapsduur -->
      <action>
         <assert>
            <description value="Confirm that the returned searchset Bundle contains 3 Observation resource(s) with code http://snomed.info/sct | 57036006. (zwangerschapsduur)"/>
            <direction value="response"/>
            <expression value="Bundle.where(entry.where(resource.is(Observation)).resource.code.coding.where(system = 'http://snomed.info/sct' and code = '57036006').count()=3).exists()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <!-- blaasfunctie -->
      <action>
         <assert>
            <description value="Confirm that the returned searchset Bundle contains 1 Observation resource(s) with code http://snomed.info/sct | 28278009. (blaasfunctie)"/>
            <direction value="response"/>
            <expression value="Bundle.where(entry.where(resource.is(Observation)).resource.code.coding.where(system = 'http://snomed.info/sct' and code = '28278009').count()=1).exists()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <!-- darmfunctie -->
      <action>
         <assert>
            <description value="Confirm that the returned searchset Bundle contains 1 Observation resource(s) with code http://snomed.info/sct | 111989001. (darmfunctie)"/>
            <direction value="response"/>
            <expression value="Bundle.where(entry.where(resource.is(Observation)).resource.code.coding.where(system = 'http://snomed.info/sct' and code = '111989001').count()=1).exists()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <!-- foetus -->
      <!-- echo bevindingen algemeen -->
      <action>
         <assert>
            <description value="Confirm that the returned searchset Bundle contains 1 Observation resource(s) with code http://snomed.info/sct | 370379002. (echo bevindingen algemeen)"/>
            <direction value="response"/>
            <expression value="Bundle.where(entry.where(resource.is(Observation)).resource.code.coding.where(system = 'http://snomed.info/sct' and code = '370379002').count()=1).exists()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <!-- buikomtrek -->
      <action>
         <assert>
            <description value="Confirm that the returned searchset Bundle contains 1 Observation resource(s) with code http://loinc.org | 11979-2. (buikomtrek)"/>
            <direction value="response"/>
            <expression value="Bundle.where(entry.where(resource.is(Observation)).resource.code.coding.where(system = 'http://loinc.org' and code = '11979-2').count()=1).exists()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <!-- hoofdomtrek -->
      <action>
         <assert>
            <description value="Confirm that the returned searchset Bundle contains 1 Observation resource(s) with code http://snomed.info/sct | 363812007. (hoofdomtrek)"/>
            <direction value="response"/>
            <expression value="Bundle.where(entry.where(resource.is(Observation)).resource.code.coding.where(system = 'http://snomed.info/sct' and code = '363812007').count()=1).exists()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <!-- kind -->
      <!-- feces -->
      <action>
         <assert>
            <description value="Confirm that the returned searchset Bundle contains 1 Observation resource(s) with code http://snomed.info/sct | 249612005. (feces)"/>
            <direction value="response"/>
            <expression value="Bundle.where(entry.where(resource.is(Observation)).resource.code.coding.where(system = 'http://snomed.info/sct' and code = '249612005').count()=1).exists()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <!-- vitamine K -->
      <action>
         <assert>
            <description value="Confirm that the returned searchset Bundle contains 1 Observation resource(s) with code http://snomed.info/sct | 698350008. (vitamine K)"/>
            <direction value="response"/>
            <expression value="Bundle.where(entry.where(resource.is(Observation)).resource.code.coding.where(system = 'http://snomed.info/sct' and code = '698350008').count()=1).exists()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <!-- neonatale sterfte -->
      <action>
         <assert>
            <description value="Confirm that the returned searchset Bundle contains 1 Observation resource(s) with code http://snomed.info/sct | 276506001. (neonatale sterfte)"/>
            <direction value="response"/>
            <expression value="Bundle.where(entry.where(resource.is(Observation)).resource.code.coding.where(system = 'http://snomed.info/sct' and code = '276506001').count()=1).exists()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <!-- geboortegewicht -->
      <action>
         <assert>
            <description value="Confirm that the returned searchset Bundle contains 1 Observation resource(s) with code http://loinc.org | 8339-4. (geboortegewicht)"/>
            <direction value="response"/>
            <expression value="Bundle.where(entry.where(resource.is(Observation)).resource.code.coding.where(system = 'http://loinc.org' and code = '8339-4').count()=1).exists()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <!-- geboortelengte -->
      <action>
         <assert>
            <description value="Confirm that the returned searchset Bundle contains 1 Observation resource(s) with code http://loinc.org | 89269-5. (geboortelengte)"/>
            <direction value="response"/>
            <expression value="Bundle.where(entry.where(resource.is(Observation)).resource.code.coding.where(system = 'http://loinc.org' and code = '89269-5').count()=1).exists()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <!-- Apgar 1 minuut -->
      <action>
         <assert>
            <description value="Confirm that the returned searchset Bundle contains 1 Observation resource(s) with code http://loinc.org | 9272-6. (Apgar 1 minuut)"/>
            <direction value="response"/>
            <expression value="Bundle.where(entry.where(resource.is(Observation)).resource.code.coding.where(system = 'http://loinc.org' and code = '9272-6').count()=1).exists()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <!-- Apgar 5 minuten -->
      <action>
         <assert>
            <description value="Confirm that the returned searchset Bundle contains 1 Observation resource(s) with code http://loinc.org | 9274-2. (Apgar 5 minuten)"/>
            <direction value="response"/>
            <expression value="Bundle.where(entry.where(resource.is(Observation)).resource.code.coding.where(system = 'http://loinc.org' and code = '9274-2').count()=1).exists()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <!-- Apgar 10 minuten -->
      <action>
         <assert>
            <description value="Confirm that the returned searchset Bundle contains 1 Observation resource(s) with code http://loinc.org | 9271-8. (Apgar 10 minuten)"/>
            <direction value="response"/>
            <expression value="Bundle.where(entry.where(resource.is(Observation)).resource.code.coding.where(system = 'http://loinc.org' and code = '9271-8').count()=1).exists()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <!-- Bevinding huid -->
      <action>
         <assert>
            <description value="Confirm that the returned searchset Bundle contains 1 Observation resource(s) with code http://snomed.info/sct | 364528001. (Bevinding huid)"/>
            <direction value="response"/>
            <expression value="Bundle.where(entry.where(resource.is(Observation)).resource.code.coding.where(system = 'http://snomed.info/sct' and code = '364528001').count()=1).exists()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <!-- Bevinding hoofd-hals -->
      <action>
         <assert>
            <description value="Confirm that the returned searchset Bundle contains 1 Observation resource(s) with code http://snomed.info/sct | 364403006. (Bevinding hoofd-hals)"/>
            <direction value="response"/>
            <expression value="Bundle.where(entry.where(resource.is(Observation)).resource.code.coding.where(system = 'http://snomed.info/sct' and code = '364403006').count()=1).exists()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <!-- Bevinding thorax -->
      <action>
         <assert>
            <description value="Confirm that the returned searchset Bundle contains 1 Observation resource(s) with code http://snomed.info/sct | 364434005. (Bevinding thorax)"/>
            <direction value="response"/>
            <expression value="Bundle.where(entry.where(resource.is(Observation)).resource.code.coding.where(system = 'http://snomed.info/sct' and code = '364434005').count()=1).exists()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <!-- Bevinding abdomen -->
      <action>
         <assert>
            <description value="Confirm that the returned searchset Bundle contains 1 Observation resource(s) with code http://snomed.info/sct | 364446009. (Bevinding abdomen)"/>
            <direction value="response"/>
            <expression value="Bundle.where(entry.where(resource.is(Observation)).resource.code.coding.where(system = 'http://snomed.info/sct' and code = '364446009').count()=1).exists()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <!-- Bevinding rug -->
      <action>
         <assert>
            <description value="Confirm that the returned searchset Bundle contains 1 Observation resource(s) with code http://snomed.info/sct | 364415005. (Bevinding rug)"/>
            <direction value="response"/>
            <expression value="Bundle.where(entry.where(resource.is(Observation)).resource.code.coding.where(system = 'http://snomed.info/sct' and code = '364415005').count()=1).exists()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <!-- Bevinding extremiteiten -->
      <action>
         <assert>
            <description value="Confirm that the returned searchset Bundle contains 1 Observation resource(s) with code http://snomed.info/sct | 363799009. (Bevinding extremiteiten)"/>
            <direction value="response"/>
            <expression value="Bundle.where(entry.where(resource.is(Observation)).resource.code.coding.where(system = 'http://snomed.info/sct' and code = '363799009').count()=1).exists()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <!-- Bevinding genitalia -->
      <action>
         <assert>
            <description value="Confirm that the returned searchset Bundle contains 1 Observation resource(s) with code http://snomed.info/sct | 364204002. (Bevinding genitalia)"/>
            <direction value="response"/>
            <expression value="Bundle.where(entry.where(resource.is(Observation)).resource.code.coding.where(system = 'http://snomed.info/sct' and code = '364204002').count()=1).exists()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <!-- Bevinding neurologie -->
      <action>
         <assert>
            <description value="Confirm that the returned searchset Bundle contains 1 Observation resource(s) with code http://snomed.info/sct | 363820009. (Bevinding neurologie)"/>
            <direction value="response"/>
            <expression value="Bundle.where(entry.where(resource.is(Observation)).resource.code.coding.where(system = 'http://snomed.info/sct' and code = '363820009').count()=1).exists()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <!-- deze zouden eigenlijk mogelijk aan context Encounter moeten hangen? bevalling -->
      <!-- tijdstip gebroken vliezen -->
      <action>
         <assert>
            <description value="Confirm that the returned searchset Bundle contains 1 Observation resource(s) with code http://snomed.info/sct | 289251005. (tijdstip gebroken vliezen)"/>
            <direction value="response"/>
            <expression value="Bundle.where(entry.where(resource.is(Observation)).resource.code.coding.where(system = 'http://snomed.info/sct' and code = '289251005').count()=1).exists()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <!-- vruchtwater -->
      <action>
         <assert>
            <description value="Confirm that the returned searchset Bundle contains 1 Observation resource(s) with code http://snomed.info/sct | 366334007. (vruchtwater)"/>
            <direction value="response"/>
            <expression value="Bundle.where(entry.where(resource.is(Observation)).resource.code.coding.where(system = 'http://snomed.info/sct' and code = '366334007').count()=1).exists()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <!-- type partus -->
      <action>
         <assert>
            <description value="Confirm that the returned searchset Bundle contains 1 Observation resource(s) with code http://snomed.info/sct | 366334007. (type partus)"/>
            <direction value="response"/>
            <expression value="Bundle.where(entry.where(resource.is(Observation)).resource.code.coding.where(system = 'http://snomed.info/sct' and code = '366334007').count()=1).exists()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <!-- ligging kind -->
      <action>
         <assert>
            <description value="Confirm that the returned searchset Bundle contains 1 Observation resource(s) with code http://snomed.info/sct | 271692001. (ligging kind)"/>
            <direction value="response"/>
            <expression value="Bundle.where(entry.where(resource.is(Observation)).resource.code.coding.where(system = 'http://snomed.info/sct' and code = '271692001').count()=1).exists()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <!-- plaats baring -->
      <action>
         <assert>
            <description value="Confirm that the returned searchset Bundle contains 1 Observation resource(s) with code http://snomed.info/sct | 366344009. (plaats baring)"/>
            <direction value="response"/>
            <expression value="Bundle.where(entry.where(resource.is(Observation)).resource.code.coding.where(system = 'http://snomed.info/sct' and code = '366344009').count()=1).exists()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <!-- geboorte placenta -->
      <action>
         <assert>
            <description value="Confirm that the returned searchset Bundle contains 1 Observation resource(s) with code http://snomed.info/sct | 236994008. (geboorte placenta)"/>
            <direction value="response"/>
            <expression value="Bundle.where(entry.where(resource.is(Observation)).resource.code.coding.where(system = 'http://snomed.info/sct' and code = '236994008').count()=1).exists()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <!-- tijdstip geboorte placenta -->
      <action>
         <assert>
            <description value="Confirm that the returned searchset Bundle contains 1 Observation resource(s) with code http://snomed.info/sct | 136311000146100. (tijdstip geboorte placenta)"/>
            <direction value="response"/>
            <expression value="Bundle.where(entry.where(resource.is(Observation)).resource.code.coding.where(system = 'http://snomed.info/sct' and code = '136311000146100').count()=1).exists()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <!-- compleetheid placenta -->
      <action>
         <assert>
            <description value="Confirm that the returned searchset Bundle contains 1 Observation resource(s) with code http://snomed.info/sct | 364343000. (compleetheid placenta)"/>
            <direction value="response"/>
            <expression value="Bundle.where(entry.where(resource.is(Observation)).resource.code.coding.where(system = 'http://snomed.info/sct' and code = '364343000').count()=1).exists()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <!-- placenta PA -->
      <action>
         <assert>
            <description value="Confirm that the returned searchset Bundle contains 1 Observation resource(s) with code http://snomed.info/sct | 168123008. (placenta PA)"/>
            <direction value="response"/>
            <expression value="Bundle.where(entry.where(resource.is(Observation)).resource.code.coding.where(system = 'http://snomed.info/sct' and code = '168123008').count()=1).exists()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <!-- testuitslag PA -->
      <action>
         <assert>
            <description value="Confirm that the returned searchset Bundle contains 1 Observation resource(s) with code http://snomed.info/sct | 726566009. (testuitslag PA)"/>
            <direction value="response"/>
            <expression value="Bundle.where(entry.where(resource.is(Observation)).resource.code.coding.where(system = 'http://snomed.info/sct' and code = '726566009').count()=1).exists()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <!-- vruchtvliezen -->
      <action>
         <assert>
            <description value="Confirm that the returned searchset Bundle contains 1 Observation resource(s) with code http://snomed.info/sct | 364351002. (vruchtvliezen)"/>
            <direction value="response"/>
            <expression value="Bundle.where(entry.where(resource.is(Observation)).resource.code.coding.where(system = 'http://snomed.info/sct' and code = '364351002').count()=1).exists()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <!-- navelstreng -->
      <action>
         <assert>
            <description value="Confirm that the returned searchset Bundle contains 1 Observation resource(s) with code http://snomed.info/sct | 249191003. (navelstreng)"/>
            <direction value="response"/>
            <expression value="Bundle.where(entry.where(resource.is(Observation)).resource.code.coding.where(system = 'http://snomed.info/sct' and code = '249191003').count()=1).exists()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <!-- bloedverlies -->
      <action>
         <assert>
            <description value="Confirm that the returned searchset Bundle contains 1 Observation resource(s) with code http://snomed.info/sct | 364332008. (bloedverlies)"/>
            <direction value="response"/>
            <expression value="Bundle.where(entry.where(resource.is(Observation)).resource.code.coding.where(system = 'http://snomed.info/sct' and code = '364332008').count()=1).exists()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <!-- datum begin eerste fase partus -->
      <action>
         <assert>
            <description value="Confirm that the returned searchset Bundle contains 1 Observation resource(s) with code http://snomed.info/sct | 160621000146107. (datum begin eerste fase partus)"/>
            <direction value="response"/>
            <expression value="Bundle.where(entry.where(resource.is(Observation)).resource.code.coding.where(system = 'http://snomed.info/sct' and code = '160621000146107').count()=1).exists()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <!-- wijze begin eerste fase partus -->
      <action>
         <assert>
            <description value="Confirm that the returned searchset Bundle contains 1 Observation resource(s) with code http://snomed.info/sct | 160611000146102. (wijze begin eerste fase partus)"/>
            <direction value="response"/>
            <expression value="Bundle.where(entry.where(resource.is(Observation)).resource.code.coding.where(system = 'http://snomed.info/sct' and code = '160611000146102').count()=1).exists()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
   </test>
   <test id="8b-RetrieveObservations">
      <name value="8b-RetrieveObservations"/>
      <description value="Test Client query operation for Observations"/>
      <action>
         <operation>
            <type>
               <system value="http://hl7.org/fhir/restful-interaction"/>
               <code value="search"/>
            </type>
            <resource value="Observation"/>
            <description value="Test PHR client to retrieve Observation resources."/>
            <destination value="1"/>
            <encodeRequestUrl value="true"/>
            <origin value="1"/>
            <params value="?context:Encounter.episodeofcare=EpisodeOfCare/${episode-id}"/>
            <requestHeader>
               <field value="Authorization"/>
               <value value="Bearer 01e5514d-ae75-4d14-b43b-86511e866fce"/>
            </requestHeader>
            <requestHeader>
               <field value="MedMij-Request-ID"/>
               <value value="${UUID}"/>
            </requestHeader>
         </operation>
      </action>
      <action>
         <assert>
            <description value="Confirm that HTTP header Authorization contains the patient token Bearer 01e5514d-ae75-4d14-b43b-86511e866fce"/>
            <direction value="request"/>
            <headerField value="Authorization"/>
            <stopTestOnFail value="false"/>
            <value value="Bearer 01e5514d-ae75-4d14-b43b-86511e866fce"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that query parameter 'patient=' was not present to avoid BSNs in the URL."/>
            <direction value="request"/>
            <operator value="notContains"/>
            <requestURL value="patient="/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that query parameter 'subject=' was not present to avoid BSNs in the URL."/>
            <direction value="request"/>
            <operator value="notContains"/>
            <requestURL value="subject="/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Make sure that the server of the test simulator gives a success response."/>
            <operator value="in"/>
            <responseCode value="200,201"/>
            <stopTestOnFail value="true"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that the server of the test simulator returns a Bundle."/>
            <direction value="response"/>
            <resource value="Bundle"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <!-- bewegingspatroon foetus -->
      <action>
         <assert>
            <description value="Confirm that the returned searchset Bundle contains 1 Observation resource(s) with code http://snomed.info/sct | 364618000. (bewegingspatroon foetus)"/>
            <direction value="response"/>
            <expression value="Bundle.where(entry.where(resource.is(Observation)).resource.code.coding.where(system = 'http://snomed.info/sct' and code = '364618000').count()=1).exists()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <!-- hoogte uterus -->
      <action>
         <assert>
            <description value="Confirm that the returned searchset Bundle contains 1 Observation resource(s) with code http://snomed.info/sct | 364265003. (hoogte uterus)"/>
            <direction value="response"/>
            <expression value="Bundle.where(entry.where(resource.is(Observation)).resource.code.coding.where(system = 'http://snomed.info/sct' and code = '364265003').count()=1).exists()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <!-- ligging foetus -->
      <action>
         <assert>
            <description value="Confirm that the returned searchset Bundle contains 1 Observation resource(s) with code http://snomed.info/sct | 249062004. (ligging foetus)"/>
            <direction value="response"/>
            <expression value="Bundle.where(entry.where(resource.is(Observation)).resource.code.coding.where(system = 'http://snomed.info/sct' and code = '249062004').count()=1).exists()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <!-- indaling foetus -->
      <action>
         <assert>
            <description value="Confirm that the returned searchset Bundle contains 1 Observation resource(s) with code http://snomed.info/sct | 364611006. (indaling foetus)"/>
            <direction value="response"/>
            <expression value="Bundle.where(entry.where(resource.is(Observation)).resource.code.coding.where(system = 'http://snomed.info/sct' and code = '364611006').count()=1).exists()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
   </test>
   <test id="9-RetrieveProcedures">
      <name value="9-RetrieveProcedures"/>
      <description value="Test Client query operation for (Obstetric) Procedures"/>
      <action>
         <operation>
            <type>
               <system value="http://hl7.org/fhir/restful-interaction"/>
               <code value="search"/>
            </type>
            <resource value="Procedure"/>
            <description value="Test PHR client to retrieve Procedure resources."/>
            <destination value="1"/>
            <encodeRequestUrl value="true"/>
            <origin value="1"/>
            <params value="?context=EpisodeOfCare/${episode-id}&amp;_include=Procedure:performer&amp;_include=Procedure:based-on"/>
            <requestHeader>
               <field value="Authorization"/>
               <value value="Bearer 01e5514d-ae75-4d14-b43b-86511e866fce"/>
            </requestHeader>
            <requestHeader>
               <field value="MedMij-Request-ID"/>
               <value value="${UUID}"/>
            </requestHeader>
         </operation>
      </action>
      <action>
         <assert>
            <description value="Confirm that HTTP header Authorization contains the patient token Bearer 01e5514d-ae75-4d14-b43b-86511e866fce"/>
            <direction value="request"/>
            <headerField value="Authorization"/>
            <stopTestOnFail value="false"/>
            <value value="Bearer 01e5514d-ae75-4d14-b43b-86511e866fce"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that query parameter 'patient=' was not present to avoid BSNs in the URL."/>
            <direction value="request"/>
            <operator value="notContains"/>
            <requestURL value="patient="/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that query parameter 'subject=' was not present to avoid BSNs in the URL."/>
            <direction value="request"/>
            <operator value="notContains"/>
            <requestURL value="subject="/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Make sure that the server of the test simulator gives a success response."/>
            <operator value="in"/>
            <responseCode value="200,201"/>
            <stopTestOnFail value="true"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that the server of the test simulator returns a Bundle."/>
            <direction value="response"/>
            <resource value="Bundle"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that the response Bundle contains 6 Procedure resource(s). "/>
            <direction value="response"/>
            <expression value="Bundle.entry.where(resource.is(Procedure)).count() = 6"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <!--      <nts:include value="assert.response.numResources" scope="common" resource="Organization" count="0"/>
      <nts:include value="assert.response.numResources" scope="common" resource="ProcedureRequest" count="0"/>-->
      <!-- echografie foetus -->
      <action>
         <assert>
            <description value="Confirm that the returned searchset Bundle contains 1 Procedure resource(s) with code http://snomed.info/sct | 241491007. (echografie foetus)"/>
            <direction value="response"/>
            <expression value="Bundle.where(entry.where(resource.is(Procedure)).resource.code.coding.where(system = 'http://snomed.info/sct' and code = '241491007').count()=1).exists()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <!-- bevalling -->
      <action>
         <assert>
            <description value="Confirm that the returned searchset Bundle contains 1 Procedure resource(s) with code http://snomed.info/sct | 236973005. (bevalling)"/>
            <direction value="response"/>
            <expression value="Bundle.where(entry.where(resource.is(Procedure)).resource.code.coding.where(system = 'http://snomed.info/sct' and code = '236973005').count()=1).exists()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <!-- vaginaal toucher -->
      <action>
         <assert>
            <description value="Confirm that the returned searchset Bundle contains 1 Procedure resource(s) with code http://snomed.info/sct | 51597003. (vaginaal toucher)"/>
            <direction value="response"/>
            <expression value="Bundle.where(entry.where(resource.is(Procedure)).resource.code.coding.where(system = 'http://snomed.info/sct' and code = '51597003').count()=1).exists()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <!-- sectio -->
      <action>
         <assert>
            <description value="Confirm that the returned searchset Bundle contains 1 Procedure resource(s) with code http://snomed.info/sct | 80801000146105. (sectio)"/>
            <direction value="response"/>
            <expression value="Bundle.where(entry.where(resource.is(Procedure)).resource.code.coding.where(system = 'http://snomed.info/sct' and code = '80801000146105').count()=1).exists()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <!-- prenatale risico evaluatie -->
      <action>
         <assert>
            <description value="Confirm that the returned searchset Bundle contains 1 Procedure resource(s) with code http://snomed.info/sct | 713076009. (ligging foetus)"/>
            <direction value="response"/>
            <expression value="Bundle.where(entry.where(resource.is(Procedure)).resource.code.coding.where(system = 'http://snomed.info/sct' and code = '713076009').count()=1).exists()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <!-- geboorte -->
      <action>
         <assert>
            <description value="Confirm that the returned searchset Bundle contains 1 Procedure resource(s) with code http://snomed.info/sct | 3950001. (geboorte)"/>
            <direction value="response"/>
            <expression value="Bundle.where(entry.where(resource.is(Procedure)).resource.code.coding.where(system = 'http://snomed.info/sct' and code = '3950001').count()=1).exists()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
   </test>
   <test id="10-RetrieveCareTeam">
      <name value="10-RetrieveCareTeam"/>
      <description value="Test Client query operation for CareTeam"/>
      <action>
         <operation>
            <type>
               <system value="http://hl7.org/fhir/restful-interaction"/>
               <code value="search"/>
            </type>
            <resource value="CareTeam"/>
            <description value="Test PHR client to retrieve CareTeam resources."/>
            <destination value="1"/>
            <encodeRequestUrl value="true"/>
            <origin value="1"/>
            <params value="?context=EpisodeOfCare/${episode-id}"/>
            <requestHeader>
               <field value="Authorization"/>
               <value value="Bearer 01e5514d-ae75-4d14-b43b-86511e866fce"/>
            </requestHeader>
            <requestHeader>
               <field value="MedMij-Request-ID"/>
               <value value="${UUID}"/>
            </requestHeader>
         </operation>
      </action>
      <action>
         <assert>
            <description value="Confirm that HTTP header Authorization contains the patient token Bearer 01e5514d-ae75-4d14-b43b-86511e866fce"/>
            <direction value="request"/>
            <headerField value="Authorization"/>
            <stopTestOnFail value="false"/>
            <value value="Bearer 01e5514d-ae75-4d14-b43b-86511e866fce"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that query parameter 'patient=' was not present to avoid BSNs in the URL."/>
            <direction value="request"/>
            <operator value="notContains"/>
            <requestURL value="patient="/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that query parameter 'subject=' was not present to avoid BSNs in the URL."/>
            <direction value="request"/>
            <operator value="notContains"/>
            <requestURL value="subject="/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Make sure that the server of the test simulator gives a success response."/>
            <operator value="in"/>
            <responseCode value="200,201"/>
            <stopTestOnFail value="true"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that the server of the test simulator returns a Bundle."/>
            <direction value="response"/>
            <resource value="Bundle"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that the response Bundle contains 0 CareTeam resource(s). "/>
            <direction value="response"/>
            <expression value="Bundle.entry.where(resource.is(CareTeam)).count() = 0"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
   </test>
   <test id="11-RetrieveConsent">
      <name value="11-RetrieveConsent"/>
      <description value="Test Client query operation for Consent"/>
      <action>
         <operation>
            <type>
               <system value="http://hl7.org/fhir/restful-interaction"/>
               <code value="search"/>
            </type>
            <resource value="Consent"/>
            <description value="Test PHR client to retrieve Consent resources."/>
            <destination value="1"/>
            <encodeRequestUrl value="true"/>
            <origin value="1"/>
            <requestHeader>
               <field value="Authorization"/>
               <value value="Bearer 01e5514d-ae75-4d14-b43b-86511e866fce"/>
            </requestHeader>
            <requestHeader>
               <field value="MedMij-Request-ID"/>
               <value value="${UUID}"/>
            </requestHeader>
         </operation>
      </action>
      <action>
         <assert>
            <description value="Confirm that HTTP header Authorization contains the patient token Bearer 01e5514d-ae75-4d14-b43b-86511e866fce"/>
            <direction value="request"/>
            <headerField value="Authorization"/>
            <stopTestOnFail value="false"/>
            <value value="Bearer 01e5514d-ae75-4d14-b43b-86511e866fce"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that query parameter 'patient=' was not present to avoid BSNs in the URL."/>
            <direction value="request"/>
            <operator value="notContains"/>
            <requestURL value="patient="/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that query parameter 'subject=' was not present to avoid BSNs in the URL."/>
            <direction value="request"/>
            <operator value="notContains"/>
            <requestURL value="subject="/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Make sure that the server of the test simulator gives a success response."/>
            <operator value="in"/>
            <responseCode value="200,201"/>
            <stopTestOnFail value="true"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that the server of the test simulator returns a Bundle."/>
            <direction value="response"/>
            <resource value="Bundle"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that the response Bundle contains 0 Consent resource(s). "/>
            <direction value="response"/>
            <expression value="Bundle.entry.where(resource.is(Consent)).count() = 0"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
   </test>
   <test id="12-RelatedPerson">
      <name value="12-RelatedPerson"/>
      <description value="Test Client query operation for RelatedPerson"/>
      <action>
         <operation>
            <type>
               <system value="http://hl7.org/fhir/restful-interaction"/>
               <code value="search"/>
            </type>
            <resource value="RelatedPerson"/>
            <description value="Test PHR client to retrieve RelatedPerson resources."/>
            <destination value="1"/>
            <encodeRequestUrl value="true"/>
            <origin value="1"/>
            <requestHeader>
               <field value="Authorization"/>
               <value value="Bearer 01e5514d-ae75-4d14-b43b-86511e866fce"/>
            </requestHeader>
            <requestHeader>
               <field value="MedMij-Request-ID"/>
               <value value="${UUID}"/>
            </requestHeader>
         </operation>
      </action>
      <action>
         <assert>
            <description value="Confirm that HTTP header Authorization contains the patient token Bearer 01e5514d-ae75-4d14-b43b-86511e866fce"/>
            <direction value="request"/>
            <headerField value="Authorization"/>
            <stopTestOnFail value="false"/>
            <value value="Bearer 01e5514d-ae75-4d14-b43b-86511e866fce"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that query parameter 'patient=' was not present to avoid BSNs in the URL."/>
            <direction value="request"/>
            <operator value="notContains"/>
            <requestURL value="patient="/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that query parameter 'subject=' was not present to avoid BSNs in the URL."/>
            <direction value="request"/>
            <operator value="notContains"/>
            <requestURL value="subject="/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Make sure that the server of the test simulator gives a success response."/>
            <operator value="in"/>
            <responseCode value="200,201"/>
            <stopTestOnFail value="true"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that the server of the test simulator returns a Bundle."/>
            <direction value="response"/>
            <resource value="Bundle"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that the response Bundle contains 2 RelatedPerson resource(s). "/>
            <direction value="response"/>
            <expression value="Bundle.entry.where(resource.is(RelatedPerson)).count() = 2"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
   </test>
</TestScript>
