<?xml version="1.0" encoding="UTF-8"?>
<TestScript xmlns="http://hl7.org/fhir" xmlns:nts="http://nictiz.nl/xsl/testscript">
   <id value="mp9-MedicationAgreement-serve-4-x-CheckContent-xml"/>
   <meta>
      <profile value="http://touchstone.aegis.net/touchstone/fhir/testing/StructureDefinition/testscript"/>
   </meta>
   <url value="http://nictiz.nl/fhir/TestScript/mp9-MedicationAgreement-serve-4-x-CheckContent-xml"/>
   <version value="r4-mp9-3.0.0-beta-patchlevel 2025-02"/>
   <name value="Medication Process 9 3.0.0-beta  - MedicationAgreement - Serve - Scenario 4.x - target CheckContent - XML Format"/>
   <status value="active"/>
   <publisher value="Nictiz"/>
   <contact>
      <name value="Nictiz"/>
      <telecom>
         <system value="email"/>
         <value value="kwalificatie@nictiz.nl"/>
         <use value="work"/>
      </telecom>
   </contact>
   <description value="Scenario 4.x - KWAL Medicatiegegevens MA script 4"/>
   <origin>
      <extension url="http://fhir.interoplab.eu/fhir/StructureDefinition/Interoplab-CL-ext-SUT">
         <valueBoolean value="false"/>
      </extension>
      <index value="1"/>
      <profile>
         <system value="http://terminology.hl7.org/CodeSystem/testscript-profile-origin-types"/>
         <code value="FHIR-Client"/>
      </profile>
   </origin>
   <destination>
      <extension url="http://fhir.interoplab.eu/fhir/StructureDefinition/Interoplab-CL-ext-SUT">
         <valueBoolean value="true"/>
      </extension>
      <index value="1"/>
      <profile>
         <system value="http://terminology.hl7.org/CodeSystem/testscript-profile-destination-types"/>
         <code value="FHIR-Server"/>
      </profile>
   </destination>
   <profile id="Bundle-profile"
            value="http://hl7.org/fhir/StructureDefinition/Bundle"/>
   <variable>
      <name value="mp-MedAgr-mp9-MBH300script4MA-id"/>
      <description value="Resource.id for MedicationRequest 1"/>
      <!--FHIRPath expressions with .ofType(...) are poorly supported at the moment, so it was rewritten. Original expression: 'Bundle.entry.resource.ofType(MedicationRequest).where(identifier.value ='MBH_300_script4_MA').id'-->
      <expression value="Bundle.entry.resource.where($this is MedicationRequest).where(identifier.value ='MBH_300_script4_MA').id"/>
      <sourceId value="fixture-Scenario-4-x"/>
   </variable>
   <test id="Scenario-4-x">
      <name value="Scenario 4.x"/>
      <description value="KWAL Medicatiegegevens MA script 4"/>
      <action>
         <operation>
            <type>
               <system value="http://hl7.org/fhir/restful-interaction"/>
               <code value="search"/>
            </type>
            <resource value="MedicationRequest"/>
            <description value="Test server to serve MedicationRequest resource(s) representing MP9 building block MedicationAgreement"/>
            <accept value="xml"/>
            <destination value="1"/>
            <encodeRequestUrl value="true"/>
            <origin value="1"/>
            <params value="?patient.identifier=http://fhir.nl/fhir/NamingSystem/bsn|999900651&amp;category=http://snomed.info/sct|33633005&amp;_include=MedicationRequest:medication&amp;_include=MedicationRequest:subject&amp;_include=MedicationRequest:reason&amp;_include=MedicationRequest:next-practitioner&amp;_include=MedicationRequest:requester&amp;_include:iterate=PractitionerRole:organization&amp;_include:iterate=PractitionerRole:practitioner&amp;_include:iterate=PractitionerRole:location"/>
            <responseId value="fixture-Scenario-4-x"/>
         </operation>
      </action>
      <action>
         <assert>
            <description value="Confirm that the operation was successful"/>
            <operator value="in"/>
            <responseCode value="200,201"/>
            <stopTestOnFail value="true"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that the returned resource type is Bundle."/>
            <direction value="response"/>
            <resource value="Bundle"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that the returned Bundle type is searchset."/>
            <direction value="response"/>
            <expression value="Bundle.type"/>
            <operator value="equals"/>
            <stopTestOnFail value="false"/>
            <value value="searchset"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that all returned resources contain an Resource.id except when temporary ids are used in the Bundle. The only time that a resource does not have an id is when it is being submitted to the server using a create operation: https://www.hl7.org/fhir/STU3/resource-definitions.html#Resource.id "/>
            <direction value="response"/>
            <expression value="Bundle.entry.all( $this.fullUrl.matches('^urn:oid:[0-2](\\.(0|[1-9]\\d*))*$') or $this.fullUrl.matches('^urn:uuid:[A-Fa-f\\d]{8}-[A-Fa-f\\d]{4}-[A-Fa-f\\d]{4}-[A-Fa-f\\d]{4}-[A-Fa-f\\d]{12}$') or $this.resource.id.exists())"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that all returned resources except OperationOutcome and Binary contain a meta.profile tag."/>
            <direction value="response"/>
            <expression value="Bundle.entry.resource.where(is(OperationOutcome).not()).where(is(Binary).not()).where(meta.profile.empty()).empty()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that the fullUrl does not disagree with the id in the resource, see http://hl7.org/fhir/stu3/bundle-definitions.html#Bundle.entry.fullUrl"/>
            <direction value="response"/>
            <expression value="Bundle.entry.where(fullUrl.exists() and resource.id.exists()).all($this.fullUrl.endsWith($this.resource.id))"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that the fullUrl is an absolute URL, an uuid or an oid."/>
            <direction value="response"/>
            <expression value="Bundle.entry.fullUrl.all( startsWith('http://') or startsWith('https://') or matches('^urn:oid:[0-2](\\.(0|[1-9]\\d*))*$') or matches('^urn:uuid:[A-Fa-f\\d]{8}-[A-Fa-f\\d]{4}-[A-Fa-f\\d]{4}-[A-Fa-f\\d]{4}-[A-Fa-f\\d]{12}$') )"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that the returned Bundle conforms to the base FHIR specification and the resources to the stated profiles in the meta.profile tag."/>
            <direction value="response"/>
            <stopTestOnFail value="false"/>
            <validateProfileId value="Bundle-profile"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that all Coding elements contain both a .system and a .code."/>
            <direction value="response"/>
            <expression value="Bundle.descendants().where($this.is(Coding)).all(system.exists() and code.exists())"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that the OID of the zib valueset is not used for the system of a coding element."/>
            <direction value="response"/>
            <expression value="Bundle.descendants().where($this.is(coding)).where(system.startsWith('urn:oid:2.16.840.1.113883.2.4.3.11.60.40.2')).exists().not()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that all CodeableConcept elements contain either a coding.display or a text value if no Coding exists or has an extension (e.g. a nullFlavor or data-absent-reason extension). For more information see https://informatiestandaarden.nictiz.nl/wiki/FHIR:V1.0_FHIR_IG_STU3Use_of_coded_concepts."/>
            <direction value="response"/>
            <expression value="Bundle.descendants().where($this.is(CodeableConcept)) .all(coding.display.exists() or text.exists() or extension.exists())"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that all References have a display value, see https://informatiestandaarden.nictiz.nl/wiki/FHIR:V1.0_FHIR_IG_STU3#Use_of_the_reference_datatype."/>
            <direction value="response"/>
            <expression value="Bundle.descendants().where($this.is(Reference)).all(display.exists() or extension.where(url = 'http://hl7.org/fhir/StructureDefinition/data-absent-reason').exists() or extension.where(url = 'http://hl7.org/fhir/StructureDefinition/iso21090-nullFlavor').exists())"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that all Identifiers have both a .system and a .value. In rare cases where a general category of identifiers can be used, .type can replace .system. Edge cases for both .system and .type to be unknown are not applicable to Nictiz. For more information, see https://www.hl7.org/fhir/stu3/datatypes.html#Identifier."/>
            <direction value="response"/>
            <expression value="Bundle.descendants().where($this.is(Identifier)).all((system.exists() or type.exists()) and value.exists())"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that the returned Bundle total value matches or is less than the number of entries in the Bundle. The included resources should not be counted as entries in the Bundle.total."/>
            <direction value="response"/>
            <expression value="Bundle.total.exists() implies (Bundle.total.toInteger() &lt;= Bundle.entry.where(search.empty() or search.mode = 'match').count())"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that the returned Bundle contains a self link."/>
            <direction value="response"/>
            <expression value="Bundle.link.where(relation = 'self' and url.exists()).exists()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that all returned resources except OperationOutcome and Binary contain a meta.profile tag."/>
            <direction value="response"/>
            <expression value="Bundle.entry.resource.where(is(OperationOutcome).not()).where(is(Binary).not()).where(meta.profile.empty()).empty()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that all returned resources contain an Resource.id except when temporary ids are used in the Bundle. The only time that a resource does not have an id is when it is being submitted to the server using a create operation: https://www.hl7.org/fhir/STU3/resource-definitions.html#Resource.id "/>
            <direction value="response"/>
            <expression value="Bundle.entry.all( $this.fullUrl.matches('^urn:oid:[0-2](\\.(0|[1-9]\\d*))*$') or $this.fullUrl.matches('^urn:uuid:[A-Fa-f\\d]{8}-[A-Fa-f\\d]{4}-[A-Fa-f\\d]{4}-[A-Fa-f\\d]{4}-[A-Fa-f\\d]{12}$') or $this.resource.id.exists())"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that the fullUrl does not disagree with the id in the resource, see http://hl7.org/fhir/stu3/bundle-definitions.html#Bundle.entry.fullUrl"/>
            <direction value="response"/>
            <expression value="Bundle.entry.all($this.fullUrl.endsWith($this.resource.id) or $this.fullUrl.startsWith('urn:'))"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that the fullUrl is an absolute URL, an uuid or an oid."/>
            <direction value="response"/>
            <expression value="Bundle.entry.fullUrl.all( startsWith('http://') or startsWith('https://') or matches('^urn:oid:[0-2](\\.(0|[1-9]\\d*))*$') or matches('^urn:uuid:[A-Fa-f\\d]{8}-[A-Fa-f\\d]{4}-[A-Fa-f\\d]{4}-[A-Fa-f\\d]{4}-[A-Fa-f\\d]{12}$') )"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that all References have a display value, see https://informatiestandaarden.nictiz.nl/wiki/MedMij:V2020.01/FHIR_IG#Use_of_the_reference_datatype."/>
            <direction value="response"/>
            <expression value="Bundle.descendants().where($this.is(Reference)).all(display.exists())"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that all CodeableConcept elements contain either a coding.display or a text value or has an extension (e.g. a nullFlavor or data-absent-reason extension)."/>
            <direction value="response"/>
            <expression value="Bundle.descendants().where($this.is(CodeableConcept)).all(coding.display.exists() or text.exists() or extension.exists())"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that the returned searchset Bundle contains at least 1 MedicationRequest resource(s). "/>
            <direction value="response"/>
            <expression value="Bundle.entry.where(resource.is(MedicationRequest)).count() &gt;= 1"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that the returned searchset Bundle contains at least 2 entries. (Consists of 1 MedicationRequest and 1 Medication resources.)"/>
            <direction value="response"/>
            <expression value="Bundle.entry.count() &gt;= 2"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
   </test>
   <test>
      <name value="Scenario 4.x - Check MedicationRequest"/>
      <description value="Check if the previous operation results in a FHIR MedicationRequest that contains the values that are expected following Nictiz' materials (fixture .id: mp-MedAgr-mp9-MBH300script4MA)"/>
      <action>
         <assert>
            <description value="Response Bundle contains exactly 1 MedicationRequest with properties: contains a resource with identifier = MBH_300_script4_MA"/>
            <direction value="response"/>
            <!--FHIRPath expressions with .ofType(...) are poorly supported at the moment, so it was rewritten. Original expression: 'Bundle.entry.resource.ofType(MedicationRequest).where(identifier.value ='MBH_300_script4_MA').count() = 1'-->
            <expression value="Bundle.entry.resource.where($this is MedicationRequest).where(identifier.value ='MBH_300_script4_MA').count() = 1"/>
            <stopTestOnFail value="true"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="MedicationRequest resource evaluated in the previous assert contains an .id"/>
            <direction value="response"/>
            <!--FHIRPath expressions with .ofType(...) are poorly supported at the moment, so it was rewritten. Original expression: 'Bundle.entry.resource.ofType(MedicationRequest).where(identifier.value ='MBH_300_script4_MA').id.exists()'-->
            <expression value="Bundle.entry.resource.where($this is MedicationRequest).where(identifier.value ='MBH_300_script4_MA').id.exists()"/>
            <stopTestOnFail value="true"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <label value="1-1"/>
            <description value="Contains .meta with .profile 'http://nictiz.nl/fhir/StructureDefinition/mp-MedicationAgreement'"/>
            <direction value="response"/>
            <!--FHIRPath expressions with .ofType(...) are poorly supported at the moment, so it was rewritten. Original expression: 'Bundle.entry.resource.ofType(MedicationRequest).where(id = '${mp-MedAgr-mp9-MBH300script4MA-id}').meta.profile.where($this = 'http://nictiz.nl/fhir/StructureDefinition/mp-MedicationAgreement').exists()'-->
            <expression value="Bundle.entry.resource.where($this is MedicationRequest).where(id = '${mp-MedAgr-mp9-MBH300script4MA-id}').meta.profile.where($this = 'http://nictiz.nl/fhir/StructureDefinition/mp-MedicationAgreement').exists()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <label value="1-2"/>
            <description value="Contains .extension with url 'http://nictiz.nl/fhir/StructureDefinition/ext-RegistrationDateTime' with .valueDateTime"/>
            <direction value="response"/>
            <!--FHIRPath expressions with .ofType(...) are poorly supported at the moment, so it was rewritten. Original expression: 'Bundle.entry.resource.ofType(MedicationRequest).where(id = '${mp-MedAgr-mp9-MBH300script4MA-id}').extension('http://nictiz.nl/fhir/StructureDefinition/ext-RegistrationDateTime').value.ofType(dateTime).exists()'-->
            <expression value="Bundle.entry.resource.where($this is MedicationRequest).where(id = '${mp-MedAgr-mp9-MBH300script4MA-id}').extension('http://nictiz.nl/fhir/StructureDefinition/ext-RegistrationDateTime').value.where($this is dateTime).exists()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <label value="1-3"/>
            <description value="Contains .extension with url 'http://nictiz.nl/fhir/StructureDefinition/ext-RenderedDosageInstruction' with .valueString with a value"/>
            <direction value="response"/>
            <!--FHIRPath expressions with .ofType(...) are poorly supported at the moment, so it was rewritten. Original expression: 'Bundle.entry.resource.ofType(MedicationRequest).where(id = '${mp-MedAgr-mp9-MBH300script4MA-id}').extension('http://nictiz.nl/fhir/StructureDefinition/ext-RenderedDosageInstruction').value.ofType(string).hasValue()'-->
            <expression value="Bundle.entry.resource.where($this is MedicationRequest).where(id = '${mp-MedAgr-mp9-MBH300script4MA-id}').extension('http://nictiz.nl/fhir/StructureDefinition/ext-RenderedDosageInstruction').value.where($this is string).hasValue()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <label value="1-4"/>
            <description value="Contains .extension with url 'http://nictiz.nl/fhir/StructureDefinition/ext-TimeInterval.Period' with .valuePeriod with .extension with url 'http://nictiz.nl/fhir/StructureDefinition/ext-TimeInterval.Duration' with .valueDuration with .value '10' and .unit with a value and .system and .code 'd' and .start"/>
            <direction value="response"/>
            <!--FHIRPath expressions with .ofType(...) are poorly supported at the moment, so it was rewritten. Original expression: 'Bundle.entry.resource.ofType(MedicationRequest).where(id = '${mp-MedAgr-mp9-MBH300script4MA-id}').extension('http://nictiz.nl/fhir/StructureDefinition/ext-TimeInterval.Period').value.ofType(Period).where(extension('http://nictiz.nl/fhir/StructureDefinition/ext-TimeInterval.Duration').value.ofType(Duration).where(value = 10 and unit.hasValue() and system and code = 'd') and start).exists()'-->
            <expression value="Bundle.entry.resource.where($this is MedicationRequest).where(id = '${mp-MedAgr-mp9-MBH300script4MA-id}').extension('http://nictiz.nl/fhir/StructureDefinition/ext-TimeInterval.Period').value.where($this is Period).where(extension('http://nictiz.nl/fhir/StructureDefinition/ext-TimeInterval.Duration').value.where($this is Duration).where(value = 10 and unit.hasValue() and system and code = 'd') and start).exists()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <label value="1-5"/>
            <description value="Contains .extension with url 'http://nictiz.nl/fhir/StructureDefinition/ext-PharmaceuticalTreatment.Identifier' with .valueIdentifier with .system and .value"/>
            <direction value="response"/>
            <!--FHIRPath expressions with .ofType(...) are poorly supported at the moment, so it was rewritten. Original expression: 'Bundle.entry.resource.ofType(MedicationRequest).where(id = '${mp-MedAgr-mp9-MBH300script4MA-id}').extension('http://nictiz.nl/fhir/StructureDefinition/ext-PharmaceuticalTreatment.Identifier').value.ofType(Identifier).where(system and value).exists()'-->
            <expression value="Bundle.entry.resource.where($this is MedicationRequest).where(id = '${mp-MedAgr-mp9-MBH300script4MA-id}').extension('http://nictiz.nl/fhir/StructureDefinition/ext-PharmaceuticalTreatment.Identifier').value.where($this is Identifier).where(system and value).exists()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <label value="1-6"/>
            <description value="Contains .identifier with .system and .value"/>
            <direction value="response"/>
            <!--FHIRPath expressions with .ofType(...) are poorly supported at the moment, so it was rewritten. Original expression: 'Bundle.entry.resource.ofType(MedicationRequest).where(id = '${mp-MedAgr-mp9-MBH300script4MA-id}').identifier.where(system and value).exists()'-->
            <expression value="Bundle.entry.resource.where($this is MedicationRequest).where(id = '${mp-MedAgr-mp9-MBH300script4MA-id}').identifier.where(system and value).exists()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <label value="1-7"/>
            <description value="Contains .status 'unknown'"/>
            <direction value="response"/>
            <!--FHIRPath expressions with .ofType(...) are poorly supported at the moment, so it was rewritten. Original expression: 'Bundle.entry.resource.ofType(MedicationRequest).where(id = '${mp-MedAgr-mp9-MBH300script4MA-id}').status = 'unknown''-->
            <expression value="Bundle.entry.resource.where($this is MedicationRequest).where(id = '${mp-MedAgr-mp9-MBH300script4MA-id}').status = 'unknown'"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <label value="1-8"/>
            <description value="Contains .intent 'order'"/>
            <direction value="response"/>
            <!--FHIRPath expressions with .ofType(...) are poorly supported at the moment, so it was rewritten. Original expression: 'Bundle.entry.resource.ofType(MedicationRequest).where(id = '${mp-MedAgr-mp9-MBH300script4MA-id}').intent = 'order''-->
            <expression value="Bundle.entry.resource.where($this is MedicationRequest).where(id = '${mp-MedAgr-mp9-MBH300script4MA-id}').intent = 'order'"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <label value="1-9"/>
            <description value="Contains .category with .coding with .system 'http://snomed.info/sct' and .code '33633005' and .display"/>
            <direction value="response"/>
            <!--FHIRPath expressions with .ofType(...) are poorly supported at the moment, so it was rewritten. Original expression: 'Bundle.entry.resource.ofType(MedicationRequest).where(id = '${mp-MedAgr-mp9-MBH300script4MA-id}').category.where(coding.where(system = 'http://snomed.info/sct' and code = '33633005' and display)).exists()'-->
            <expression value="Bundle.entry.resource.where($this is MedicationRequest).where(id = '${mp-MedAgr-mp9-MBH300script4MA-id}').category.where(coding.where(system = 'http://snomed.info/sct' and code = '33633005' and display)).exists()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <label value="1-10"/>
            <description value="Contains .medicationReference with either .reference or .identifier and .display"/>
            <direction value="response"/>
            <!--FHIRPath expressions with .ofType(...) are poorly supported at the moment, so it was rewritten. Original expression: 'Bundle.entry.resource.ofType(MedicationRequest).where(id = '${mp-MedAgr-mp9-MBH300script4MA-id}').medication.ofType(Reference).where((reference or identifier) and display).exists()'-->
            <expression value="Bundle.entry.resource.where($this is MedicationRequest).where(id = '${mp-MedAgr-mp9-MBH300script4MA-id}').medication.where($this is Reference).where((reference or identifier) and display).exists()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <label value="1-11"/>
            <description value="Contains .subject with either .reference or .identifier and .display"/>
            <direction value="response"/>
            <!--FHIRPath expressions with .ofType(...) are poorly supported at the moment, so it was rewritten. Original expression: 'Bundle.entry.resource.ofType(MedicationRequest).where(id = '${mp-MedAgr-mp9-MBH300script4MA-id}').subject.where((reference or identifier) and display).exists()'-->
            <expression value="Bundle.entry.resource.where($this is MedicationRequest).where(id = '${mp-MedAgr-mp9-MBH300script4MA-id}').subject.where((reference or identifier) and display).exists()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <label value="1-12"/>
            <description value="Contains .requester with either .reference or .identifier and .display"/>
            <direction value="response"/>
            <!--FHIRPath expressions with .ofType(...) are poorly supported at the moment, so it was rewritten. Original expression: 'Bundle.entry.resource.ofType(MedicationRequest).where(id = '${mp-MedAgr-mp9-MBH300script4MA-id}').requester.where((reference or identifier) and display).exists()'-->
            <expression value="Bundle.entry.resource.where($this is MedicationRequest).where(id = '${mp-MedAgr-mp9-MBH300script4MA-id}').requester.where((reference or identifier) and display).exists()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <label value="1-13"/>
            <description value="Contains .dosageInstruction with .sequence '1', and .additionalInstruction with .coding with .system 'http://terminology.hl7.org/CodeSystem/v3-NullFlavor' and .code 'OTH' and .display and .text with a value, and .timing with .repeat with .boundsDuration with .value '3' and .unit with a value and .system and .code 'd' and .frequency with ... and .period '1' and .periodUnit 'd', and .route with .coding with .system 'urn:oid:2.16.840.1.113883.2.4.4.9' and .code '9' and .display, and .doseAndRate with .doseQuantity with .extension with url 'http://hl7.org/fhir/StructureDefinition/iso21090-PQ-translation' with .valueQuantity with .value '2' and .unit and .system 'urn:oid:2.16.840.1.113883.2.4.4.1.900.2' and .code '245' and .value '2' and .unit and .system 'http://unitsofmeasure.org' and .code '1'. This assert checks if all children exist (if applicable with their specific values) and if they are present within one element. Following asserts check if individual children exist to help you debug if this assert fails"/>
            <direction value="response"/>
            <!--FHIRPath expressions with .ofType(...) are poorly supported at the moment, so it was rewritten. Original expression: 'Bundle.entry.resource.ofType(MedicationRequest).where(id = '${mp-MedAgr-mp9-MBH300script4MA-id}').dosageInstruction.where(sequence = 1 and additionalInstruction.where(coding.where(system = 'http://terminology.hl7.org/CodeSystem/v3-NullFlavor' and code = 'OTH' and display) and text.hasValue()) and timing.repeat.where(bounds.ofType(Duration).where(value = 3 and unit.hasValue() and system and code = 'd') and  and period = 1 and periodUnit = 'd') and route.coding.where(system = 'urn:oid:2.16.840.1.113883.2.4.4.9' and code = '9' and display) and doseAndRate.where(dose.ofType(Quantity).where(extension('http://hl7.org/fhir/StructureDefinition/iso21090-PQ-translation').value.ofType(Quantity).where(value = 2 and unit and system = 'urn:oid:2.16.840.1.113883.2.4.4.1.900.2' and code = '245') and value = 2 and unit and system = 'http://unitsofmeasure.org' and code = '1'))).exists()'-->
            <expression value="Bundle.entry.resource.where($this is MedicationRequest).where(id = '${mp-MedAgr-mp9-MBH300script4MA-id}').dosageInstruction.where(sequence = 1 and additionalInstruction.where(coding.where(system = 'http://terminology.hl7.org/CodeSystem/v3-NullFlavor' and code = 'OTH' and display) and text.hasValue()) and timing.repeat.where(bounds.where($this is Duration).where(value = 3 and unit.hasValue() and system and code = 'd') and and period = 1 and periodUnit = 'd') and route.coding.where(system = 'urn:oid:2.16.840.1.113883.2.4.4.9' and code = '9' and display) and doseAndRate.where(dose.where($this is Quantity).where(extension('http://hl7.org/fhir/StructureDefinition/iso21090-PQ-translation').value.where($this is Quantity).where(value = 2 and unit and system = 'urn:oid:2.16.840.1.113883.2.4.4.1.900.2' and code = '245') and value = 2 and unit and system = 'http://unitsofmeasure.org' and code = '1'))).exists()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <label value="1-13-1"/>
            <description value="Contains .dosageInstruction.sequence '1'. This assert checks only one child. Assert 1-13 checks if all children are present in the same parent"/>
            <direction value="response"/>
            <!--FHIRPath expressions with .ofType(...) are poorly supported at the moment, so it was rewritten. Original expression: 'Bundle.entry.resource.ofType(MedicationRequest).where(id = '${mp-MedAgr-mp9-MBH300script4MA-id}').dosageInstruction.where(sequence = 1).exists()'-->
            <expression value="Bundle.entry.resource.where($this is MedicationRequest).where(id = '${mp-MedAgr-mp9-MBH300script4MA-id}').dosageInstruction.where(sequence = 1).exists()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <label value="1-13-2"/>
            <description value="Contains .dosageInstruction.additionalInstruction with .coding with .system 'http://terminology.hl7.org/CodeSystem/v3-NullFlavor' and .code 'OTH' and .display and .text with a value. This assert checks only one child. Assert 1-13 checks if all children are present in the same parent"/>
            <direction value="response"/>
            <!--FHIRPath expressions with .ofType(...) are poorly supported at the moment, so it was rewritten. Original expression: 'Bundle.entry.resource.ofType(MedicationRequest).where(id = '${mp-MedAgr-mp9-MBH300script4MA-id}').dosageInstruction.where(additionalInstruction.where(coding.where(system = 'http://terminology.hl7.org/CodeSystem/v3-NullFlavor' and code = 'OTH' and display) and text.hasValue()).exists()).exists()'-->
            <expression value="Bundle.entry.resource.where($this is MedicationRequest).where(id = '${mp-MedAgr-mp9-MBH300script4MA-id}').dosageInstruction.where(additionalInstruction.where(coding.where(system = 'http://terminology.hl7.org/CodeSystem/v3-NullFlavor' and code = 'OTH' and display) and text.hasValue()).exists()).exists()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <label value="1-13-3"/>
            <description value="Contains .dosageInstruction.timing with .repeat with .boundsDuration with .value '3' and .unit with a value and .system and .code 'd' and .frequency with ... and .period '1' and .periodUnit 'd'. This assert checks only one child. Assert 1-13 checks if all children are present in the same parent"/>
            <direction value="response"/>
            <!--FHIRPath expressions with .ofType(...) are poorly supported at the moment, so it was rewritten. Original expression: 'Bundle.entry.resource.ofType(MedicationRequest).where(id = '${mp-MedAgr-mp9-MBH300script4MA-id}').dosageInstruction.where(timing.repeat.where(bounds.ofType(Duration).where(value = 3 and unit.hasValue() and system and code = 'd') and and period = 1 and periodUnit = 'd').exists()).exists()'-->
            <expression value="Bundle.entry.resource.where($this is MedicationRequest).where(id = '${mp-MedAgr-mp9-MBH300script4MA-id}').dosageInstruction.where(timing.repeat.where(bounds.where($this is Duration).where(value = 3 and unit.hasValue() and system and code = 'd') and and period = 1 and periodUnit = 'd').exists()).exists()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <label value="1-13-4"/>
            <description value="Contains .dosageInstruction.route with .coding with .system 'urn:oid:2.16.840.1.113883.2.4.4.9' and .code '9' and .display. This assert checks only one child. Assert 1-13 checks if all children are present in the same parent"/>
            <direction value="response"/>
            <!--FHIRPath expressions with .ofType(...) are poorly supported at the moment, so it was rewritten. Original expression: 'Bundle.entry.resource.ofType(MedicationRequest).where(id = '${mp-MedAgr-mp9-MBH300script4MA-id}').dosageInstruction.where(route.coding.where(system = 'urn:oid:2.16.840.1.113883.2.4.4.9' and code = '9' and display).exists()).exists()'-->
            <expression value="Bundle.entry.resource.where($this is MedicationRequest).where(id = '${mp-MedAgr-mp9-MBH300script4MA-id}').dosageInstruction.where(route.coding.where(system = 'urn:oid:2.16.840.1.113883.2.4.4.9' and code = '9' and display).exists()).exists()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <label value="1-13-5"/>
            <description value="Contains .dosageInstruction.doseAndRate with .doseQuantity with .extension with url 'http://hl7.org/fhir/StructureDefinition/iso21090-PQ-translation' with .valueQuantity with .value '2' and .unit and .system 'urn:oid:2.16.840.1.113883.2.4.4.1.900.2' and .code '245' and .value '2' and .unit and .system 'http://unitsofmeasure.org' and .code '1'. This assert checks only one child. Assert 1-13 checks if all children are present in the same parent"/>
            <direction value="response"/>
            <!--FHIRPath expressions with .ofType(...) are poorly supported at the moment, so it was rewritten. Original expression: 'Bundle.entry.resource.ofType(MedicationRequest).where(id = '${mp-MedAgr-mp9-MBH300script4MA-id}').dosageInstruction.where(doseAndRate.where(dose.ofType(Quantity).where(extension('http://hl7.org/fhir/StructureDefinition/iso21090-PQ-translation').value.ofType(Quantity).where(value = 2 and unit and system = 'urn:oid:2.16.840.1.113883.2.4.4.1.900.2' and code = '245') and value = 2 and unit and system = 'http://unitsofmeasure.org' and code = '1')).exists()).exists()'-->
            <expression value="Bundle.entry.resource.where($this is MedicationRequest).where(id = '${mp-MedAgr-mp9-MBH300script4MA-id}').dosageInstruction.where(doseAndRate.where(dose.where($this is Quantity).where(extension('http://hl7.org/fhir/StructureDefinition/iso21090-PQ-translation').value.where($this is Quantity).where(value = 2 and unit and system = 'urn:oid:2.16.840.1.113883.2.4.4.1.900.2' and code = '245') and value = 2 and unit and system = 'http://unitsofmeasure.org' and code = '1')).exists()).exists()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <label value="1-14"/>
            <description value="Contains .dosageInstruction with .sequence '1', and .additionalInstruction with .coding with .system 'http://terminology.hl7.org/CodeSystem/v3-NullFlavor' and .code 'OTH' and .display and .text with a value, and .timing with .repeat with .boundsDuration with .value '3' and .unit with a value and .system and .code 'd' and .frequency with ... and .period '1' and .periodUnit 'd', and .asNeededCodeableConcept with .coding with .system 'https://referentiemodel.nhg.org/tabellen/nhg-tabel-25-gebruiksvoorschrift#aanvullend-numeriek' and .code '1028' and .display, and .route with .coding with .system 'urn:oid:2.16.840.1.113883.2.4.4.9' and .code '9' and .display, and .doseAndRate with .doseQuantity with .extension with url 'http://hl7.org/fhir/StructureDefinition/iso21090-PQ-translation' with .valueQuantity with .value '2' and .unit and .system 'urn:oid:2.16.840.1.113883.2.4.4.1.900.2' and .code '245' and .value '2' and .unit and .system 'http://unitsofmeasure.org' and .code '1', and .maxDosePerPeriod with .numerator with .extension with url 'http://hl7.org/fhir/StructureDefinition/iso21090-PQ-translation' with .valueQuantity with .value '6' and .unit and .system 'urn:oid:2.16.840.1.113883.2.4.4.1.900.2' and .code '245' and .value '6' and .unit and .system 'http://unitsofmeasure.org' and .code '1' and .denominator with .value '1' and .unit and .system 'http://unitsofmeasure.org' and .code 'd'. This assert checks if all children exist (if applicable with their specific values) and if they are present within one element. Following asserts check if individual children exist to help you debug if this assert fails"/>
            <direction value="response"/>
            <!--FHIRPath expressions with .ofType(...) are poorly supported at the moment, so it was rewritten. Original expression: 'Bundle.entry.resource.ofType(MedicationRequest).where(id = '${mp-MedAgr-mp9-MBH300script4MA-id}').dosageInstruction.where(sequence = 1 and additionalInstruction.where(coding.where(system = 'http://terminology.hl7.org/CodeSystem/v3-NullFlavor' and code = 'OTH' and display) and text.hasValue()) and timing.repeat.where(bounds.ofType(Duration).where(value = 3 and unit.hasValue() and system and code = 'd') and  and period = 1 and periodUnit = 'd') and asNeeded.ofType(CodeableConcept).coding.where(system = 'https://referentiemodel.nhg.org/tabellen/nhg-tabel-25-gebruiksvoorschrift#aanvullend-numeriek' and code = '1028' and display) and route.coding.where(system = 'urn:oid:2.16.840.1.113883.2.4.4.9' and code = '9' and display) and doseAndRate.where(dose.ofType(Quantity).where(extension('http://hl7.org/fhir/StructureDefinition/iso21090-PQ-translation').value.ofType(Quantity).where(value = 2 and unit and system = 'urn:oid:2.16.840.1.113883.2.4.4.1.900.2' and code = '245') and value = 2 and unit and system = 'http://unitsofmeasure.org' and code = '1')) and maxDosePerPeriod.where(numerator.where(extension('http://hl7.org/fhir/StructureDefinition/iso21090-PQ-translation').value.ofType(Quantity).where(value = 6 and unit and system = 'urn:oid:2.16.840.1.113883.2.4.4.1.900.2' and code = '245') and value = 6 and unit and system = 'http://unitsofmeasure.org' and code = '1') and denominator.where(value = 1 and unit and system = 'http://unitsofmeasure.org' and code = 'd'))).exists()'-->
            <expression value="Bundle.entry.resource.where($this is MedicationRequest).where(id = '${mp-MedAgr-mp9-MBH300script4MA-id}').dosageInstruction.where(sequence = 1 and additionalInstruction.where(coding.where(system = 'http://terminology.hl7.org/CodeSystem/v3-NullFlavor' and code = 'OTH' and display) and text.hasValue()) and timing.repeat.where(bounds.where($this is Duration).where(value = 3 and unit.hasValue() and system and code = 'd') and and period = 1 and periodUnit = 'd') and asNeeded.where($this is CodeableConcept).coding.where(system = 'https://referentiemodel.nhg.org/tabellen/nhg-tabel-25-gebruiksvoorschrift#aanvullend-numeriek' and code = '1028' and display) and route.coding.where(system = 'urn:oid:2.16.840.1.113883.2.4.4.9' and code = '9' and display) and doseAndRate.where(dose.where($this is Quantity).where(extension('http://hl7.org/fhir/StructureDefinition/iso21090-PQ-translation').value.where($this is Quantity).where(value = 2 and unit and system = 'urn:oid:2.16.840.1.113883.2.4.4.1.900.2' and code = '245') and value = 2 and unit and system = 'http://unitsofmeasure.org' and code = '1')) and maxDosePerPeriod.where(numerator.where(extension('http://hl7.org/fhir/StructureDefinition/iso21090-PQ-translation').value.where($this is Quantity).where(value = 6 and unit and system = 'urn:oid:2.16.840.1.113883.2.4.4.1.900.2' and code = '245') and value = 6 and unit and system = 'http://unitsofmeasure.org' and code = '1') and denominator.where(value = 1 and unit and system = 'http://unitsofmeasure.org' and code = 'd'))).exists()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <label value="1-14-1"/>
            <description value="Contains .dosageInstruction.sequence '1'. This assert checks only one child. Assert 1-14 checks if all children are present in the same parent"/>
            <direction value="response"/>
            <!--FHIRPath expressions with .ofType(...) are poorly supported at the moment, so it was rewritten. Original expression: 'Bundle.entry.resource.ofType(MedicationRequest).where(id = '${mp-MedAgr-mp9-MBH300script4MA-id}').dosageInstruction.where(sequence = 1).exists()'-->
            <expression value="Bundle.entry.resource.where($this is MedicationRequest).where(id = '${mp-MedAgr-mp9-MBH300script4MA-id}').dosageInstruction.where(sequence = 1).exists()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <label value="1-14-2"/>
            <description value="Contains .dosageInstruction.additionalInstruction with .coding with .system 'http://terminology.hl7.org/CodeSystem/v3-NullFlavor' and .code 'OTH' and .display and .text with a value. This assert checks only one child. Assert 1-14 checks if all children are present in the same parent"/>
            <direction value="response"/>
            <!--FHIRPath expressions with .ofType(...) are poorly supported at the moment, so it was rewritten. Original expression: 'Bundle.entry.resource.ofType(MedicationRequest).where(id = '${mp-MedAgr-mp9-MBH300script4MA-id}').dosageInstruction.where(additionalInstruction.where(coding.where(system = 'http://terminology.hl7.org/CodeSystem/v3-NullFlavor' and code = 'OTH' and display) and text.hasValue()).exists()).exists()'-->
            <expression value="Bundle.entry.resource.where($this is MedicationRequest).where(id = '${mp-MedAgr-mp9-MBH300script4MA-id}').dosageInstruction.where(additionalInstruction.where(coding.where(system = 'http://terminology.hl7.org/CodeSystem/v3-NullFlavor' and code = 'OTH' and display) and text.hasValue()).exists()).exists()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <label value="1-14-3"/>
            <description value="Contains .dosageInstruction.timing with .repeat with .boundsDuration with .value '3' and .unit with a value and .system and .code 'd' and .frequency with ... and .period '1' and .periodUnit 'd'. This assert checks only one child. Assert 1-14 checks if all children are present in the same parent"/>
            <direction value="response"/>
            <!--FHIRPath expressions with .ofType(...) are poorly supported at the moment, so it was rewritten. Original expression: 'Bundle.entry.resource.ofType(MedicationRequest).where(id = '${mp-MedAgr-mp9-MBH300script4MA-id}').dosageInstruction.where(timing.repeat.where(bounds.ofType(Duration).where(value = 3 and unit.hasValue() and system and code = 'd') and and period = 1 and periodUnit = 'd').exists()).exists()'-->
            <expression value="Bundle.entry.resource.where($this is MedicationRequest).where(id = '${mp-MedAgr-mp9-MBH300script4MA-id}').dosageInstruction.where(timing.repeat.where(bounds.where($this is Duration).where(value = 3 and unit.hasValue() and system and code = 'd') and and period = 1 and periodUnit = 'd').exists()).exists()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <label value="1-14-4"/>
            <description value="Contains .dosageInstruction.asNeededCodeableConcept with .coding with .system 'https://referentiemodel.nhg.org/tabellen/nhg-tabel-25-gebruiksvoorschrift#aanvullend-numeriek' and .code '1028' and .display. This assert checks only one child. Assert 1-14 checks if all children are present in the same parent"/>
            <direction value="response"/>
            <!--FHIRPath expressions with .ofType(...) are poorly supported at the moment, so it was rewritten. Original expression: 'Bundle.entry.resource.ofType(MedicationRequest).where(id = '${mp-MedAgr-mp9-MBH300script4MA-id}').dosageInstruction.where(asNeeded.ofType(CodeableConcept).coding.where(system = 'https://referentiemodel.nhg.org/tabellen/nhg-tabel-25-gebruiksvoorschrift#aanvullend-numeriek' and code = '1028' and display).exists()).exists()'-->
            <expression value="Bundle.entry.resource.where($this is MedicationRequest).where(id = '${mp-MedAgr-mp9-MBH300script4MA-id}').dosageInstruction.where(asNeeded.where($this is CodeableConcept).coding.where(system = 'https://referentiemodel.nhg.org/tabellen/nhg-tabel-25-gebruiksvoorschrift#aanvullend-numeriek' and code = '1028' and display).exists()).exists()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <label value="1-14-5"/>
            <description value="Contains .dosageInstruction.route with .coding with .system 'urn:oid:2.16.840.1.113883.2.4.4.9' and .code '9' and .display. This assert checks only one child. Assert 1-14 checks if all children are present in the same parent"/>
            <direction value="response"/>
            <!--FHIRPath expressions with .ofType(...) are poorly supported at the moment, so it was rewritten. Original expression: 'Bundle.entry.resource.ofType(MedicationRequest).where(id = '${mp-MedAgr-mp9-MBH300script4MA-id}').dosageInstruction.where(route.coding.where(system = 'urn:oid:2.16.840.1.113883.2.4.4.9' and code = '9' and display).exists()).exists()'-->
            <expression value="Bundle.entry.resource.where($this is MedicationRequest).where(id = '${mp-MedAgr-mp9-MBH300script4MA-id}').dosageInstruction.where(route.coding.where(system = 'urn:oid:2.16.840.1.113883.2.4.4.9' and code = '9' and display).exists()).exists()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <label value="1-14-6"/>
            <description value="Contains .dosageInstruction.doseAndRate with .doseQuantity with .extension with url 'http://hl7.org/fhir/StructureDefinition/iso21090-PQ-translation' with .valueQuantity with .value '2' and .unit and .system 'urn:oid:2.16.840.1.113883.2.4.4.1.900.2' and .code '245' and .value '2' and .unit and .system 'http://unitsofmeasure.org' and .code '1'. This assert checks only one child. Assert 1-14 checks if all children are present in the same parent"/>
            <direction value="response"/>
            <!--FHIRPath expressions with .ofType(...) are poorly supported at the moment, so it was rewritten. Original expression: 'Bundle.entry.resource.ofType(MedicationRequest).where(id = '${mp-MedAgr-mp9-MBH300script4MA-id}').dosageInstruction.where(doseAndRate.where(dose.ofType(Quantity).where(extension('http://hl7.org/fhir/StructureDefinition/iso21090-PQ-translation').value.ofType(Quantity).where(value = 2 and unit and system = 'urn:oid:2.16.840.1.113883.2.4.4.1.900.2' and code = '245') and value = 2 and unit and system = 'http://unitsofmeasure.org' and code = '1')).exists()).exists()'-->
            <expression value="Bundle.entry.resource.where($this is MedicationRequest).where(id = '${mp-MedAgr-mp9-MBH300script4MA-id}').dosageInstruction.where(doseAndRate.where(dose.where($this is Quantity).where(extension('http://hl7.org/fhir/StructureDefinition/iso21090-PQ-translation').value.where($this is Quantity).where(value = 2 and unit and system = 'urn:oid:2.16.840.1.113883.2.4.4.1.900.2' and code = '245') and value = 2 and unit and system = 'http://unitsofmeasure.org' and code = '1')).exists()).exists()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <label value="1-14-7"/>
            <description value="Contains .dosageInstruction.maxDosePerPeriod with .numerator with .extension with url 'http://hl7.org/fhir/StructureDefinition/iso21090-PQ-translation' with .valueQuantity with .value '6' and .unit and .system 'urn:oid:2.16.840.1.113883.2.4.4.1.900.2' and .code '245' and .value '6' and .unit and .system 'http://unitsofmeasure.org' and .code '1' and .denominator with .value '1' and .unit and .system 'http://unitsofmeasure.org' and .code 'd'. This assert checks only one child. Assert 1-14 checks if all children are present in the same parent"/>
            <direction value="response"/>
            <!--FHIRPath expressions with .ofType(...) are poorly supported at the moment, so it was rewritten. Original expression: 'Bundle.entry.resource.ofType(MedicationRequest).where(id = '${mp-MedAgr-mp9-MBH300script4MA-id}').dosageInstruction.where(maxDosePerPeriod.where(numerator.where(extension('http://hl7.org/fhir/StructureDefinition/iso21090-PQ-translation').value.ofType(Quantity).where(value = 6 and unit and system = 'urn:oid:2.16.840.1.113883.2.4.4.1.900.2' and code = '245') and value = 6 and unit and system = 'http://unitsofmeasure.org' and code = '1') and denominator.where(value = 1 and unit and system = 'http://unitsofmeasure.org' and code = 'd')).exists()).exists()'-->
            <expression value="Bundle.entry.resource.where($this is MedicationRequest).where(id = '${mp-MedAgr-mp9-MBH300script4MA-id}').dosageInstruction.where(maxDosePerPeriod.where(numerator.where(extension('http://hl7.org/fhir/StructureDefinition/iso21090-PQ-translation').value.where($this is Quantity).where(value = 6 and unit and system = 'urn:oid:2.16.840.1.113883.2.4.4.1.900.2' and code = '245') and value = 6 and unit and system = 'http://unitsofmeasure.org' and code = '1') and denominator.where(value = 1 and unit and system = 'http://unitsofmeasure.org' and code = 'd')).exists()).exists()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <label value="1-15"/>
            <description value="Contains .dosageInstruction with .sequence '2', and .additionalInstruction with .coding with .system 'http://terminology.hl7.org/CodeSystem/v3-NullFlavor' and .code 'OTH' and .display and .text with a value, and .timing with .repeat with .boundsDuration with .value '7' and .unit with a value and .system and .code 'd' and .frequency with ... and .period '1' and .periodUnit 'd', and .route with .coding with .system 'urn:oid:2.16.840.1.113883.2.4.4.9' and .code '9' and .display, and .doseAndRate with .doseQuantity with .extension with url 'http://hl7.org/fhir/StructureDefinition/iso21090-PQ-translation' with .valueQuantity with .value '1' and .unit and .system 'urn:oid:2.16.840.1.113883.2.4.4.1.900.2' and .code '245' and .value '1' and .unit and .system 'http://unitsofmeasure.org' and .code '1'. This assert checks if all children exist (if applicable with their specific values) and if they are present within one element. Following asserts check if individual children exist to help you debug if this assert fails"/>
            <direction value="response"/>
            <!--FHIRPath expressions with .ofType(...) are poorly supported at the moment, so it was rewritten. Original expression: 'Bundle.entry.resource.ofType(MedicationRequest).where(id = '${mp-MedAgr-mp9-MBH300script4MA-id}').dosageInstruction.where(sequence = 2 and additionalInstruction.where(coding.where(system = 'http://terminology.hl7.org/CodeSystem/v3-NullFlavor' and code = 'OTH' and display) and text.hasValue()) and timing.repeat.where(bounds.ofType(Duration).where(value = 7 and unit.hasValue() and system and code = 'd') and  and period = 1 and periodUnit = 'd') and route.coding.where(system = 'urn:oid:2.16.840.1.113883.2.4.4.9' and code = '9' and display) and doseAndRate.where(dose.ofType(Quantity).where(extension('http://hl7.org/fhir/StructureDefinition/iso21090-PQ-translation').value.ofType(Quantity).where(value = 1 and unit and system = 'urn:oid:2.16.840.1.113883.2.4.4.1.900.2' and code = '245') and value = 1 and unit and system = 'http://unitsofmeasure.org' and code = '1'))).exists()'-->
            <expression value="Bundle.entry.resource.where($this is MedicationRequest).where(id = '${mp-MedAgr-mp9-MBH300script4MA-id}').dosageInstruction.where(sequence = 2 and additionalInstruction.where(coding.where(system = 'http://terminology.hl7.org/CodeSystem/v3-NullFlavor' and code = 'OTH' and display) and text.hasValue()) and timing.repeat.where(bounds.where($this is Duration).where(value = 7 and unit.hasValue() and system and code = 'd') and and period = 1 and periodUnit = 'd') and route.coding.where(system = 'urn:oid:2.16.840.1.113883.2.4.4.9' and code = '9' and display) and doseAndRate.where(dose.where($this is Quantity).where(extension('http://hl7.org/fhir/StructureDefinition/iso21090-PQ-translation').value.where($this is Quantity).where(value = 1 and unit and system = 'urn:oid:2.16.840.1.113883.2.4.4.1.900.2' and code = '245') and value = 1 and unit and system = 'http://unitsofmeasure.org' and code = '1'))).exists()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <label value="1-15-1"/>
            <description value="Contains .dosageInstruction.sequence '2'. This assert checks only one child. Assert 1-15 checks if all children are present in the same parent"/>
            <direction value="response"/>
            <!--FHIRPath expressions with .ofType(...) are poorly supported at the moment, so it was rewritten. Original expression: 'Bundle.entry.resource.ofType(MedicationRequest).where(id = '${mp-MedAgr-mp9-MBH300script4MA-id}').dosageInstruction.where(sequence = 2).exists()'-->
            <expression value="Bundle.entry.resource.where($this is MedicationRequest).where(id = '${mp-MedAgr-mp9-MBH300script4MA-id}').dosageInstruction.where(sequence = 2).exists()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <label value="1-15-2"/>
            <description value="Contains .dosageInstruction.additionalInstruction with .coding with .system 'http://terminology.hl7.org/CodeSystem/v3-NullFlavor' and .code 'OTH' and .display and .text with a value. This assert checks only one child. Assert 1-15 checks if all children are present in the same parent"/>
            <direction value="response"/>
            <!--FHIRPath expressions with .ofType(...) are poorly supported at the moment, so it was rewritten. Original expression: 'Bundle.entry.resource.ofType(MedicationRequest).where(id = '${mp-MedAgr-mp9-MBH300script4MA-id}').dosageInstruction.where(additionalInstruction.where(coding.where(system = 'http://terminology.hl7.org/CodeSystem/v3-NullFlavor' and code = 'OTH' and display) and text.hasValue()).exists()).exists()'-->
            <expression value="Bundle.entry.resource.where($this is MedicationRequest).where(id = '${mp-MedAgr-mp9-MBH300script4MA-id}').dosageInstruction.where(additionalInstruction.where(coding.where(system = 'http://terminology.hl7.org/CodeSystem/v3-NullFlavor' and code = 'OTH' and display) and text.hasValue()).exists()).exists()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <label value="1-15-3"/>
            <description value="Contains .dosageInstruction.timing with .repeat with .boundsDuration with .value '7' and .unit with a value and .system and .code 'd' and .frequency with ... and .period '1' and .periodUnit 'd'. This assert checks only one child. Assert 1-15 checks if all children are present in the same parent"/>
            <direction value="response"/>
            <!--FHIRPath expressions with .ofType(...) are poorly supported at the moment, so it was rewritten. Original expression: 'Bundle.entry.resource.ofType(MedicationRequest).where(id = '${mp-MedAgr-mp9-MBH300script4MA-id}').dosageInstruction.where(timing.repeat.where(bounds.ofType(Duration).where(value = 7 and unit.hasValue() and system and code = 'd') and and period = 1 and periodUnit = 'd').exists()).exists()'-->
            <expression value="Bundle.entry.resource.where($this is MedicationRequest).where(id = '${mp-MedAgr-mp9-MBH300script4MA-id}').dosageInstruction.where(timing.repeat.where(bounds.where($this is Duration).where(value = 7 and unit.hasValue() and system and code = 'd') and and period = 1 and periodUnit = 'd').exists()).exists()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <label value="1-15-4"/>
            <description value="Contains .dosageInstruction.route with .coding with .system 'urn:oid:2.16.840.1.113883.2.4.4.9' and .code '9' and .display. This assert checks only one child. Assert 1-15 checks if all children are present in the same parent"/>
            <direction value="response"/>
            <!--FHIRPath expressions with .ofType(...) are poorly supported at the moment, so it was rewritten. Original expression: 'Bundle.entry.resource.ofType(MedicationRequest).where(id = '${mp-MedAgr-mp9-MBH300script4MA-id}').dosageInstruction.where(route.coding.where(system = 'urn:oid:2.16.840.1.113883.2.4.4.9' and code = '9' and display).exists()).exists()'-->
            <expression value="Bundle.entry.resource.where($this is MedicationRequest).where(id = '${mp-MedAgr-mp9-MBH300script4MA-id}').dosageInstruction.where(route.coding.where(system = 'urn:oid:2.16.840.1.113883.2.4.4.9' and code = '9' and display).exists()).exists()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <label value="1-15-5"/>
            <description value="Contains .dosageInstruction.doseAndRate with .doseQuantity with .extension with url 'http://hl7.org/fhir/StructureDefinition/iso21090-PQ-translation' with .valueQuantity with .value '1' and .unit and .system 'urn:oid:2.16.840.1.113883.2.4.4.1.900.2' and .code '245' and .value '1' and .unit and .system 'http://unitsofmeasure.org' and .code '1'. This assert checks only one child. Assert 1-15 checks if all children are present in the same parent"/>
            <direction value="response"/>
            <!--FHIRPath expressions with .ofType(...) are poorly supported at the moment, so it was rewritten. Original expression: 'Bundle.entry.resource.ofType(MedicationRequest).where(id = '${mp-MedAgr-mp9-MBH300script4MA-id}').dosageInstruction.where(doseAndRate.where(dose.ofType(Quantity).where(extension('http://hl7.org/fhir/StructureDefinition/iso21090-PQ-translation').value.ofType(Quantity).where(value = 1 and unit and system = 'urn:oid:2.16.840.1.113883.2.4.4.1.900.2' and code = '245') and value = 1 and unit and system = 'http://unitsofmeasure.org' and code = '1')).exists()).exists()'-->
            <expression value="Bundle.entry.resource.where($this is MedicationRequest).where(id = '${mp-MedAgr-mp9-MBH300script4MA-id}').dosageInstruction.where(doseAndRate.where(dose.where($this is Quantity).where(extension('http://hl7.org/fhir/StructureDefinition/iso21090-PQ-translation').value.where($this is Quantity).where(value = 1 and unit and system = 'urn:oid:2.16.840.1.113883.2.4.4.1.900.2' and code = '245') and value = 1 and unit and system = 'http://unitsofmeasure.org' and code = '1')).exists()).exists()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <label value="1-16"/>
            <description value="Contains .dosageInstruction with .sequence '2', and .additionalInstruction with .coding with .system 'http://terminology.hl7.org/CodeSystem/v3-NullFlavor' and .code 'OTH' and .display and .text with a value, and .timing with .repeat with .boundsDuration with .value '7' and .unit with a value and .system and .code 'd' and .frequency with ... and .period '1' and .periodUnit 'd', and .asNeededCodeableConcept with .coding with .system 'https://referentiemodel.nhg.org/tabellen/nhg-tabel-25-gebruiksvoorschrift#aanvullend-numeriek' and .code '1028' and .display, and .route with .coding with .system 'urn:oid:2.16.840.1.113883.2.4.4.9' and .code '9' and .display, and .doseAndRate with .doseQuantity with .extension with url 'http://hl7.org/fhir/StructureDefinition/iso21090-PQ-translation' with .valueQuantity with .value '1' and .unit and .system 'urn:oid:2.16.840.1.113883.2.4.4.1.900.2' and .code '245' and .value '1' and .unit and .system 'http://unitsofmeasure.org' and .code '1', and .maxDosePerPeriod with .numerator with .extension with url 'http://hl7.org/fhir/StructureDefinition/iso21090-PQ-translation' with .valueQuantity with .value '4' and .unit and .system 'urn:oid:2.16.840.1.113883.2.4.4.1.900.2' and .code '245' and .value '4' and .unit and .system 'http://unitsofmeasure.org' and .code '1' and .denominator with .value '1' and .unit and .system 'http://unitsofmeasure.org' and .code 'd'. This assert checks if all children exist (if applicable with their specific values) and if they are present within one element. Following asserts check if individual children exist to help you debug if this assert fails"/>
            <direction value="response"/>
            <!--FHIRPath expressions with .ofType(...) are poorly supported at the moment, so it was rewritten. Original expression: 'Bundle.entry.resource.ofType(MedicationRequest).where(id = '${mp-MedAgr-mp9-MBH300script4MA-id}').dosageInstruction.where(sequence = 2 and additionalInstruction.where(coding.where(system = 'http://terminology.hl7.org/CodeSystem/v3-NullFlavor' and code = 'OTH' and display) and text.hasValue()) and timing.repeat.where(bounds.ofType(Duration).where(value = 7 and unit.hasValue() and system and code = 'd') and  and period = 1 and periodUnit = 'd') and asNeeded.ofType(CodeableConcept).coding.where(system = 'https://referentiemodel.nhg.org/tabellen/nhg-tabel-25-gebruiksvoorschrift#aanvullend-numeriek' and code = '1028' and display) and route.coding.where(system = 'urn:oid:2.16.840.1.113883.2.4.4.9' and code = '9' and display) and doseAndRate.where(dose.ofType(Quantity).where(extension('http://hl7.org/fhir/StructureDefinition/iso21090-PQ-translation').value.ofType(Quantity).where(value = 1 and unit and system = 'urn:oid:2.16.840.1.113883.2.4.4.1.900.2' and code = '245') and value = 1 and unit and system = 'http://unitsofmeasure.org' and code = '1')) and maxDosePerPeriod.where(numerator.where(extension('http://hl7.org/fhir/StructureDefinition/iso21090-PQ-translation').value.ofType(Quantity).where(value = 4 and unit and system = 'urn:oid:2.16.840.1.113883.2.4.4.1.900.2' and code = '245') and value = 4 and unit and system = 'http://unitsofmeasure.org' and code = '1') and denominator.where(value = 1 and unit and system = 'http://unitsofmeasure.org' and code = 'd'))).exists()'-->
            <expression value="Bundle.entry.resource.where($this is MedicationRequest).where(id = '${mp-MedAgr-mp9-MBH300script4MA-id}').dosageInstruction.where(sequence = 2 and additionalInstruction.where(coding.where(system = 'http://terminology.hl7.org/CodeSystem/v3-NullFlavor' and code = 'OTH' and display) and text.hasValue()) and timing.repeat.where(bounds.where($this is Duration).where(value = 7 and unit.hasValue() and system and code = 'd') and and period = 1 and periodUnit = 'd') and asNeeded.where($this is CodeableConcept).coding.where(system = 'https://referentiemodel.nhg.org/tabellen/nhg-tabel-25-gebruiksvoorschrift#aanvullend-numeriek' and code = '1028' and display) and route.coding.where(system = 'urn:oid:2.16.840.1.113883.2.4.4.9' and code = '9' and display) and doseAndRate.where(dose.where($this is Quantity).where(extension('http://hl7.org/fhir/StructureDefinition/iso21090-PQ-translation').value.where($this is Quantity).where(value = 1 and unit and system = 'urn:oid:2.16.840.1.113883.2.4.4.1.900.2' and code = '245') and value = 1 and unit and system = 'http://unitsofmeasure.org' and code = '1')) and maxDosePerPeriod.where(numerator.where(extension('http://hl7.org/fhir/StructureDefinition/iso21090-PQ-translation').value.where($this is Quantity).where(value = 4 and unit and system = 'urn:oid:2.16.840.1.113883.2.4.4.1.900.2' and code = '245') and value = 4 and unit and system = 'http://unitsofmeasure.org' and code = '1') and denominator.where(value = 1 and unit and system = 'http://unitsofmeasure.org' and code = 'd'))).exists()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <label value="1-16-1"/>
            <description value="Contains .dosageInstruction.sequence '2'. This assert checks only one child. Assert 1-16 checks if all children are present in the same parent"/>
            <direction value="response"/>
            <!--FHIRPath expressions with .ofType(...) are poorly supported at the moment, so it was rewritten. Original expression: 'Bundle.entry.resource.ofType(MedicationRequest).where(id = '${mp-MedAgr-mp9-MBH300script4MA-id}').dosageInstruction.where(sequence = 2).exists()'-->
            <expression value="Bundle.entry.resource.where($this is MedicationRequest).where(id = '${mp-MedAgr-mp9-MBH300script4MA-id}').dosageInstruction.where(sequence = 2).exists()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <label value="1-16-2"/>
            <description value="Contains .dosageInstruction.additionalInstruction with .coding with .system 'http://terminology.hl7.org/CodeSystem/v3-NullFlavor' and .code 'OTH' and .display and .text with a value. This assert checks only one child. Assert 1-16 checks if all children are present in the same parent"/>
            <direction value="response"/>
            <!--FHIRPath expressions with .ofType(...) are poorly supported at the moment, so it was rewritten. Original expression: 'Bundle.entry.resource.ofType(MedicationRequest).where(id = '${mp-MedAgr-mp9-MBH300script4MA-id}').dosageInstruction.where(additionalInstruction.where(coding.where(system = 'http://terminology.hl7.org/CodeSystem/v3-NullFlavor' and code = 'OTH' and display) and text.hasValue()).exists()).exists()'-->
            <expression value="Bundle.entry.resource.where($this is MedicationRequest).where(id = '${mp-MedAgr-mp9-MBH300script4MA-id}').dosageInstruction.where(additionalInstruction.where(coding.where(system = 'http://terminology.hl7.org/CodeSystem/v3-NullFlavor' and code = 'OTH' and display) and text.hasValue()).exists()).exists()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <label value="1-16-3"/>
            <description value="Contains .dosageInstruction.timing with .repeat with .boundsDuration with .value '7' and .unit with a value and .system and .code 'd' and .frequency with ... and .period '1' and .periodUnit 'd'. This assert checks only one child. Assert 1-16 checks if all children are present in the same parent"/>
            <direction value="response"/>
            <!--FHIRPath expressions with .ofType(...) are poorly supported at the moment, so it was rewritten. Original expression: 'Bundle.entry.resource.ofType(MedicationRequest).where(id = '${mp-MedAgr-mp9-MBH300script4MA-id}').dosageInstruction.where(timing.repeat.where(bounds.ofType(Duration).where(value = 7 and unit.hasValue() and system and code = 'd') and and period = 1 and periodUnit = 'd').exists()).exists()'-->
            <expression value="Bundle.entry.resource.where($this is MedicationRequest).where(id = '${mp-MedAgr-mp9-MBH300script4MA-id}').dosageInstruction.where(timing.repeat.where(bounds.where($this is Duration).where(value = 7 and unit.hasValue() and system and code = 'd') and and period = 1 and periodUnit = 'd').exists()).exists()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <label value="1-16-4"/>
            <description value="Contains .dosageInstruction.asNeededCodeableConcept with .coding with .system 'https://referentiemodel.nhg.org/tabellen/nhg-tabel-25-gebruiksvoorschrift#aanvullend-numeriek' and .code '1028' and .display. This assert checks only one child. Assert 1-16 checks if all children are present in the same parent"/>
            <direction value="response"/>
            <!--FHIRPath expressions with .ofType(...) are poorly supported at the moment, so it was rewritten. Original expression: 'Bundle.entry.resource.ofType(MedicationRequest).where(id = '${mp-MedAgr-mp9-MBH300script4MA-id}').dosageInstruction.where(asNeeded.ofType(CodeableConcept).coding.where(system = 'https://referentiemodel.nhg.org/tabellen/nhg-tabel-25-gebruiksvoorschrift#aanvullend-numeriek' and code = '1028' and display).exists()).exists()'-->
            <expression value="Bundle.entry.resource.where($this is MedicationRequest).where(id = '${mp-MedAgr-mp9-MBH300script4MA-id}').dosageInstruction.where(asNeeded.where($this is CodeableConcept).coding.where(system = 'https://referentiemodel.nhg.org/tabellen/nhg-tabel-25-gebruiksvoorschrift#aanvullend-numeriek' and code = '1028' and display).exists()).exists()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <label value="1-16-5"/>
            <description value="Contains .dosageInstruction.route with .coding with .system 'urn:oid:2.16.840.1.113883.2.4.4.9' and .code '9' and .display. This assert checks only one child. Assert 1-16 checks if all children are present in the same parent"/>
            <direction value="response"/>
            <!--FHIRPath expressions with .ofType(...) are poorly supported at the moment, so it was rewritten. Original expression: 'Bundle.entry.resource.ofType(MedicationRequest).where(id = '${mp-MedAgr-mp9-MBH300script4MA-id}').dosageInstruction.where(route.coding.where(system = 'urn:oid:2.16.840.1.113883.2.4.4.9' and code = '9' and display).exists()).exists()'-->
            <expression value="Bundle.entry.resource.where($this is MedicationRequest).where(id = '${mp-MedAgr-mp9-MBH300script4MA-id}').dosageInstruction.where(route.coding.where(system = 'urn:oid:2.16.840.1.113883.2.4.4.9' and code = '9' and display).exists()).exists()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <label value="1-16-6"/>
            <description value="Contains .dosageInstruction.doseAndRate with .doseQuantity with .extension with url 'http://hl7.org/fhir/StructureDefinition/iso21090-PQ-translation' with .valueQuantity with .value '1' and .unit and .system 'urn:oid:2.16.840.1.113883.2.4.4.1.900.2' and .code '245' and .value '1' and .unit and .system 'http://unitsofmeasure.org' and .code '1'. This assert checks only one child. Assert 1-16 checks if all children are present in the same parent"/>
            <direction value="response"/>
            <!--FHIRPath expressions with .ofType(...) are poorly supported at the moment, so it was rewritten. Original expression: 'Bundle.entry.resource.ofType(MedicationRequest).where(id = '${mp-MedAgr-mp9-MBH300script4MA-id}').dosageInstruction.where(doseAndRate.where(dose.ofType(Quantity).where(extension('http://hl7.org/fhir/StructureDefinition/iso21090-PQ-translation').value.ofType(Quantity).where(value = 1 and unit and system = 'urn:oid:2.16.840.1.113883.2.4.4.1.900.2' and code = '245') and value = 1 and unit and system = 'http://unitsofmeasure.org' and code = '1')).exists()).exists()'-->
            <expression value="Bundle.entry.resource.where($this is MedicationRequest).where(id = '${mp-MedAgr-mp9-MBH300script4MA-id}').dosageInstruction.where(doseAndRate.where(dose.where($this is Quantity).where(extension('http://hl7.org/fhir/StructureDefinition/iso21090-PQ-translation').value.where($this is Quantity).where(value = 1 and unit and system = 'urn:oid:2.16.840.1.113883.2.4.4.1.900.2' and code = '245') and value = 1 and unit and system = 'http://unitsofmeasure.org' and code = '1')).exists()).exists()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <label value="1-16-7"/>
            <description value="Contains .dosageInstruction.maxDosePerPeriod with .numerator with .extension with url 'http://hl7.org/fhir/StructureDefinition/iso21090-PQ-translation' with .valueQuantity with .value '4' and .unit and .system 'urn:oid:2.16.840.1.113883.2.4.4.1.900.2' and .code '245' and .value '4' and .unit and .system 'http://unitsofmeasure.org' and .code '1' and .denominator with .value '1' and .unit and .system 'http://unitsofmeasure.org' and .code 'd'. This assert checks only one child. Assert 1-16 checks if all children are present in the same parent"/>
            <direction value="response"/>
            <!--FHIRPath expressions with .ofType(...) are poorly supported at the moment, so it was rewritten. Original expression: 'Bundle.entry.resource.ofType(MedicationRequest).where(id = '${mp-MedAgr-mp9-MBH300script4MA-id}').dosageInstruction.where(maxDosePerPeriod.where(numerator.where(extension('http://hl7.org/fhir/StructureDefinition/iso21090-PQ-translation').value.ofType(Quantity).where(value = 4 and unit and system = 'urn:oid:2.16.840.1.113883.2.4.4.1.900.2' and code = '245') and value = 4 and unit and system = 'http://unitsofmeasure.org' and code = '1') and denominator.where(value = 1 and unit and system = 'http://unitsofmeasure.org' and code = 'd')).exists()).exists()'-->
            <expression value="Bundle.entry.resource.where($this is MedicationRequest).where(id = '${mp-MedAgr-mp9-MBH300script4MA-id}').dosageInstruction.where(maxDosePerPeriod.where(numerator.where(extension('http://hl7.org/fhir/StructureDefinition/iso21090-PQ-translation').value.where($this is Quantity).where(value = 4 and unit and system = 'urn:oid:2.16.840.1.113883.2.4.4.1.900.2' and code = '245') and value = 4 and unit and system = 'http://unitsofmeasure.org' and code = '1') and denominator.where(value = 1 and unit and system = 'http://unitsofmeasure.org' and code = 'd')).exists()).exists()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
   </test>
</TestScript>
