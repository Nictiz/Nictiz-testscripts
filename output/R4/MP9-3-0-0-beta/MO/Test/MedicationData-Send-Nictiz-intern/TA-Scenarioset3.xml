<?xml version="1.0" encoding="UTF-8"?>
<TestScript xmlns="http://hl7.org/fhir" xmlns:nts="http://nictiz.nl/xsl/testscript">
   <id value="mp9-meddata-send-3-x-Nictiz-intern"/>
   <meta>
      <profile value="http://touchstone.aegis.net/touchstone/fhir/testing/StructureDefinition/testscript"/>
   </meta>
   <url value="http://nictiz.nl/fhir/TestScript/mp9-meddata-send-3-x-Nictiz-intern"/>
   <version value="r4-mp9-3.0.0-beta-patchlevel 2025-02"/>
   <name value="MP9 - Client - Scenario 3.x - Send MedicationData - TA-Scenarioset3 - target Nictiz-intern"/>
   <status value="active"/>
   <publisher value="Nictiz"/>
   <contact>
      <name value="Nictiz"/>
      <telecom>
         <system value="email"/>
         <value value="kwalificatie@nictiz.nl"/>
         <use value="work"/>
      </telecom>
   </contact>
   <description value="Scenario 3.x - Send MedicationData for J. de XXX_Luzac."/>
   <origin>
      <extension url="http://fhir.interoplab.eu/fhir/StructureDefinition/Interoplab-CL-ext-SUT">
         <valueBoolean value="true"/>
      </extension>
      <index value="1"/>
      <profile>
         <system value="http://terminology.hl7.org/CodeSystem/testscript-profile-origin-types"/>
         <code value="FHIR-Client"/>
      </profile>
   </origin>
   <destination>
      <extension url="http://fhir.interoplab.eu/fhir/StructureDefinition/Interoplab-CL-ext-SUT">
         <valueBoolean value="false"/>
      </extension>
      <index value="1"/>
      <profile>
         <system value="http://terminology.hl7.org/CodeSystem/testscript-profile-destination-types"/>
         <code value="FHIR-Server"/>
      </profile>
   </destination>
   <fixture id="mgsets-mp-smg-tst-TA-Scenarioset3-v30">
      <autocreate value="false"/>
      <autodelete value="false"/>
      <resource>
         <reference value="../_reference/fixtures/mgsets-mp-smg-tst-TA-Scenarioset3-v30.xml"/>
      </resource>
   </fixture>
   <profile id="Bundle-profile"
            value="http://hl7.org/fhir/StructureDefinition/Bundle"/>
   <variable>
      <name value="T"/>
      <defaultValue value="${CURRENTDATE}"/>
      <description value="Date that data and queries are expected to be relative to."/>
   </variable>
   <test id="scenario3-x-send-meddata">
      <name value="Scenario 3.x"/>
      <description value="Send MedicationData in a transaction Bundle"/>
      <action>
         <operation>
            <type>
               <system value="http://hl7.org/fhir/restful-interaction"/>
               <code value="transaction"/>
            </type>
            <description value="Test client to POST a Bundle of type transaction."/>
            <destination value="1"/>
            <encodeRequestUrl value="true"/>
            <origin value="1"/>
            <responseId value="transaction-response-fixture"/>
            <sourceId value="mgsets-mp-smg-tst-TA-Scenarioset3-v30"/>
         </operation>
      </action>
      <action>
         <assert>
            <description value="Confirm that request Bundle is of type transaction."/>
            <direction value="request"/>
            <expression value="Bundle.type = 'transaction'"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that the fullUrl does not disagree with the id in the resource, see http://hl7.org/fhir/stu3/bundle-definitions.html#Bundle.entry.fullUrl"/>
            <direction value="request"/>
            <expression value="Bundle.entry.where(fullUrl.exists() and resource.id.exists()).all($this.fullUrl.endsWith($this.resource.id))"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that the fullUrl is an absolute URL, an uuid or an oid."/>
            <direction value="request"/>
            <expression value="Bundle.entry.fullUrl.all( startsWith('http://') or startsWith('https://') or matches('^urn:oid:[0-2](\\.(0|[1-9]\\d*))*$') or matches('^urn:uuid:[A-Fa-f\\d]{8}-[A-Fa-f\\d]{4}-[A-Fa-f\\d]{4}-[A-Fa-f\\d]{4}-[A-Fa-f\\d]{12}$') )"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that the returned Bundle conforms to the base FHIR specification and the resources to the stated profiles in the meta.profile tag."/>
            <direction value="request"/>
            <stopTestOnFail value="false"/>
            <validateProfileId value="Bundle-profile"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that all Coding elements contain both a .system and a .code."/>
            <direction value="request"/>
            <expression value="Bundle.descendants().where($this.is(Coding)).all(system.exists() and code.exists())"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that the OID of the zib valueset is not used for the system of a coding element."/>
            <direction value="request"/>
            <expression value="Bundle.descendants().where($this.is(coding)).where(system.startsWith('urn:oid:2.16.840.1.113883.2.4.3.11.60.40.2')).exists().not()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that all CodeableConcept elements contain either a coding.display or a text value if no Coding exists or has an extension (e.g. a nullFlavor or data-absent-reason extension). For more information see https://informatiestandaarden.nictiz.nl/wiki/FHIR:V1.0_FHIR_IG_STU3Use_of_coded_concepts."/>
            <direction value="request"/>
            <expression value="Bundle.descendants().where($this.is(CodeableConcept)) .all(coding.display.exists() or text.exists() or extension.exists())"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that all References have a display value, see https://informatiestandaarden.nictiz.nl/wiki/FHIR:V1.0_FHIR_IG_STU3#Use_of_the_reference_datatype."/>
            <direction value="request"/>
            <expression value="Bundle.descendants().where($this.is(Reference)).all(display.exists() or extension.where(url = 'http://hl7.org/fhir/StructureDefinition/data-absent-reason').exists() or extension.where(url = 'http://hl7.org/fhir/StructureDefinition/iso21090-nullFlavor').exists())"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that all Identifiers have both a .system and a .value. In rare cases where a general category of identifiers can be used, .type can replace .system. Edge cases for both .system and .type to be unknown are not applicable to Nictiz. For more information, see https://www.hl7.org/fhir/stu3/datatypes.html#Identifier."/>
            <direction value="request"/>
            <expression value="Bundle.descendants().where($this.is(Identifier)).all((system.exists() or type.exists()) and value.exists())"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that all resources that are updated contain a Resource.id and a fullUrl."/>
            <direction value="request"/>
            <expression value="Bundle.entry.where(request.method='PUT').all( $this.fullUrl.exists() and $this.resource.id.exists())"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that all resources that are created don't contain a Resource.id. Warning only because it not forbidden, however, the resource does not need to have an id element. If an id is provided, the server SHALL ignore it."/>
            <direction value="request"/>
            <expression value="Bundle.entry.where(request.method='POST').all($this.resource.id.exists().not())"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="true"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that all resources that are created don't have a RESTful fullUrl."/>
            <direction value="request"/>
            <expression value="Bundle.entry.where(request.method='POST').all( $this.fullUrl.startsWith('http://').not() and $this.fullUrl.startsWith('https://').not() )"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that all resources that are created don't have a fullUrl or have a UUID or OID based fullUrl."/>
            <direction value="request"/>
            <expression value="Bundle.entry.where(request.method='POST').fullUrl.all( exists().not or matches('^urn:oid:[0-2](\\.(0|[1-9]\\d*))*$') or matches('^urn:uuid:[A-Fa-f\\d]{8}-[A-Fa-f\\d]{4}-[A-Fa-f\\d]{4}-[A-Fa-f\\d]{4}-[A-Fa-f\\d]{12}$') )"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that all posted resources except Binary contain a meta.profile tag."/>
            <direction value="request"/>
            <expression value="Bundle.entry.resource.where(is(Binary).not()).where(meta.profile.empty()).empty()"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <extension url="http://touchstone.aegis.net/touchstone/fhir/testing/StructureDefinition/testscript-assert-stopTestOnFail">
               <valueBoolean value="true"/>
            </extension>
            <description value="Confirm that the operation was successful"/>
            <operator value="in"/>
            <responseCode value="200,201"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that the request Bundle contains 25 MedicationDispense resource(s). "/>
            <direction value="request"/>
            <expression value="Bundle.entry.where(resource.is(MedicationDispense)).count() = 25"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that the request Bundle contains 12 Medication resource(s). "/>
            <direction value="request"/>
            <expression value="Bundle.entry.where(resource.is(Medication)).count() = 12"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
   </test>
   <test id="scenario3-x-send-meddata-identification">
      <name value="Resource identification"/>
      <description value="Checks if all resources specified by the scenario can be identified unambiguously."/>
      <action>
         <assert>
            <expression value="Bundle.entry.select(resource as MedicationDispense).where(medication.resolve().code.where(coding.where(code = '1110837') and coding.where(code = '49484') and coding.where(code = '103039'))).where(modifierExtension.where(url = 'http://nictiz.nl/fhir/StructureDefinition/ext-StopType').exists().not()).count() = 1"/>
            <sourceId value="transaction-request"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <expression value="Bundle.entry.select(resource as MedicationDispense).where(medication.resolve().code.where(coding.where(code = '1110837') and coding.where(code = '49484') and coding.where(code = '103039'))).where(modifierExtension.where(url = 'http://nictiz.nl/fhir/StructureDefinition/ext-StopType').value.coding.code = '410546004').count() = 1"/>
            <sourceId value="transaction-request"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <expression value="Bundle.entry.select(resource as MedicationDispense).where(medication.resolve().code.where(coding.where(code = '598860') and coding.where(code = '5967') and coding.where(code = '16810'))).count() = 1"/>
            <sourceId value="transaction-request"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <expression value="Bundle.entry.select(resource as MedicationDispense).where(medication.resolve().code.where(coding.where(code = '598860') and coding.where(code = '5967') and coding.where(code = '16810'))).count() = 1"/>
            <sourceId value="transaction-request"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <expression value="Bundle.entry.select(resource as MedicationDispense).where(medication.resolve().code.where(coding.where(code = '598860') and coding.where(code = '5967') and coding.where(code = '16810'))).where(modifierExtension.where(url = 'http://nictiz.nl/fhir/StructureDefinition/ext-StopType').value.coding.code = '410546004').count() = 1"/>
            <sourceId value="transaction-request"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <expression value="Bundle.entry.select(resource as MedicationDispense).where(medication.resolve().code.where(coding.where(code = '869244') and coding.where(code = '42293') and coding.where(code = '15342'))).count() = 1"/>
            <sourceId value="transaction-request"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <expression value="Bundle.entry.select(resource as MedicationDispense).where(medication.resolve().code.where(coding.where(code = '869244') and coding.where(code = '42293') and coding.where(code = '15342'))).count() = 1"/>
            <sourceId value="transaction-request"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <expression value="Bundle.entry.select(resource as MedicationDispense).where(medication.resolve().code.where(coding.where(code = '869244') and coding.where(code = '42293') and coding.where(code = '15342'))).where(modifierExtension.where(url = 'http://nictiz.nl/fhir/StructureDefinition/ext-StopType').value.coding.code = '410546004').count() = 1"/>
            <sourceId value="transaction-request"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <expression value="Bundle.entry.select(resource as MedicationDispense).where(medication.resolve().code.where(coding.where(code = '425087') and coding.where(code = '17205') and coding.where(code = '41092'))).where(modifierExtension.where(url = 'http://nictiz.nl/fhir/StructureDefinition/ext-StopType').exists().not()).count() = 1"/>
            <sourceId value="transaction-request"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <expression value="Bundle.entry.select(resource as MedicationDispense).where(medication.resolve().code.where(coding.where(code = '425087') and coding.where(code = '17205') and coding.where(code = '41092'))).where(modifierExtension.where(url = 'http://nictiz.nl/fhir/StructureDefinition/ext-StopType').value.coding.code = '385655000').count() = 1"/>
            <sourceId value="transaction-request"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <expression value="Bundle.entry.select(resource as MedicationDispense).where(medication.resolve().code.where(coding.where(code = '878421') and coding.where(code = '43044') and coding.where(code = '96938'))).count() = 1"/>
            <sourceId value="transaction-request"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <expression value="Bundle.entry.select(resource as MedicationDispense).where(medication.resolve().code.where(coding.where(code = '878421') and coding.where(code = '43044') and coding.where(code = '96938'))).count() = 1"/>
            <sourceId value="transaction-request"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <expression value="Bundle.entry.select(resource as MedicationDispense).where(medication.resolve().code.where(coding.where(code = '52272') and coding.where(code = '106275'))).count() = 1"/>
            <sourceId value="transaction-request"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <expression value="Bundle.entry.select(resource as MedicationDispense).where(medication.resolve().code.where(coding.where(code = '602574') and coding.where(code = '25410') and coding.where(code = '66478'))).where(modifierExtension.where(url = 'http://nictiz.nl/fhir/StructureDefinition/ext-StopType').exists().not()).count() = 1"/>
            <sourceId value="transaction-request"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <expression value="Bundle.entry.select(resource as MedicationDispense).where(medication.resolve().code.where(coding.where(code = '602574') and coding.where(code = '25410') and coding.where(code = '66478'))).where(modifierExtension.where(url = 'http://nictiz.nl/fhir/StructureDefinition/ext-StopType').value.coding.code = '89925002').count() = 1"/>
            <sourceId value="transaction-request"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <expression value="Bundle.entry.select(resource as MedicationDispense).where(medication.resolve().code.where(coding.where(code = '878421') and coding.where(code = '43044') and coding.where(code = '96938'))).count() = 1"/>
            <sourceId value="transaction-request"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <expression value="Bundle.entry.select(resource as MedicationDispense).where(medication.resolve().code.where(coding.where(code = '878421') and coding.where(code = '43044') and coding.where(code = '96938'))).count() = 1"/>
            <sourceId value="transaction-request"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <expression value="Bundle.entry.select(resource as MedicationDispense).where(medication.resolve().code.where(coding.where(code = '878421') and coding.where(code = '43044') and coding.where(code = '96938'))).where(extension.where(url = 'http://nictiz.nl/fhir/StructureDefinition/ext-AdministrationAgreement.ReasonModificationOrDiscontinuation').value.coding.code = '112751000146109').count() = 1"/>
            <sourceId value="transaction-request"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <expression value="Bundle.entry.select(resource as MedicationDispense).where(medication.resolve().code.where(coding.where(code = '1163094') and coding.where(code = '52272') and coding.where(code = '106275'))).count() = 1"/>
            <sourceId value="transaction-request"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <expression value="Bundle.entry.select(resource as MedicationDispense).where(medication.resolve().code.where(coding.where(code = '603678') and coding.where(code = '5738') and coding.where(code = '16322'))).count() = 1"/>
            <sourceId value="transaction-request"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <expression value="Bundle.entry.select(resource as MedicationDispense).where(medication.resolve().code.where(coding.where(code = '2202182') and coding.where(code = '123315') and coding.where(code = '155616'))).count() = 1"/>
            <sourceId value="transaction-request"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <expression value="Bundle.entry.select(resource as MedicationDispense).where(medication.resolve().code.where(coding.where(code = '19380') and coding.where(code = '485') and coding.where(code = '1341'))).count() = 1"/>
            <sourceId value="transaction-request"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <expression value="Bundle.entry.select(resource as MedicationDispense).where(medication.resolve().code.where(coding.where(code = '19380') and coding.where(code = '485') and coding.where(code = '1341'))).where(modifierExtension.where(url = 'http://nictiz.nl/fhir/StructureDefinition/ext-StopType').value.coding.code = '410546004').count() = 1"/>
            <sourceId value="transaction-request"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <expression value="Bundle.entry.select(resource as MedicationDispense).where(medication.resolve().code.where(coding.where(code = '19380') and coding.where(code = '485') and coding.where(code = '1341'))).count() = 1"/>
            <sourceId value="transaction-request"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <expression value="Bundle.entry.select(resource as MedicationDispense).where(medication.resolve().code.where(coding.where(code = '1089838') and coding.where(code = '16020') and coding.where(code = '39136'))).count() = 1"/>
            <sourceId value="transaction-request"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that the request Bundle contains 1 Medication resource that contains code '602574|urn:oid:2.16.840.1.113883.2.4.4.7' (LARIAM TABLET 250MG)"/>
            <expression value="Bundle.entry.select(resource as Medication).where(code.coding.where(system = 'urn:oid:2.16.840.1.113883.2.4.4.7' and code = '602574')).count() = 1"/>
            <sourceId value="transaction-request"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that the request Bundle contains 1 Medication resource that contains code '878421|urn:oid:2.16.840.1.113883.2.4.4.7' (PANTOZOL TABLET MSR 40MG)"/>
            <expression value="Bundle.entry.select(resource as Medication).where(code.coding.where(system = 'urn:oid:2.16.840.1.113883.2.4.4.7' and code = '878421')).count() = 1"/>
            <sourceId value="transaction-request"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that the request Bundle contains 1 Medication resource that contains code '52272|urn:oid:2.16.840.1.113883.2.4.4.10' (PANTOPRAZOL TABLET MSR 20MG)"/>
            <expression value="Bundle.entry.select(resource as Medication).where(code.where(coding.count() = 2 and coding.where(system = 'urn:oid:2.16.840.1.113883.2.4.4.10' and code = '52272') and coding.where(system = 'urn:oid:2.16.840.1.113883.2.4.4.1' and code = '106275'))).count() = 1"/>
            <sourceId value="transaction-request"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that the request Bundle contains 1 Medication resource that contains code '1163094|urn:oid:2.16.840.1.113883.2.4.4.7' (PANTOZOL TABLET MSR 20MG)"/>
            <expression value="Bundle.entry.select(resource as Medication).where(code.coding.where(system = 'urn:oid:2.16.840.1.113883.2.4.4.7' and code = '1163094')).count() = 1"/>
            <sourceId value="transaction-request"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that the request Bundle contains 1 Medication resource that contains code '19380|urn:oid:2.16.840.1.113883.2.4.4.7' (SYMMETREL CAPSULE 100MG)"/>
            <expression value="Bundle.entry.select(resource as Medication).where(code.coding.where(system = 'urn:oid:2.16.840.1.113883.2.4.4.7' and code = '19380')).count() = 1"/>
            <sourceId value="transaction-request"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that the request Bundle contains 1 Medication resource that contains code '2202182|urn:oid:2.16.840.1.113883.2.4.4.7' (AMLODIPINE PCH TABLET 5MG (ALS BESILAAT))"/>
            <expression value="Bundle.entry.select(resource as Medication).where(code.coding.where(system = 'urn:oid:2.16.840.1.113883.2.4.4.7' and code = '2202182')).count() = 1"/>
            <sourceId value="transaction-request"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that the request Bundle contains 1 Medication resource that contains code '603678|urn:oid:2.16.840.1.113883.2.4.4.7' (PROPRANOLOL HCL SANDOZ TABLET 80MG)"/>
            <expression value="Bundle.entry.select(resource as Medication).where(code.coding.where(system = 'urn:oid:2.16.840.1.113883.2.4.4.7' and code = '603678')).count() = 1"/>
            <sourceId value="transaction-request"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that the request Bundle contains 1 Medication resource that contains code '1110837|urn:oid:2.16.840.1.113883.2.4.4.7' (ASPIRINE PROTECT EC TABLET MSR 100MG)"/>
            <expression value="Bundle.entry.select(resource as Medication).where(code.coding.where(system = 'urn:oid:2.16.840.1.113883.2.4.4.7' and code = '1110837')).count() = 1"/>
            <sourceId value="transaction-request"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that the request Bundle contains 1 Medication resource that contains code '425087|urn:oid:2.16.840.1.113883.2.4.4.7' (BROXIL CAPSULE 500MG)"/>
            <expression value="Bundle.entry.select(resource as Medication).where(code.coding.where(system = 'urn:oid:2.16.840.1.113883.2.4.4.7' and code = '425087')).count() = 1"/>
            <sourceId value="transaction-request"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that the request Bundle contains 1 Medication resource that contains code '869244|urn:oid:2.16.840.1.113883.2.4.4.7' (FERROFUMARAAT TEVA TABLET 200MG)"/>
            <expression value="Bundle.entry.select(resource as Medication).where(code.coding.where(system = 'urn:oid:2.16.840.1.113883.2.4.4.7' and code = '869244')).count() = 1"/>
            <sourceId value="transaction-request"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that the request Bundle contains 1 Medication resource that contains code '598860|urn:oid:2.16.840.1.113883.2.4.4.7' (FUROSEMIDE SANDOZ TABLET 40MG)"/>
            <expression value="Bundle.entry.select(resource as Medication).where(code.coding.where(system = 'urn:oid:2.16.840.1.113883.2.4.4.7' and code = '598860')).count() = 1"/>
            <sourceId value="transaction-request"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <description value="Confirm that the request Bundle contains 1 Medication resource that contains code '1089838|urn:oid:2.16.840.1.113883.2.4.4.7' (TRIMETHOPRIM CF TABLET 300MG)"/>
            <expression value="Bundle.entry.select(resource as Medication).where(code.coding.where(system = 'urn:oid:2.16.840.1.113883.2.4.4.7' and code = '1089838')).count() = 1"/>
            <sourceId value="transaction-request"/>
            <stopTestOnFail value="false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
   </test>
</TestScript>
