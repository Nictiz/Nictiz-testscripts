<?xml version="1.0" encoding="UTF-8"?>
<?xml-model href="http://hl7.org/fhir/STU3/testscript.sch" type="application/xml" schematypens="http://purl.oclc.org/dsdl/schematron"?>
<TestScript xmlns="http://hl7.org/fhir" xmlns:nts="http://nictiz.nl/xsl/testscript"
    nts:scenario="server">
    <id value="xis-1-1-serve-respiration"/>
    <version value="stu3-2.0"/>
    <name
        value="SelfMeasurements - XIS Server - Test Scenario 1.X - Serve respiration Observation resources"/>
    <description value="Scenario 1.X - Serve all respiration Observation resources"/>
    <nts:authToken patientResourceId="selfmeasurements-Patient-XXX-Smorenburg"/>
    <nts:includeDateT value="yes"/>

    <test id="scenario1-1-serve-all-respiration">
        <name value="Scenario 1.1"/>
        <description value="Serve all respiration Observation resources"/>
        <nts:include value="medmij/test.xis.successfulSearch" scope="common"
            resource="Observation"
            params="?code=http://snomed.info/sct|422834003"/>
        <nts:include value="assert.response.numResources" scope="common"
            resource="Observation" count="5"/>
        
        <nts:contentAsserts href="resources-serve-retrieve/selfmeasurements-Respiration1.xml" description="contains a component with code = '9279-1' and valueQuantity.value = '15'" expression=".where(component.where(code.coding.where(code = '9279-1') and value.ofType(Quantity).value = 15))"/>
        <nts:contentAsserts href="resources-serve-retrieve/selfmeasurements-Respiration2.xml" description="contains a component with code = '9279-1' and valueQuantity.value = '22'" expression=".where(component.where(code.coding.where(code = '9279-1') and value.ofType(Quantity).value = 22))"/>
        <nts:contentAsserts href="resources-serve-retrieve/selfmeasurements-Respiration3.xml" description="contains a component with code = '9279-1' and valueQuantity.value = '14'" expression=".where(component.where(code.coding.where(code = '9279-1') and value.ofType(Quantity).value = 14))"/>
        <nts:contentAsserts href="resources-serve-retrieve/selfmeasurements-Respiration4.xml" description="contains a component with code = '9279-1' and valueQuantity.value = '16'" expression=".where(component.where(code.coding.where(code = '9279-1') and value.ofType(Quantity).value = 16))"/>
        <nts:contentAsserts href="resources-serve-retrieve/selfmeasurements-Respiration5.xml" description="contains a component with code = '9279-1' and valueQuantity.value = '13'" expression=".where(component.where(code.coding.where(code = '9279-1') and value.ofType(Quantity).value = 13))"/>
    </test>

    <test id="scenario1-2-serve-all-respiration">
        <name value="Scenario 1.2"/>
        <description value="Serve latest respiration Observation resources"/>
        <nts:include value="medmij/test.xis.successfulSearch" scope="common"
            resource="Observation"
            params="/$lastn?code=http://snomed.info/sct|422834003"/>
        <nts:include value="assert.response.numResources" scope="common"
            resource="Observation" count="1"/>

        <action>
            <assert>
                <description value="Confirm that the correct Observation is returned"/>
                <direction value="response"/>
                <expression value="Bundle.entry.resource.ofType(Observation).where(component.where(code.coding.where(code = '9279-1') and value.ofType(Quantity).value = 15)).exists()"/>
            </assert>
        </action>
    </test>

    <test id="scenario1-3-serve-all-respirations">
        <name value="Scenario 1.3"/>
        <description value="Serve period respiration Observation resources"/>
        <nts:include value="medmij/test.xis.successfulSearch" scope="common"
            resource="Observation"
            params="?code=http://snomed.info/sct|422834003&amp;date=ge${DATE, T, D,-14}&amp;date=le${DATE, T, D,-5}"/>
        <nts:include value="assert.response.numResources" scope="common"
            resource="Observation" count="2"/>

        <action>
            <assert>
                <description value="Confirm that the correct Observation is returned"/>
                <direction value="response"/>
                <expression value="Bundle.entry.resource.ofType(Observation).where(component.where(code.coding.where(code = '9279-1') and value.ofType(Quantity).value = 22)).exists()"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the correct Observation is returned"/>
                <direction value="response"/>
                <expression value="Bundle.entry.resource.ofType(Observation).where(component.where(code.coding.where(code = '9279-1') and value.ofType(Quantity).value = 14)).exists()"/>
            </assert>
        </action>
    </test>

    <test id="scenario1-4-serve-all-respirations">
        <name value="Scenario 1.4"/>
        <description value="Serve period respiration Observation resources"/>
        <nts:include value="medmij/test.xis.successfulSearch" scope="common"
            resource="Observation"
            params="?code=http://snomed.info/sct|422834003&amp;date=ge${DATE, T, D,-12}&amp;date=le${DATE, T, D,-6}"/>
        <nts:include value="assert.response.numResources" scope="common"
            resource="Observation" count="0"/>
    </test>
</TestScript>
