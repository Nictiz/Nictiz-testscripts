<?xml version="1.0" encoding="UTF-8"?>
<?xml-model href="http://hl7.org/fhir/STU3/testscript.sch" type="application/xml" schematypens="http://purl.oclc.org/dsdl/schematron"?>
<TestScript xmlns="http://hl7.org/fhir" xmlns:nts="http://nictiz.nl/xsl/testscript"
    nts:scenario="server">
    <id value="xis-3-2-receive-bodytemp"/>
    <version value="stu3-2.0"/>
    <name
        value="SelfMeasurements - XIS Server - Scenario 3.2 - Receive most recent bodytemp Observation resource"/>
    <description value="Scenario 3.2 - Receive most recent bodytemp Observation resource"/>
    <nts:authToken patientResourceId="selfmeasurements-Patient-XXX-Herder"/>
    <nts:fixture id="scenario-3-2-bundle-fixture"
        href="bundles/receive/selfmeasurements-receive-scenario-3-2-bodytemp-bundle.{$_FORMAT}"/>
    <nts:includeDateT value="yes"/>

    <test id="scenario3-2-receive-most-recent-bodytemp">
        <name value="Scenario 3.2"/>
        <description value="Receive most recent bodytemp Observation resource"/>
        <nts:include value="medmij/test.xis.successfulBatch" scope="common"
            sourceId="scenario-3-2-bundle-fixture"/>
        <nts:include value="assert.response.numResources" scope="common"
            resource="Observation" count="3"/>
        <nts:include value="assert.response.numResources" scope="common"
            resource="Patient" count="1"/>
        <action>
            <assert>
                <description value="Confirm that the latest observation resource has the correct bodyTemperature value"/>
                <direction value="response"/>
                <expression value="Bundle.entry.resource.ofType(Observation).where(code.coding.code='8310-5' and code.coding.system='http://loinc.org').value.ofType(Quantity).where(value=37.7 and code='Cel').exists()"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the latest observation resource has the correct bodyTemperature value"/>
                <direction value="response"/>
                <expression value="Bundle.entry.resource.ofType(Observation).where(code.coding.code='8310-5' and code.coding.system='http://loinc.org').value.ofType(Quantity).where(value=38.5 and code='Cel').exists()"/>
            </assert>
        </action>
        <action>
            <assert>
                <description value="Confirm that the latest observation resource has the correct bodyTemperature value"/>
                <direction value="response"/>
                <expression value="Bundle.entry.resource.ofType(Observation).where(code.coding.code='8310-5' and code.coding.system='http://loinc.org').value.ofType(Quantity).where(value=36.9 and code='Cel').exists()"/>
            </assert>
        </action>
    </test>
</TestScript>
