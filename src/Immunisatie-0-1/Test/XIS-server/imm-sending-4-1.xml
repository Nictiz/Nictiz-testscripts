<?xml version="1.0" encoding="UTF-8"?>
<?xml-model href="http://hl7.org/fhir/STU3/testscript.sch" type="application/xml" schematypens="http://purl.oclc.org/dsdl/schematron"?>
<TestScript xmlns="http://hl7.org/fhir" xmlns:nts="http://nictiz.nl/xsl/testscript"
    nts:scenario="server">
    <id value="imm-sending-4-1"/>
    <version value="R4-4.0.1"/>
    <name value="Immunization - XIS Server - Scenario 4.1 - Serve Immunization resources of Lucasz"/>
    <description value="Scenario 4.1 - Serve Immunization resources of van Lucasz"/>
    <nts:patientTokenFixture href="imm-patient-Lucasz-token.xml"/>

    <test id="03-serve-Immunization">
        <name value="Scenario 4.1 - Immunization"/>
        <description
            value="Serve Immunization resource including the patient"/>
        <nts:include value="medmij/test.xis.successfulSearch" scope="common"
            resource="Immunization"
            params="?_include=Immunization:patient&#38;_include:iterate=Immunization:performer"/>
        <nts:include value="assert.response.numResources" scope="common"
            resource="Immunization" count="1"/>
        <nts:include value="assert.response.numResources" scope="common"
            resource="Patient" count="1"/>
     <!-- Immunization -->
        <!-- vaccinatie 1 -->
        <action>
            <assert>
                <description value="Test if medication reference exists" />
                <direction value="response" /> 
                <expression value= "Bundle.entry.where(resource.is(Immunization)).resource.extension.where(url = 'http://nictiz.nl/fhir/StructureDefinition/ext-Vaccination.PharmaceuticalProduct').value" />
            </assert>
        </action>
        <action>
            <assert>
                <description value="Test if status is completed" />
                <direction value="response" /> 
                <expression value= "Bundle.entry.where(resource.is(Immunization)).resource.where(status = 'completed').exists()" />
            </assert>
        </action>
        <action>
            <assert>
                <description value="Test if vaccinecode code corresponds to test material" />
                <direction value="response" /> 
                <expression value= "Bundle.entry.where(resource.is(Immunization)).resource.vaccineCode.where(coding.code = '2924536').exists()" />
            </assert>
        </action>
        <action>
            <assert>
                <description value="Test if vaccinecode system corresponds to test material" />
                <direction value="response" /> 
                <expression value= "Bundle.entry.where(resource.is(Immunization)).resource.vaccineCode.where(coding.system = 'urn:oid:2.16.840.1.113883.2.4.4.7').exists()" />
            </assert>
        </action>
        <action>
            <assert>
                <description value="Test if vaccinecode display corresponds to test material" />
                <direction value="response" /> 
                <expression value= "Bundle.entry.where(resource.is(Immunization)).resource.vaccineCode.where(coding.display = 'COVID-19 VACCIN MODERNA INJVLST 0,5ML').exists()" />
            </assert>
        </action>
        <action>
            <assert>
                <description value="Test if patient reference exists" />
                <direction value="response" /> 
                <expression value= "Bundle.entry.where(resource.is(Immunization)).resource.patient.where(type = 'Patient').where(reference).exists()" />
            </assert>
        </action>
        <action>
            <assert>
                <description value="Test if vaccinecode corresponds to test material" />
                <direction value="response" /> 
                <expression value= "Bundle.entry.where(resource.is(Immunization)).resource.where(occurrenceDateTime='2021-05-24T14:30:00+02:00').exists()" />
            </assert>
        </action>
        <action>
            <assert>
                <description value="Test if AnatomicalLocation laterality exists" />
                <direction value="response" /> 
                <expression value= "Bundle.entry.where(resource.is(Immunization)).resource.site.extension.valueCodeableConcept.coding.where(code = '7771000').exists()" />
            </assert>
        </action>
        <action>
            <assert>
                <description value="Test if AnatomicalLocation exists" />
                <direction value="response" /> 
                <expression value= "Bundle.entry.where(resource.is(Immunization)).resource.site.coding.where(code = '40983000').exists()" />
            </assert>
        </action>
        <action>
            <assert>
                <description value="Test if toedieningsweg exists" />
                <direction value="response" /> 
                <expression value= "Bundle.entry.where(resource.is(Immunization)).resource.route.coding.where(code = '2').exists()" />
            </assert>
        </action>
        <action>
            <assert>
                <description value="Test if dosis exists" />
                <direction value="response" /> 
                <expression value= "Bundle.entry.where(resource.is(Immunization)).resource.doseQuantity.where(value = '0.5').exists()" />
            </assert>
        </action>
        <action>
            <assert>
                <description value="Test if performer exists" />
                <direction value="response" /> 
                <expression value= "Bundle.entry.where(resource.is(Immunization)).resource.performer.function.coding.where(code = 'AP').exists()" />
            </assert>
        </action>
        <action>
            <assert>
                <description value="Test if performer reference exists" />
                <direction value="response" /> 
                <expression value= "Bundle.entry.where(resource.is(Immunization)).resource.performer.actor.where(type = 'Organization').exists()" />
            </assert>
        </action>
        <action>
            <assert>
                <description value="Test if reasonCode exists" />
                <direction value="response" /> 
                <expression value= "Bundle.entry.where(resource.is(Immunization)).resource.reasonCode.coding.where(code = '159721000146101').exists()" />
            </assert>
        </action>
        <action>
            <assert>
                <description value="Test if targetDisease exists" />
                <direction value="response" /> 
                <expression value= "Bundle.entry.where(resource.is(Immunization)).resource.protocolApplied.targetDisease.coding.where(code = '840539006').exists()" />
            </assert>
        </action>
        <!-- vaccinatie 2 -->
        <action>
            <assert>
                <description value="Test if vaccinecode corresponds to test material" />
                <direction value="response" /> 
                <expression value= "Bundle.entry.where(resource.is(Immunization)).resource.vaccineCode.where(coding.code = '2924536').exists()" />
            </assert>
        </action>
        <!-- vaccinatie 3 -->
        <action>
            <assert>
                <description value="Test if vaccinecode corresponds to test material" />
                <direction value="response" /> 
                <expression value= "Bundle.entry.where(resource.is(Immunization)).resource.vaccineCode.where(coding.code = '2924536').exists()" />
            </assert>
        </action>
        <action>
            <assert>
                <description value="Test if status is completed" />
                <direction value="response" /> 
                <expression value= "Bundle.entry.where(resource.is(Immunization)).resource.where(status = 'completed').exists()" />
            </assert>
        </action>
        <!-- Patient -->
        <nts:include value="assert.response.numResources" scope="common" resource="Patient" count="1"/>
        <nts:include value="assert.identifier" direction="response" resource="Patient"/>
        <nts:include value="assert.birthdate" direction="response" resource="Patient" date="2004-09-28"/>
        
        <!-- Medication -->
        <!-- Organization -->
    </test>
</TestScript>