<?xml version="1.0" encoding="UTF-8"?>
<?xml-model href="http://hl7.org/fhir/STU3/testscript.sch" type="application/xml" schematypens="http://purl.oclc.org/dsdl/schematron"?>
<TestScript xmlns="http://hl7.org/fhir" xmlns:nts="http://nictiz.nl/xsl/testscript" nts:scenario="server">
    <id value="imm-serve-test-1-2"/>
    <version value="R4-4.0.1"/>
    <name value="Immunization - XIS Server - Test scenario 1.2 - Serve Immunization resources of Bakker"/>
    <description value="Scenario 1.2 - Serve Immunization resources of van Bakker"/>
    <nts:authToken patientResourceId="imm-Patient-03"/>

    <test>
        <name value="Test scenario 1.2 - Serve vaccinations"/>
        <description value="Serve Immunization resource including the patient and performer"/>
        <nts:include value="medmij/test.xis.successfulSearch" scope="common" resource="Immunization" params="?_include=Immunization:patient&#38;_include=Immunization:performer&#38;_include=Immunization:location" responseId="immunization-search-response"/>
        
        <nts:include value="assert.response.numResources" scope="common" resource="Patient" count="1"/>
        <nts:include value="assert.response.numResources" scope="common" resource="Organization" count="2"/>
        <nts:include value="assert.response.numResources" scope="common" resource="Location" count="3"/>

        <!-- Patient -->
        <nts:include value="assert.birthdate" direction="response" resource="Patient" date="1965-02-02"/>
        
        <nts:contentAsserts href="resources/imm-Immunization-03-01.xml" 
            description="contains doseQuantity.value = '0.5' and has an .occurenceDateTime earlier than the other Immunization resource with this dose"
            selector="iif(Bundle.entry.resource.ofType(Immunization).where(doseQuantity.value = 0.5)[0].occurence &lt; Bundle.entry.resource.ofType(Immunization).where(doseQuantity.value = 0.5)[1].occurence, Bundle.entry.resource.ofType(Immunization).where(doseQuantity.value = 0.5)[0], Bundle.entry.resource.ofType(Immunization).where(doseQuantity.value = 0.5)[1])"/>
        <nts:contentAsserts href="resources/imm-PharmaceuticalProduct-03-01.xml" nts:in-targets="#default" 
            description="contains batch.lotNumber = '3002184'" 
            discriminator="batch.lotNumber = '3002184'"/>
        <nts:contentAsserts href="resources/imm-Immunization-03-02.xml" 
            description="contains doseQuantity.value = '0.5' and has an .occuranceDateTime later than the other Immunization resource with this dose"
            selector="iif(Bundle.entry.resource.ofType(Immunization).where(doseQuantity.value = 0.25)[0].occurence &lt; Bundle.entry.resource.ofType(Immunization).where(doseQuantity.value = 0.5)[1].occurence, Bundle.entry.resource.ofType(Immunization).where(doseQuantity.value = 0.5)[1], Bundle.entry.resource.ofType(Immunization).where(doseQuantity.value = 0.5)[0])"/>
        <nts:contentAsserts href="resources/imm-PharmaceuticalProduct-03-02.xml" nts:in-targets="#default" 
            description="contains batch.lotNumber = '3003186'" 
            discriminator="batch.lotNumber = '3003186'"/>
        <nts:contentAsserts href="resources/imm-Immunization-03-03.xml" 
            description="contains doseQuantity.value = '0.25'" 
            discriminator="doseQuantity.value = 0.25"/>
        <nts:contentAsserts href="resources/imm-PharmaceuticalProduct-03-03.xml" nts:in-targets="#default" 
            description="contains code.coding.code = '2978636'" 
            discriminator="code.where(coding.where(code = '2978636'))"/>
    </test>
    <!-- Test Medication resource 1 -->
    <test nts:in-targets="GetMedication">
        <nts:include value="variable.immunization.medication.url" name="pharmaceuticalProduct-url-1" sequenceNumber="0" sourceId="immunization-search-response"/>
        <name value="Scenario 1.2 - Read Medication resource 1"/>
        <description value="Serve PharmaceuticalProduct via an HTTP get."/>
        <nts:include value="medmij/test.xis.successfulRead" resource="Medication" url="${pharmaceuticalProduct-url-1}" scope="common"/>
        
        <nts:contentAsserts href="resources/imm-PharmaceuticalProduct-03-01.xml"/>
    </test>
    
    <!-- Test Medication resource 2 -->
    <test nts:in-targets="GetMedication">
        <nts:include value="variable.immunization.medication.url" name="pharmaceuticalProduct-url-2" sequenceNumber="1" sourceId="immunization-search-response"/>
        <name value="Scenario 1.2 - Read Medication resource 2"/>
        <description value="Serve PharmaceuticalProduct via an HTTP get."/>
        <nts:include value="medmij/test.xis.successfulRead" resource="Medication" url="${pharmaceuticalProduct-url-2}" scope="common"/>
        
        <nts:contentAsserts href="resources/imm-PharmaceuticalProduct-03-02.xml"/>
    </test>
    
    <!-- Test Medication resource 3 -->
    <test nts:in-targets="GetMedication">
        <nts:include value="variable.immunization.medication.url" name="pharmaceuticalProduct-url-3" sequenceNumber="2" sourceId="immunization-search-response"/>
        <name value="Scenario 1.2 - Read Medication resource 3"/>
        <description value="Serve PharmaceuticalProduct via an HTTP get."/>
        <nts:include value="medmij/test.xis.successfulRead" resource="Medication" url="${pharmaceuticalProduct-url-3}" scope="common"/>
        
        <nts:contentAsserts href="resources/imm-PharmaceuticalProduct-03-03.xml"/>
    </test>
</TestScript>
