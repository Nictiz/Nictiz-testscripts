<?xml version="1.0" encoding="UTF-8"?>
<?xml-model href="../../general/schematron/NictizTestScript.sch" type="application/xml" schematypens="http://purl.oclc.org/dsdl/schematron"?>
<TestScript xmlns="http://hl7.org/fhir" xmlns:nts="http://nictiz.nl/xsl/testscript" nts:scenario="client">
    
    <id value="Receiving-XIS-scenario1.4b-negotiation"/>
    <version value="stu3-4.0"/>
    <name value="Receiving-XIS-scenario1.4b-negotiation"/>
    <description value="Scenario 1.4b for eOverdracht receiving systems. This test focuses on the negotiation phase ('aanmeldfase') and simulates the situation where the receiving system rejects the proposed transfer of the patient (hence, there's no subsequent script for the transfer phase ('overdrachtfase')."/>
    
    <nts:patientTokenFixture href="eOverdracht-patient-XXX_Birkholz-token.xml"/>
    
    <setup>
        <nts:fixture
            id="initial-task-fixture"
            href="resources/resources-specific/eOverdracht-Task-eov-test-1_4b-REQUESTED.xml"/>
        <nts:include value="setup.general.initializeTask"
            task-fixture-id="initial-task-fixture"
            description="At the sending XIS, a new Task is created in status 'requested'."/>
    </setup>

    <nts:include value="action.receivingxis.awaitNotification"
        name="Await new Task notification"
        description="The sending XIS sends a notification to the receiving XIS because a new Task has been created with status 'requested'."/>
    
    <test>
        <name value="Read 'requested' Task"/>
        <description value="The receiving XIS should perform a read on the Task after receiving a notification that the Task has been created."/>
        
        <nts:include value="test.receivingxis.readTask"
            taskStatus="requested"
            responseId="requested-task-response"/>
    </test>
    
    <test>
        <name value="Read advance notice"/>
        <description value="After reading the Task, the receiving XIS should perform a read operation on the advance notice Composition that is referenced on Task.input."/>
        
        <nts:include value="test.receivingxis.readComposition"
            taskFixtureId="requested-task-response"
            sliceSystem="http://snomed.info/sct" sliceCode="721915006"/>
    </test>

    <test>
        <name value="Set Task to 'rejected'"/>
        <description value="The receiving XIS should set the status of the Task to 'rejected' to signal that it is unable to receive the patient. This should be an update operation where the original Task is sent, with only the status element changed."/>
        
        <nts:fixture
            id="rejected-task-fixture"
            href="resources/resources-specific/eOverdracht-Task-eov-test-1_4b-REJECTED.xml"/>
        
        <nts:include value="test.receivingxis.updateTask"
            taskStatus="rejected"
            taskFixtureId="rejected-task-fixture"/>
        
        <action>
            <assert>
                <description value="Confirm that the Task resource contains 1 Composition reference for the advance notice."/>
                <direction value="request"/>
                <expression value="Task.input.type.coding.code"/>
                <operator value="equals"/>
                <value value="721915006" />
            </assert>
        </action>
    </test>
    
    <test>
        <name value="Task is set to 'cancelled'"/>
        <description value="The sending XIS now sets the status of the Task to 'cancelled' to confirm to the receiving XIS that the transfer of the patient has been cancelled."/>
        
        <nts:fixture
            id="cancelled-task-fixture"
            href="resources/resources-specific/eOverdracht-Task-eov-test-1_4b-CANCELLED.xml"/>
        <nts:include value="action.general.updateTaskBySendingXis"
            description="Set the eOverdracht Task resource to 'cancelled'."
            task-fixture-id="cancelled-task-fixture" />
    </test>
    
    <nts:include value="action.receivingxis.awaitNotification"
        name="Await 'cancelled' Task notification"
        description="The sending XIS sends a notification to the receiving XIS because a new Task has been set to status 'cancelled'."/>
    
    <test>
        <name value="Read 'cancelled' Task"/>
        <description value="The receiving XIS should perform a read on the Task after receiving a notification that the Task has been updated."/>
        
        <nts:include value="test.receivingxis.readTask"
            taskStatus="cancelled"/>
    </test>
</TestScript>
