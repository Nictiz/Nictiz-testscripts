<?xml version="1.0" encoding="UTF-8"?>
<?xml-model href="../../general/schematron/NictizTestScript.sch" type="application/xml" schematypens="http://purl.oclc.org/dsdl/schematron"?>
<TestScript xmlns="http://hl7.org/fhir" xmlns:nts="http://nictiz.nl/xsl/testscript"
    nts:scenario="server" nts:numOrigins="2" nts:numDestinations="2" >
    
    <id value="Sending-XIS-scenario1.1b-negotiation"/>
    <version value="stu3-4.0"/>
    <name value="Sending-XIS-scenario1.1b-negotiation"/>
    <description value="Scenario 1.1b, test 1/2 for eOverdracht sending systems. This test focuses on the negotiation phase ('aanmeldfase') where a receiving xis agrees to transfer the patient at the proposed date and time. After completion of this test, the test for the transfer phase ('overdrachtfase') can be run."/>
    
    <nts:authToken patientResourceId="nl-core-patient-eov-test-1-1b-01"/>

    <!--
        EOVDR-444/KT-384: Declare a (unused) fixture as a workaround for a Touchstone bug.
        The line below should be put back in the setup once KT-384 has been resolved.
    -->
    <nts:fixture
        id="initial-task-fixture"
        href="resources/resources-specific/eOverdracht-Task-eov-test-1_1b-REQUESTED.xml"/>

    <setup nts:in-targets="Nictiz-only">
        <nts:include value="setup.general.initializeTask"
            task-fixture-id="initial-task-fixture"
            description="At the sending XIS, a new Task is created in status 'requested'."/>
    </setup>

    <nts:include value="action.sendingxis.sendNotification"
        name="Notify new Task"
        description="The sending XIS should send a notification to the receiving XIS because a new Task has been created with status 'requested'."/>
    
    <test>
        <name value="Serve 'requested' Task"/>
        <description value="The sending XIS should serve the Task specified in the notification."/>
        
        <nts:include value="test.sendingxis.serveTask"
            taskStatus="requested"
            responseId="requested-task-response"/>

        <nts:include value="rewrite.response.taskStatus" scope="common"
            newStatus="accepted"
            fixtureId="accepted-task-fixture"/>

        <nts:include nts:in-targets="Nictiz-only" value="rewrite.response.taskStatus" scope="common"
            newStatus="in-progress"
            fixtureId="in-progress-task-fixture"/>
    </test>
    
    <test>
        <name value="Serve advance notice"/>
        <description value="After reading the Task, the receiving XIS performs a read operation on the advance notice Composition that is referenced on Task.input."/>
        
        <nts:include value="test.sendingxis.serveComposition"
            taskFixtureId="requested-task-response"
            sliceSystem="http://snomed.info/sct" sliceCode="721915006"
            validateWarningOnly="true" />
    </test>
            
    <test>
        <name value="Handle Task update to 'accepted'"/>
        <description value="The sending XIS should handle an update of the Task with the status 'accepted' which the receiving uses to signal that it is able to transfer the patient at the requested date and time."/>
        
        <nts:include value="test.sendingxis.handleTaskUpdate"
            taskStatus="accepted"
            taskFixtureId="accepted-task-fixture"/>
    </test>
    
    <test nts:in-targets="Nictiz-only">
        <name value="Set Task to 'in-progress'"/>
        <description value="The sending XIS now sets the status of the Task to 'in-progress' to signal the receiving XIS that it agrees to transfer the patient at the specified date and time."/>
        
        <nts:include value="action.general.updateTaskBySendingXis"
            task-fixture-id="in-progress-task-fixture"
            description="Set the eOverdracht Task resource to 'in-progress'"/>
    </test>
    
    <nts:include value="action.sendingxis.sendNotification"
        name="Notify 'in-progress' Task"
        description="The sending XIS should now sends a notification to the receiving XIS because the Task has been set to status 'in-progress'."/>
    
    <test>
        <name value="Serve 'in-progress' Task"/>
        <description value="The sending XIS should serve the Task with status 'in-progress'."/>
        
        <nts:include value="test.sendingxis.serveTask"
            taskStatus="in-progress"/>
    </test>
</TestScript>
