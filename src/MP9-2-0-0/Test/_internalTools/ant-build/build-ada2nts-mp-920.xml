<?xml version="1.0" encoding="UTF-8"?>
    <!--Apache ANT build file that sets up (target = setup) or by default converts transaction with references to full ada xml (target = resolve-refs)
    Apache ANT is based on Java and may be found here: https://ant.apache.org/
    run on command line or from a batch file: 
        ant [-f build.xml] [target]
        
    If you just run ant, it expects a build.xml in the working dir and runs the default target.-->

<project basedir="." default="convert_ada_2_nts_920" name="build-ada2fhir-mp-920" xmlns:if="ant:if" xmlns:unless="ant:unless">
    <ant antfile="../../../../../../HL7-mappings/_ant-buildfiles/ant-include/ant.ivy.xml" inheritall="true" usenativebasedir="true"/>
    <property name="xsl.saxon" value="${saxon.path}"/>
    <property name="xsl.saxon.class" value="net.sf.saxon.TransformerFactoryImpl"/>

    <property name="build.dir" value=".."/>

    <property name="github.mp92.dir" value="https://raw.githubusercontent.com/Nictiz/HL7-mappings/master/ada_2_fhir-r4/mp/9.2.0"/>
    <!-- don't know how to create fileset or resource collection from online dir, workaround: use local dir -->
    <property name="github.mp92.dir.local" value="${build.dir}/../../../../../HL7-mappings/ada_2_fhir-r4/mp/9.2.0"/>
    <!--<property name="github.mp92.dir.local" value="${build.dir}/../../../../../HL7-mappings-dev/ada_2_fhir-r4/mp/9.2.0"/>-->
    <property name="mappings.url.4.fhir.fixtures" value="${github.mp92.dir}/4TouchstoneMP"/>
    
    
    <property name="usecase.mg.input" value="beschikbaarstellen_medicatiegegevens"/>
    <property name="usecase.mg.rp.input" value="raadplegen_medicatiegegevens"/>
    <property name="usecase.mg.output" value="MedicationData"/>
    
    <target name="convert_ada_2_nts_920">
        <!-- this would be the umbrella target to build all scenarios -->
        <!-- pull medicationdata -->
        <antcall target="convert_ada2nts_pull_meddata_920"/>
        <!-- all push scenario's -->
        <antcall target="convert_ada2nts_push_all_920"/>
    </target>
    
    <target name="convert_ada2nts_pull_meddata_920">
        <!-- target for serve medication data (pull) -->
        
        <!-- Medication data (pull) requires a more complex analysis of files, scenarios and subscenarios, so we call a separate XSL for this  -->
        
        <property name="xsl.input.mg" value="${github.mp92.dir.local}/${usecase.mg.input}/ada_instance"/>
        <property name="xsl.input.mg.abs" location="${xsl.input.mg}"/>
        <property name="xsl.output.mg" value="${build.dir}/../${usecase.mg.output}"/>
        <property name="xsl.output.mg.abs" location="${xsl.output.mg}"/>
        
        <echo>Deleting previous results, if any</echo>
        <mkdir dir="${xsl.output.mg.abs}"/>
        <delete>
            <fileset dir="${xsl.output.mg.abs}/Retrieve"/>
            <fileset dir="${xsl.output.mg.abs}/Serve"/>
        </delete>
        
        <!-- Retrieve -->
        <!-- MedicationAgreement -->
        <antcall target="convert_ada_2_nts_medicationdata-pull_sub">
            <param name="xsl.out" value="${xsl.output.dummy}"/>
            <param name="transaction.type" value="Retrieve"/>
            <param name="output.dir" value="${xsl.output.mg.abs}"/>
            <param name="input.dir" value="${xsl.input.mg.abs}"/>
        </antcall>
        
        <!-- Serve -->
        <!-- MedicationAgreement -->
        <antcall target="convert_ada_2_nts_medicationdata-pull_sub">
            <param name="xsl.out" value="${xsl.output.dummy}"/>
            <param name="transaction.type" value="Serve"/>
            <param name="output.dir" value="${xsl.output.mg.abs}"/>
            <param name="input.dir" value="${xsl.input.mg.abs}"/>
        </antcall>
        
        <!-- Scenarioset 0, both Retrieve and Serve -->
        <!-- Hard coded delete - can we do better? -->
        
        <property name="xsl.output.dummy" value="${build.dir}/xslt/dummy.xml"/>
        <xslt force="true" style="${build.dir}/xslt/ada_2_nts-medicationdata-pull-set0.xsl" in="${build.dir}/xslt/set0-config.xml" out="${xsl.output.dummy}" useImplicitFileset="false">
            <factory name="${xsl.saxon.class}"/>
            <classpath location="${xsl.saxon}"/>
            <param name="outputDir" expression="${xsl.output.mg.abs}"/>
        </xslt>
        <delete file="${xsl.output.dummy}"/>
     </target>
    
    <!-- Goal is to include file 'ada_2_nts-medicationdata-pull.xsl' in 'ada_2_nts.xsl' to be able to deprecate this target. -->
    <target name="convert_ada_2_nts_medicationdata-pull_sub">
        <property name="xsl.output.dummy" value="${build.dir}/xslt/dummy.xml"/>
        <xslt force="true" style="${build.dir}/xslt/ada_2_nts-medicationdata-pull.xsl" in="${build.dir}/xslt/ada_2_nts-medicationdata-pull.xsl" out="${xsl.output.dummy}" useImplicitFileset="false">
            <factory name="${xsl.saxon.class}"/>
            <classpath location="${xsl.saxon}"/>
            <param name="transactionType" expression="${transaction.type}"/>
            <param name="outputDir" expression="${output.dir}" if="output.dir"/>
            <param name="inputDir" expression="${input.dir}" if="input.dir"/>
        </xslt>
        <delete file="${xsl.output.dummy}"/>
    </target>
    
    <target name="convert_ada2nts_push_all_920">
        <!-- medication data push -->
        <antcall target="convert_ada2nts_push_meddata_920"/>        
        <!-- prescription -->
        <antcall target="convert_ada2nts_prescription_920"/>
        <!-- medication prescription processing -->        
        <antcall target="convert_ada2nts_prescription_processing_920"/>
        <!-- proposal medication agreement -->
        <antcall target="convert_ada2nts_prop_ma_920"/>
        <!-- dispense request (verstrekkingsverzoek) -->
        <antcall target="convert_ada2nts_prop_vv_920"/>
        <!-- target for reply proposal medication agreement -->
        <antcall target="convert_ada2nts_reply_prop_ma_920"/>
        <!-- target for proposal dispense request (verstrekkingsverzoek) -->
        <antcall target="convert_ada2nts_prop_vv_920"/>
        <!-- target for reply proposal dispense request (verstrekkingsverzoek)  -->
        <antcall target="convert_ada2nts_reply_prop_vv_920"/>
        
    </target>
    
    <target name="convert_ada2nts_push_meddata_920">
        <!-- medication data push -->
        <antcall target="convert_push_usecase_920_sub">
            <param name="xsl.input.usecase" value="${github.mp92.dir.local}/beschikbaarstellen_medicatiegegevens/ada_instance"/>
            <param name="xsl.output.usecase" value="${build.dir}/MedicationData"/>
        </antcall>  
        
    </target>

    <target name="convert_ada2nts_prescription_920">
        <!-- target for medication prescription -->
        <antcall target="convert_push_usecase_920_sub">
            <param name="xsl.input.usecase" value="${github.mp92.dir.local}/sturen_medicatievoorschrift/ada_instance"/>
            <param name="xsl.output.usecase" value="${build.dir}/MedicationPrescription"/>
        </antcall>
    </target>

    <target name="convert_ada2nts_prescription_processing_920">
        <!-- target for medication prescription processing -->
        <antcall target="convert_push_usecase_920_sub">
            <param name="xsl.input.usecase" value="${github.mp92.dir.local}/sturen_afhandeling_medicatievoorschrift/ada_instance"/>
            <param name="xsl.output.usecase" value="${build.dir}/PrescrProcessing"/>
        </antcall>
    </target>

    <target name="convert_ada2nts_prop_ma_920">
        <!-- target for proposal medication agreement -->
        <antcall target="convert_push_usecase_920_sub">
            <param name="xsl.input.usecase" value="${github.mp92.dir.local}/sturen_voorstel_medicatieafspraak/ada_instance"/>
            <param name="xsl.output.usecase" value="${build.dir}/ProposalMA"/>
        </antcall>
    </target>

    <target name="convert_ada2nts_reply_prop_ma_920">
        <!-- target for reply proposal medication agreement -->
        <antcall target="convert_push_usecase_920_sub">
            <param name="xsl.input.usecase" value="${github.mp92.dir.local}/sturen_antwoord_voorstel_medicatieafspraak/ada_instance"/>
            <param name="xsl.output.usecase" value="${build.dir}/ReplyProposalMA"/>
        </antcall>
    </target>

    <target name="convert_ada2nts_prop_vv_920">
        <!-- target for proposal dispense request (verstrekkingsverzoek) -->
        <antcall target="convert_push_usecase_920_sub">
            <param name="xsl.input.usecase" value="${github.mp92.dir.local}/sturen_voorstel_verstrekkingsverzoek/ada_instance"/>
            <param name="xsl.output.usecase" value="${build.dir}/ProposalVV"/>
        </antcall>
    </target>

    <target name="convert_ada2nts_reply_prop_vv_920">
        <!-- target for reply proposal dispense request (verstrekkingsverzoek) -->
        <antcall target="convert_push_usecase_920_sub">
            <param name="xsl.input.usecase" value="${github.mp92.dir.local}/sturen_antwoord_voorstel_verstrekkingsverzoek/ada_instance"/>
            <param name="xsl.output.usecase" value="${build.dir}/ReplyProposalVV"/>
        </antcall>
    </target>
    
    <!--<target name="convert_ada_2_nts_920_transaction">

        <echo>Building blocks MTD and WDS don't contain tests w.r.t. filter criteria (scenario 0)</echo>

        <antcall target="convert_ada_2_nts_920_bb">
            <param name="buildingblock.short" value="TA"/>
            <param name="buildingblock" value="AdministrationAgreement"/>
        </antcall>

        <antcall target="convert_ada_2_nts_920_bb">
            <param name="buildingblock.short" value="VV"/>
            <param name="buildingblock" value="DispenseRequest"/>
        </antcall>

        <antcall target="convert_ada_2_nts_920_bb_otherscenarios">
            <param name="buildingblock.short" value="MTD"/>
            <param name="buildingblock" value="MedicationAdministration"/>
        </antcall>

        <antcall target="convert_ada_2_nts_920_bb">
            <param name="buildingblock.short" value="MA"/>
            <param name="buildingblock" value="MedicationAgreement"/>
        </antcall>

        <antcall target="convert_ada_2_nts_920_bb">
            <param name="buildingblock.short" value="MVE"/>
            <param name="buildingblock" value="MedicationDispense"/>
        </antcall>

        <antcall target="convert_ada_2_nts_920_bb">
            <param name="buildingblock.short" value="MGB"/>
            <param name="buildingblock" value="MedicationUse"/>
        </antcall>

        <antcall target="convert_ada_2_nts_920_bb_otherscenarios">
            <param name="buildingblock.short" value="WDS"/>
            <param name="buildingblock" value="VariableDosingRegimen"/>
        </antcall>

    </target>

    <target name="convert_ada_2_nts_920_bb">

        <echo>Scenario 0 (filter criteria)</echo>
        <antcall target="convert_ada_2_nts_920_bb_scenario0"/>

        <echo>Other scenarios</echo>
        <antcall target="convert_ada_2_nts_920_bb_otherscenarios"/>

    </target>

    <target name="convert_ada_2_nts_920_bb_scenario0">

        <property name="xsl.input.mg" value="${github.mp92.dir.local}/${usecase.mg.input}/ada_instance"/>
        <property name="xsl.output.mg" value="${build.dir}/${usecase.mg.output}"/>

        <antcall target="convert_ada_2_nts_sub">
            <param name="xsl.convert" value="${build.dir}/xslt/ada_2_nts.xsl"/>
            <param name="xsl.in" value="${xsl.input.mg}"/>
            <param name="xsl.in.include" value="*-${buildingblock.short}-Scenarioset0*.xml"/>
            <param name="xsl.out" value="${xsl.output.mg}/${transaction.type}/${buildingblock}"/>
        </antcall>

    </target>

    <target name="convert_ada_2_nts_920_bb_otherscenarios">

        <property name="xsl.input.mg" value="${github.mp92.dir.local}/${usecase.mg.rp.input}/ada_instance_response"/>
        <property name="xsl.output.mg" value="${build.dir}/${usecase.mg.output}"/>
  
        <antcall target="convert_ada_2_nts_sub">
            <param name="xsl.convert" value="${build.dir}/xslt/ada_2_nts.xsl"/>
            <param name="xsl.in" value="${xsl.input.mg}"/>
            <param name="xsl.in.include" value="*-${buildingblock.short}-*.xml"/>
            <param name="xsl.in.exclude" value="*-${buildingblock.short}-Scenarioset0*.xml"/>
            <param name="xsl.out" value="${xsl.output.mg}/${transaction.type}/${buildingblock}"/>
        </antcall>

    </target>
-->
    <target name="convert_push_usecase_920_sub">
        
        <!-- Send -->
        <antcall target="convert_ada_2_nts_sub">
            <param name="xsl.convert" value="${build.dir}/xslt/ada_2_nts.xsl"/>
            <param name="xsl.in" value="${xsl.input.usecase}"/>
            <param name="xsl.in.include" value="*mp-*.xml"/>
            <param name="xsl.in.exclude" value="*-Scenarioset0-*.xml"/>
            <param name="xsl.out" value="../${xsl.output.usecase}/Send"/>
            <param name="transaction.type" value="Send"/>
        </antcall>

        <!-- Receive -->
        <antcall target="convert_ada_2_nts_sub">
            <param name="xsl.convert" value="${build.dir}/xslt/ada_2_nts.xsl"/>
            <param name="xsl.in" value="${xsl.input.usecase}"/>
            <param name="xsl.in.include" value="*mp-*.xml"/>
            <param name="xsl.in.exclude" value="*-Scenarioset0-*.xml"/>
            <param name="xsl.out" value="../${xsl.output.usecase}/Receive"/>
            <param name="transaction.type" value="Receive"/>
        </antcall>

    </target>


    <target name="convert_ada_2_nts_sub">

        <!-- Make dir if it does not exist (anymore) -->
        <mkdir dir="${xsl.out}"/>
        <echo>Deleting previous results, if any</echo>

        <fileset id="outputFiles" dir="${xsl.out}">
            <include name="${xsl.in.include}" if="xsl.in.include"/>
            <exclude name="${xsl.in.exclude}" if="xsl.in.exclude"/>
        </fileset>

        <delete>
            <fileset refid="outputFiles"/>
        </delete>

        <fileset id="inputFiles" dir="${xsl.in}">
            <include name="${xsl.in.include}" if="xsl.in.include"/>
            <exclude name="${xsl.in.exclude}" if="xsl.in.exclude"/>
        </fileset>

        <echo>${echo.label} input files ${xsl.in}/${xsl.in.include}, to be converted with: ${xsl.convert}</echo>
        <xslt force="true" style="${xsl.convert}" destdir="${xsl.out}" extension=".xml" useImplicitFileset="false">
            <fileset refid="inputFiles"/>
            <regexpmapper from=".+tst-(.+)-v20.xml" to="\1.xml"/>
            <factory name="${xsl.saxon.class}"/>
            <classpath location="${xsl.saxon}"/>
            <param name="mappingsUrl4FhirFixtures" expression="${mappings.url.4.fhir.fixtures}"/>
            <!--<param name="buildingBlockShort" expression="${buildingblock.short}"/>-->
            <param name="transactionType" expression="${transaction.type}"/>
<!--            <param name="outputDir" expression="${output.dir}" if="output.dir"/>-->
        </xslt>

    </target>

</project>
