<?xml version="1.0" encoding="UTF-8"?>
<project basedir=".." name="addNarrativesForFolder" default="build">
    <!--
        Add narratives to all fixtures in a _references/resources (sub)folder, beneath the root defined by:
        * generate.narratives.pattern - A wildcard pattern relative to the root of the repo with folders containing fixtures.    
        * dontgenerate.narrative.pattern - A wildcard pattern relative to the root of the repo with files to exclude from narrative generation.
        * [reference.subdir] - Optional - The _name_ (not the path!) of the folder containing fixtures. Defaults to '_reference'.
    -->
    
    <property name="tool.reponame"    value="HL7-mappings"/>
    <property name="tool.name"        value="fhir-narrativegenerator"/>
    <property name="tool.version"     value="fhir-narrativegenerator-0.15.0"/>
    <property name="tool.antfile"     value="build/build.xml"/>
    <property name="reference.subdir" value="_reference"/>
    
    <dirset id="in.dirs" dir="${basedir}" excludes="${dontgenerate.narrative.pattern}">
        <include name="${generate.narratives.pattern}/**/${reference.subdir}*"/>
    </dirset>
    <property name="files.to.exclude" value="**/minimum/,**/rule/,**/rules/,**/*-token.*,${dontgenerate.narrative.pattern}"/>
    
    <!-- 
        Overwrite the target to download and install the tool because it is based on a release instead of a folder
        structure in the target repo.
    -->
    <target name="get.toolrepo" depends="checkForRepoDownload" if="download.repo">
        <sequential>
            <echo>Downloading the testscript tools repo from Github</echo>
            <echo>If you want to use a local copy for debugging, specifiy it with the -Dtestscripttools.local=... parameter</echo>
            <echo/>
            <mkdir dir="${testscripttools.dir}/"/>
            <local name="zip.name"/>
            <property name="zip.name" value="${testscripttools.dir}/package.zip"/>
            <get src="https://github.com/Nictiz/${tool.reponame}/releases/download/${tool.version.actual}/${tool.version.actual}.zip"
                dest="${zip.name}"/>
            <unzip src="${zip.name}" dest="${testscripttools.dir}" failOnEmptyArchive="true">
                <mapper type="regexp" from="^.*?/(.*)" to="\1"/>
            </unzip>
            <delete file="${zip.name}"/>
            <property name="hastestscripttools" value="true" />
        </sequential>
    </target>
    
    <import file="bootstrap-from-github.xml"/>
    <extension-point name="build" depends="bootstrapFromGithub.build"/>
</project>
