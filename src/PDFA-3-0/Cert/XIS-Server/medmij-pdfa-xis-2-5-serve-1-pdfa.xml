<?xml version="1.0" encoding="UTF-8"?>
<?xml-model href="http://hl7.org/fhir/STU3/testscript.sch" type="application/xml" schematypens="http://purl.oclc.org/dsdl/schematron"?>
<TestScript xmlns="http://hl7.org/fhir" xmlns:nts="http://nictiz.nl/xsl/testscript"
    nts:scenario="server">
    <id value="xis-2-5-serve-1-pdfa"/>
    <version value="stu3-2.0"/>
    <name value="PDFA - XIS Server - Scenario 2.5 - Serve one PDFA document"/>
    <description value="Scenario 2.5 - Serve one PDFA document of XXX-Schulte via an HTTP get. If PDFA documents are served through Binary resources, scenario 1.4 should be executed instead."/>
    <nts:authToken patientResourceId="example-pdfa-kwalificatie2"/>
    <nts:profile id="OperationOutcome-profile" value="http://hl7.org/fhir/StructureDefinition/OperationOutcome"/>
    
    <variable>
        <name value="pdfa-url"/>
        <!-- Pick the absolute url as is or create an absolute url when a relative url is given by combining the base url given in the Bundle self link with the relative reference.-->
        <expression
            value="iif(Bundle.entry.select(resource as DocumentReference)[0].content[0].attachment.url.startsWith('Binary/'),
            Bundle.link.url.replaceMatches('DocumentReference[/?].*$','') + Bundle.entry.select(resource as DocumentReference)[0].content[0].attachment.url,
            Bundle.entry.select(resource as DocumentReference)[0].content[0].attachment.url)"/>
        <sourceId value="documentreference-search-response"/>
    </variable>

    <test id="scenario2-5-serve-1-documentreference">
        <name value="Scenario 2.5 - Search DocumentReference"/>
        <description value="Serve DocumentReference resources."/>
        <nts:include value="medmij/test.xis.successfulSearch" scope="common"
            resource="DocumentReference"
            params="?status=current"
            responseId="documentreference-search-response"/>
        <nts:include value="assert.response.variableNumberOfResults"
            resource="DocumentReference" min="1" max="2" />
        <nts:include value="assert.response.resourceWithLoinc" code="68626-1"/>
    </test>

    <test id="scenario2-5-serve-pdfa-document">
        <name value="Scenario 2.5 - Get PDFA"/>
        <description value="Serve PDFA document via an HTTP get."/>
        <action>
            <operation>
                <type>
                    <system value="http://touchstone.aegis.net/touchstone/fhir/testing/CodeSystem/codesystem-testscript-operation-codes"/>
                    <code value="get"/>
                </type>
                <description value="Test XIS server get operation for a document on a known location, using the fullURL."/>
                <destination value="1"/>
                <method value="get"/>
                <origin value="1"/>
                <requestHeader>
                    <field value="Authorization"/>
                    <value value="${patient-token-id}"/>
                </requestHeader>
                <nts:include value="medmij/header.request.MedMijRequestId" scope="common"/>
                <nts:include value="medmij/header.request.MedMijXCorrelationId" scope="common"/>
                <url value="${pdfa-url}"/>
            </operation>
        </action>
        <nts:include value="assert.response.success" scope="common"/>
        <action>
            <assert>
                <description value="Confirm that the returned resource type is a PDF."/>
                <direction value="response"/>
                <headerField value="Content-Type"/>
                <value value="application/pdf"/>
            </assert>
        </action>
    </test>

    <test id="scenario2-5-serve-pdfa-document-control">
        <name value="Scenario 2.5 - Get PDFA without authorization header"/>
        <description value="Test XIS Server to have control over the reference obtained from the DocumentReference.content.attachment.url. This test resolves the fullURL without an authorization header. The request should fail to confirm that the XIS has control over the context. The expected response code is not 200 (OK) but should be e.g. 401, 403 or 404."/>
        <action>
            <operation>
                <type>
                    <system value="http://touchstone.aegis.net/touchstone/fhir/testing/CodeSystem/codesystem-testscript-operation-codes"/>
                    <code value="get"/>
                </type>
                <description value="Test XIS server get operation for a document on a known location, using the fullURL."/>
                <method value="get"/>
                <contentType value="none"/>
                <nts:include value="medmij/header.request.MedMijRequestId" scope="common"/>
                <nts:include value="medmij/header.request.MedMijXCorrelationId" scope="common"/>
                <url value="${pdfa-url}"/>
            </operation>
        </action>
        <action nts:in-targets="#default NoManifest">
            <assert nts:stopTestOnFail="true">
                <description value="Confirm that the returned HTTP status is not 200 (OK)."/>
                <direction value="response"/>
                <operator value="notEquals"/>
                <responseCode value="200"/>
            </assert>
        </action>
        <action nts:in-targets="#default NoManifest">
            <assert nts:stopTestOnFail="true">
                <description value="Check if the returned HTTP status is 401 (Unauthorized), 403 (Forbidden) or 404 (Not Found). Assert is set to warning only because other HTTP failure codes may be expected as well."/>
                <direction value="response"/>
                <operator value="in"/>
                <responseCode value="401,403,404"/>
                <warningOnly value="true"/>
            </assert>
        </action>
        <action nts:in-targets="Nictiz-intern">
            <assert>
                <description value="Confirm that the returned HTTP status is 200 (OK)."/>
                <direction value="response"/>
                <operator value="equals"/>
                <responseCode value="200"/>
            </assert>
        </action>
    </test>
</TestScript>
