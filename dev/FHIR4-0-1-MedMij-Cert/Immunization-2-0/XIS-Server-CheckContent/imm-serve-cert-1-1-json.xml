<?xml version="1.0" encoding="UTF-8"?>
<TestScript xmlns="http://hl7.org/fhir" xmlns:nts="http://nictiz.nl/xsl/testscript">
   <id value="imm-serve-cert-1-1-CheckContent-json"/>
   <meta>
      <profile value="http://touchstone.aegis.net/touchstone/fhir/testing/StructureDefinition/testscript"/>
   </meta>
   <extension url="http://touchstone.aegis.net/touchstone/fhir/testing/StructureDefinition/testscript-rule">
      <extension url="ruleId">
         <valueId value="assert-response-queryParamsInSelfLink"/>
      </extension>
      <extension url="path">
         <valueString value="../_reference/rules/assert_response_queryParamsInSelfLink.groovy"/>
      </extension>
   </extension>
   <url value="http://nictiz.nl/fhir/TestScript/imm-serve-cert-1-1-CheckContent-json"/>
   <version value="r4-1.0.0-patchlevel 2024-10"/>
   <name value="Immunization - XIS Server - Scenario 1.1 - Serve Immunization resources of XXX_Boekwijt - target CheckContent - JSON Format"/>
   <status value="active"/>
   <publisher value="Nictiz"/>
   <contact>
      <name value="Nictiz"/>
      <telecom>
         <system value="email"/>
         <value value="kwalificatie@nictiz.nl"/>
         <use value="work"/>
      </telecom>
   </contact>
   <description value="Scenario 1.1 - Serve Immunization resources of XXX_Boekwijt"/>
   <origin>
      <index value="1"/>
      <profile>
         <system value="http://terminology.hl7.org/CodeSystem/testscript-profile-origin-types"/>
         <code value="FHIR-Client"/>
      </profile>
   </origin>
   <destination>
      <index value="1"/>
      <profile>
         <system value="http://terminology.hl7.org/CodeSystem/testscript-profile-destination-types"/>
         <code value="FHIR-Server"/>
      </profile>
   </destination>
   <profile id="Bundle-profile">
      <reference value="http://hl7.org/fhir/StructureDefinition/Bundle"/>
   </profile>
   <variable>
      <name value="patient-token-id"/>
      <defaultValue value="Bearer 43100d9c-e64b-4151-900d-9ce64b8151f5"/>
      <description value="OAuth Token for current patient"/>
   </variable>
   <variable>
      <name value="X-Correlation-ID"/>
      <defaultValue value="${UUID}"/>
      <description value="X-Correlation-ID, by default a UUID following the MedMij Afsprakenstelsel. Does not have to be edited, see https://nictiz.atlassian.net/browse/MM-5132 for more information"/>
   </variable>
   <variable>
      <name value="nl-core-Patient--XXX-Boekwijt-id"/>
      <description value="Resource.id for Patient 1"/>
      <expression value="Bundle.entry.resource.ofType(Patient).id"/>
      <sourceId value="fixture-immunization-search-response"/>
   </variable>
   <variable>
      <name value="db4b6028-6b3d-11ec-0000-020000000000-id"/>
      <description value="Resource.id for Immunization 1"/>
      <expression value="Bundle.entry.resource.ofType(Immunization).where(vaccineCode.where(coding.where(code = '2924528'))).id"/>
      <sourceId value="fixture-immunization-search-response"/>
   </variable>
   <variable>
      <name value="nl-core-HPrv-Org--Org-2165281100733-20000004-id"/>
      <description value="Resource.id for Organization 1"/>
      <expression value="Bundle.entry.resource.ofType(Organization).where(identifier.where(value = '20000004')).id"/>
      <sourceId value="fixture-immunization-search-response"/>
   </variable>
   <variable>
      <name value="2e0a05a8-6aad-11ec-0000-020000000000-id"/>
      <description value="Resource.id for Immunization 2"/>
      <expression value="Bundle.entry.resource.ofType(Immunization).where(vaccineCode.where(coding.where(code = '836379009'))).id"/>
      <sourceId value="fixture-immunization-search-response"/>
   </variable>
   <variable>
      <name value="nl-core-HPrv-Org--Org-2165281100733-10000004-id"/>
      <description value="Resource.id for Organization 2"/>
      <expression value="Bundle.entry.resource.ofType(Organization).where(identifier.where(value = '10000004')).id"/>
      <sourceId value="fixture-immunization-search-response"/>
   </variable>
   <variable>
      <name value="pharmaceuticalProduct-url-1"/>
      <!-- Pick the absolute url as is or create an absolute url when a relative url is given by combining the base url given in the Bundle self link with the relative reference.-->
      <description value="This variable needs to be filled with the following params. The name (the variable name), sequenceNumber (the index), sourceId (the id of the resource) and as resource Immunization should be filled in"/>
      <expression value="iif(Bundle.entry.where(resource.is(Immunization)).resource[0].extension.where(url = 'http://nictiz.nl/fhir/StructureDefinition/ext-imm-Vaccination.PharmaceuticalProduct').value.reference.startsWith('Medication/'),             Bundle.link.where(relation='self').url.replaceMatches('Immunization[/?].*$','') + Bundle.entry.where(resource.is(Immunization)).resource[0].extension.where(url = 'http://nictiz.nl/fhir/StructureDefinition/ext-imm-Vaccination.PharmaceuticalProduct').value.reference,             Bundle.entry.where(resource.is(Immunization)).resource[0].extension.where(url = 'http://nictiz.nl/fhir/StructureDefinition/ext-imm-Vaccination.PharmaceuticalProduct').value.reference)"/>
      <sourceId value="fixture-immunization-search-response"/>
   </variable>
   <variable>
      <name value="pharmaceuticalProduct-url-2"/>
      <!-- Pick the absolute url as is or create an absolute url when a relative url is given by combining the base url given in the Bundle self link with the relative reference.-->
      <description value="This variable needs to be filled with the following params. The name (the variable name), sequenceNumber (the index), sourceId (the id of the resource) and as resource Immunization should be filled in"/>
      <expression value="iif(Bundle.entry.where(resource.is(Immunization)).resource[1].extension.where(url = 'http://nictiz.nl/fhir/StructureDefinition/ext-imm-Vaccination.PharmaceuticalProduct').value.reference.startsWith('Medication/'),             Bundle.link.where(relation='self').url.replaceMatches('Immunization[/?].*$','') + Bundle.entry.where(resource.is(Immunization)).resource[1].extension.where(url = 'http://nictiz.nl/fhir/StructureDefinition/ext-imm-Vaccination.PharmaceuticalProduct').value.reference,             Bundle.entry.where(resource.is(Immunization)).resource[1].extension.where(url = 'http://nictiz.nl/fhir/StructureDefinition/ext-imm-Vaccination.PharmaceuticalProduct').value.reference)"/>
      <sourceId value="fixture-immunization-search-response"/>
   </variable>
   <test id="immunization-search-response">
      <name value="Scenario 1.1 - Serve Immunization resources"/>
      <description value="Serve Immunization resource including the patient, performer and location"/>
      <action>
         <operation>
            <type>
               <system value="http://terminology.hl7.org/CodeSystem/testscript-operation-codes"/>
               <code value="search"/>
            </type>
            <resource value="Immunization"/>
            <description value="Test XIS server to serve Immunization resources."/>
            <accept value="json"/>
            <destination value="1"/>
            <encodeRequestUrl value="true"/>
            <origin value="1"/>
            <params value="?_include=Immunization:patient&amp;_include=Immunization:performer&amp;_include=Immunization:location"/>
            <requestHeader>
               <field value="Authorization"/>
               <value value="${patient-token-id}"/>
            </requestHeader>
            <requestHeader>
               <field value="MedMij-Request-ID"/>
               <value value="${UUID}"/>
            </requestHeader>
            <requestHeader>
               <field value="X-Correlation-ID"/>
               <value value="${X-Correlation-ID}"/>
            </requestHeader>
            <responseId value="fixture-immunization-search-response"/>
         </operation>
      </action>
      <action>
         <assert>
            <extension url="http://touchstone.aegis.net/touchstone/fhir/testing/StructureDefinition/testscript-assert-stopTestOnFail">
               <valueBoolean value="true"/>
            </extension>
            <description value="Confirm that the operation was successful"/>
            <operator value="in"/>
            <responseCode value="200,201"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <extension url="http://touchstone.aegis.net/touchstone/fhir/testing/StructureDefinition/testscript-assert-stopTestOnFail">
               <valueBoolean value="false"/>
            </extension>
            <description value="Confirm that the returned resource type is Bundle."/>
            <direction value="response"/>
            <resource value="Bundle"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <extension url="http://touchstone.aegis.net/touchstone/fhir/testing/StructureDefinition/testscript-assert-stopTestOnFail">
               <valueBoolean value="false"/>
            </extension>
            <description value="Confirm that the returned Bundle type is searchset."/>
            <direction value="response"/>
            <expression value="Bundle.type"/>
            <operator value="equals"/>
            <value value="searchset"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <extension url="http://touchstone.aegis.net/touchstone/fhir/testing/StructureDefinition/testscript-assert-stopTestOnFail">
               <valueBoolean value="false"/>
            </extension>
            <description value="Confirm that all returned resources contain an Resource.id except when temporary ids are used in the Bundle. The only time that a resource does not have an id is when it is being submitted to the server using a create operation: https://www.hl7.org/fhir/STU3/resource-definitions.html#Resource.id "/>
            <direction value="response"/>
            <expression value="Bundle.entry.all( $this.fullUrl.matches('^urn:oid:[0-2](\\.(0|[1-9]\\d*))*$') or $this.fullUrl.matches('^urn:uuid:[A-Fa-f\\d]{8}-[A-Fa-f\\d]{4}-[A-Fa-f\\d]{4}-[A-Fa-f\\d]{4}-[A-Fa-f\\d]{12}$') or $this.resource.id.exists())"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <extension url="http://touchstone.aegis.net/touchstone/fhir/testing/StructureDefinition/testscript-assert-stopTestOnFail">
               <valueBoolean value="false"/>
            </extension>
            <description value="Confirm that all returned resources except OperationOutcome and Binary contain a meta.profile tag."/>
            <direction value="response"/>
            <expression value="Bundle.entry.resource.where(is(OperationOutcome).not()).where(is(Binary).not()).where(meta.profile.empty()).empty()"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <extension url="http://touchstone.aegis.net/touchstone/fhir/testing/StructureDefinition/testscript-assert-stopTestOnFail">
               <valueBoolean value="false"/>
            </extension>
            <description value="Confirm that the fullUrl does not disagree with the id in the resource, see http://hl7.org/fhir/stu3/bundle-definitions.html#Bundle.entry.fullUrl"/>
            <direction value="response"/>
            <expression value="Bundle.entry.where(fullUrl.exists() and resource.id.exists()).all($this.fullUrl.endsWith($this.resource.id))"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <extension url="http://touchstone.aegis.net/touchstone/fhir/testing/StructureDefinition/testscript-assert-stopTestOnFail">
               <valueBoolean value="false"/>
            </extension>
            <description value="Confirm that the fullUrl is an absolute URL, an uuid or an oid."/>
            <direction value="response"/>
            <expression value="Bundle.entry.fullUrl.all( startsWith('http://') or startsWith('https://') or matches('^urn:oid:[0-2](\\.(0|[1-9]\\d*))*$') or matches('^urn:uuid:[A-Fa-f\\d]{8}-[A-Fa-f\\d]{4}-[A-Fa-f\\d]{4}-[A-Fa-f\\d]{4}-[A-Fa-f\\d]{12}$') )"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <extension url="http://touchstone.aegis.net/touchstone/fhir/testing/StructureDefinition/testscript-assert-stopTestOnFail">
               <valueBoolean value="false"/>
            </extension>
            <description value="Confirm that the returned Bundle conforms to the base FHIR specification and the resources to the stated profiles in the meta.profile tag."/>
            <direction value="response"/>
            <validateProfileId value="Bundle-profile"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <extension url="http://touchstone.aegis.net/touchstone/fhir/testing/StructureDefinition/testscript-assert-stopTestOnFail">
               <valueBoolean value="false"/>
            </extension>
            <description value="Confirm that all Coding elements contain both a .system and a .code."/>
            <direction value="response"/>
            <expression value="Bundle.descendants().where($this.is(Coding)).all(system.exists() and code.exists())"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <extension url="http://touchstone.aegis.net/touchstone/fhir/testing/StructureDefinition/testscript-assert-stopTestOnFail">
               <valueBoolean value="false"/>
            </extension>
            <description value="Confirm that the OID of the zib valueset is not used for the system of a coding element."/>
            <direction value="response"/>
            <expression value="Bundle.descendants().where($this.is(coding)).where(system.startsWith('urn:oid:2.16.840.1.113883.2.4.3.11.60.40.2')).exists().not()"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <extension url="http://touchstone.aegis.net/touchstone/fhir/testing/StructureDefinition/testscript-assert-stopTestOnFail">
               <valueBoolean value="false"/>
            </extension>
            <description value="Confirm that all CodeableConcept elements contain either a coding.display or a text value if no Coding exists or has an extension (e.g. a nullFlavor or data-absent-reason extension). For more information see https://informatiestandaarden.nictiz.nl/wiki/FHIR:V1.0_FHIR_IG_STU3Use_of_coded_concepts."/>
            <direction value="response"/>
            <expression value="Bundle.descendants().where($this.is(CodeableConcept)) .all(coding.display.exists() or text.exists() or extension.exists())"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <extension url="http://touchstone.aegis.net/touchstone/fhir/testing/StructureDefinition/testscript-assert-stopTestOnFail">
               <valueBoolean value="false"/>
            </extension>
            <description value="Confirm that all References have a display value, see https://informatiestandaarden.nictiz.nl/wiki/FHIR:V1.0_FHIR_IG_STU3#Use_of_the_reference_datatype."/>
            <direction value="response"/>
            <expression value="Bundle.descendants().where($this.is(Reference)).all(display.exists() or extension.where(url = 'http://hl7.org/fhir/StructureDefinition/data-absent-reason').exists() or extension.where(url = 'http://hl7.org/fhir/StructureDefinition/iso21090-nullFlavor').exists())"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <extension url="http://touchstone.aegis.net/touchstone/fhir/testing/StructureDefinition/testscript-assert-stopTestOnFail">
               <valueBoolean value="false"/>
            </extension>
            <description value="Confirm that all Identifiers have both a .system and a .value. In rare cases where a general category of identifiers can be used, .type can replace .system. Edge cases for both .system and .type to be unknown are not applicable to Nictiz. For more information, see https://www.hl7.org/fhir/stu3/datatypes.html#Identifier."/>
            <direction value="response"/>
            <expression value="Bundle.descendants().where($this.is(Identifier)).all((system.exists() or type.exists()) and value.exists())"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <extension url="http://touchstone.aegis.net/touchstone/fhir/testing/StructureDefinition/testscript-assert-stopTestOnFail">
               <valueBoolean value="false"/>
            </extension>
            <description value="Confirm that Bundle does not use Burgerservicenummer (BSN) anywhere."/>
            <direction value="response"/>
            <expression value="Bundle.descendants().select(identifier.where(system = 'http://fhir.nl/fhir/NamingSystem/bsn').where(value.empty().not() and value.extension.exists().not())).count() = 0"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <extension url="http://touchstone.aegis.net/touchstone/fhir/testing/StructureDefinition/testscript-assert-stopTestOnFail">
               <valueBoolean value="false"/>
            </extension>
            <description value="Confirm that the returned Bundle total value matches or is less than the number of entries in the Bundle. The included resources should not be counted as entries in the Bundle.total."/>
            <direction value="response"/>
            <expression value="Bundle.total.toInteger() &lt;= Bundle.entry.where(search.empty() or search.mode = 'match').count()"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <extension url="http://touchstone.aegis.net/touchstone/fhir/testing/StructureDefinition/testscript-assert-stopTestOnFail">
               <valueBoolean value="false"/>
            </extension>
            <description value="Confirm that the returned Bundle contains a self link."/>
            <direction value="response"/>
            <expression value="Bundle.link.where(relation = 'self' and url.exists()).exists()"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <extension url="http://touchstone.aegis.net/touchstone/fhir/testing/StructureDefinition/testscript-assert-stopTestOnFail">
               <valueBoolean value="false"/>
            </extension>
            <description value="Confirm that Bundle does not use Burgerservicenummer (BSN) in the self link."/>
            <direction value="response"/>
            <expression value="Bundle.link.url.contains('http://fhir.nl/fhir/NamingSystem/bsn') = false"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <extension url="http://touchstone.aegis.net/touchstone/fhir/testing/StructureDefinition/testscript-assert-stopTestOnFail">
               <valueBoolean value="false"/>
            </extension>
            <extension url="http://touchstone.aegis.net/touchstone/fhir/testing/StructureDefinition/testscript-assert-rule">
               <extension url="ruleId">
                  <valueId value="assert-response-queryParamsInSelfLink"/>
               </extension>
            </extension>
            <warningOnly value="true"/>
         </assert>
      </action>
      <!--<nts:include value="assert.response.numResources" scope="common" resource="Medication" count="2" nts:in-targets="#default"/>-->
      <!-- Immunization  -->
      <!-- Patient -->
      <!--<nts:include value="assert.birthdate" direction="response" resource="Patient" date="1934-04-28"/>-->
      <!-- Immunization  -->
      <!-- Immunization  -->
   </test>
   <test>
      <name value="Scenario 1.1 - Serve Immunization resources - Check Patient"/>
      <description value="Check if the previous operation results in a FHIR Patient that contains the values that are expected following Nictiz' materials (fixture .id: nl-core-Patient--XXX-Boekwijt)"/>
      <action>
         <assert>
            <extension url="http://touchstone.aegis.net/touchstone/fhir/testing/StructureDefinition/testscript-assert-stopTestOnFail">
               <valueBoolean value="true"/>
            </extension>
            <description value="Response Bundle contains exactly 1 Patient"/>
            <direction value="response"/>
            <expression value="Bundle.entry.resource.ofType(Patient).count() = 1"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <extension url="http://touchstone.aegis.net/touchstone/fhir/testing/StructureDefinition/testscript-assert-stopTestOnFail">
               <valueBoolean value="true"/>
            </extension>
            <description value="Patient resource evaluated in the previous assert contains an .id"/>
            <direction value="response"/>
            <expression value="Bundle.entry.resource.ofType(Patient).id.exists()"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <extension url="http://touchstone.aegis.net/touchstone/fhir/testing/StructureDefinition/testscript-assert-stopTestOnFail">
               <valueBoolean value="false"/>
            </extension>
            <label value="1-1"/>
            <description value="Contains .meta with .profile 'http://nictiz.nl/fhir/StructureDefinition/nl-core-Patient'"/>
            <direction value="response"/>
            <expression value="Bundle.entry.resource.ofType(Patient).where(id = '${nl-core-Patient--XXX-Boekwijt-id}').meta.profile.where($this = 'http://nictiz.nl/fhir/StructureDefinition/nl-core-Patient').exists()"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <extension url="http://touchstone.aegis.net/touchstone/fhir/testing/StructureDefinition/testscript-assert-stopTestOnFail">
               <valueBoolean value="false"/>
            </extension>
            <label value="1-2"/>
            <description value="Contains .identifier with .system and .value"/>
            <direction value="response"/>
            <expression value="Bundle.entry.resource.ofType(Patient).where(id = '${nl-core-Patient--XXX-Boekwijt-id}').identifier.where(system and value).exists()"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <extension url="http://touchstone.aegis.net/touchstone/fhir/testing/StructureDefinition/testscript-assert-stopTestOnFail">
               <valueBoolean value="false"/>
            </extension>
            <label value="1-3"/>
            <description value="Contains .name with .use 'official', and .text with a value, and .family with a value and with .extension with url 'http://hl7.org/fhir/StructureDefinition/humanname-own-name' with .valueString with a value. This assert checks if all children exist (if applicable with their specific values) and if they are present within one element. Following asserts check if individual children exist to help you debug if this assert fails"/>
            <direction value="response"/>
            <expression value="Bundle.entry.resource.ofType(Patient).where(id = '${nl-core-Patient--XXX-Boekwijt-id}').name.where(use = 'official' and text.hasValue() and family.where($this.hasValue() and extension('http://hl7.org/fhir/StructureDefinition/humanname-own-name').value.ofType(string).hasValue())).exists()"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <extension url="http://touchstone.aegis.net/touchstone/fhir/testing/StructureDefinition/testscript-assert-stopTestOnFail">
               <valueBoolean value="false"/>
            </extension>
            <label value="1-3-1"/>
            <description value="Contains .name.use 'official'. This assert checks only one child. Assert 1-3 checks if all children are present in the same parent"/>
            <direction value="response"/>
            <expression value="Bundle.entry.resource.ofType(Patient).where(id = '${nl-core-Patient--XXX-Boekwijt-id}').name.where(use = 'official').exists()"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <extension url="http://touchstone.aegis.net/touchstone/fhir/testing/StructureDefinition/testscript-assert-stopTestOnFail">
               <valueBoolean value="false"/>
            </extension>
            <label value="1-3-2"/>
            <description value="Contains .name.text with a value. This assert checks only one child. Assert 1-3 checks if all children are present in the same parent. This assert only checks existence of a value, because string comparisons can have many possible caveats"/>
            <direction value="response"/>
            <expression value="Bundle.entry.resource.ofType(Patient).where(id = '${nl-core-Patient--XXX-Boekwijt-id}').name.where(text.hasValue()).exists()"/>
            <warningOnly value="true"/>
         </assert>
      </action>
      <action>
         <assert>
            <extension url="http://touchstone.aegis.net/touchstone/fhir/testing/StructureDefinition/testscript-assert-stopTestOnFail">
               <valueBoolean value="false"/>
            </extension>
            <label value="1-3-3"/>
            <description value="Contains .name.family with a value and with .extension with url 'http://hl7.org/fhir/StructureDefinition/humanname-own-name' with .valueString with a value. This assert checks only one child. Assert 1-3 checks if all children are present in the same parent. This assert checks if all children exist (if applicable with their specific values) and if they are present within one element. Following asserts check if individual children exist to help you debug if this assert fails. This assert only checks existence of a value, because string comparisons can have many possible caveats"/>
            <direction value="response"/>
            <expression value="Bundle.entry.resource.ofType(Patient).where(id = '${nl-core-Patient--XXX-Boekwijt-id}').name.where(family.where($this.hasValue() and extension('http://hl7.org/fhir/StructureDefinition/humanname-own-name').value.ofType(string).hasValue()).exists()).exists()"/>
            <warningOnly value="true"/>
         </assert>
      </action>
      <action>
         <assert>
            <extension url="http://touchstone.aegis.net/touchstone/fhir/testing/StructureDefinition/testscript-assert-stopTestOnFail">
               <valueBoolean value="false"/>
            </extension>
            <label value="1-3-3-1"/>
            <description value="Contains .name.family with a value. This assert checks only one child. Assert 1-3-3 checks if all children are present in the same parent"/>
            <direction value="response"/>
            <expression value="Bundle.entry.resource.ofType(Patient).where(id = '${nl-core-Patient--XXX-Boekwijt-id}').name.where(family.hasValue()).exists()"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <extension url="http://touchstone.aegis.net/touchstone/fhir/testing/StructureDefinition/testscript-assert-stopTestOnFail">
               <valueBoolean value="false"/>
            </extension>
            <label value="1-3-3-2"/>
            <description value="Contains .name.family.extension with url 'http://hl7.org/fhir/StructureDefinition/humanname-own-name' with .valueString with a value. This assert checks only one child. Assert 1-3-3 checks if all children are present in the same parent"/>
            <direction value="response"/>
            <expression value="Bundle.entry.resource.ofType(Patient).where(id = '${nl-core-Patient--XXX-Boekwijt-id}').name.where(family.extension('http://hl7.org/fhir/StructureDefinition/humanname-own-name').value.ofType(string).hasValue()).exists()"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <extension url="http://touchstone.aegis.net/touchstone/fhir/testing/StructureDefinition/testscript-assert-stopTestOnFail">
               <valueBoolean value="false"/>
            </extension>
            <label value="1-4"/>
            <description value="Contains .birthDate"/>
            <direction value="response"/>
            <expression value="Bundle.entry.resource.ofType(Patient).where(id = '${nl-core-Patient--XXX-Boekwijt-id}').birthDate.exists()"/>
            <warningOnly value="false"/>
         </assert>
      </action>
   </test>
   <test>
      <name value="Scenario 1.1 - Serve Immunization resources - Check Immunization 1"/>
      <description value="Check if the previous operation results in a FHIR Immunization that contains the values that are expected following Nictiz' materials (fixture .id: db4b6028-6b3d-11ec-0000-020000000000)"/>
      <action>
         <assert>
            <extension url="http://touchstone.aegis.net/touchstone/fhir/testing/StructureDefinition/testscript-assert-stopTestOnFail">
               <valueBoolean value="true"/>
            </extension>
            <description value="Response Bundle contains exactly 1 Immunization with properties: contains .vaccineCode.coding.code = '2924528'"/>
            <direction value="response"/>
            <expression value="Bundle.entry.resource.ofType(Immunization).where(vaccineCode.where(coding.where(code = '2924528'))).count() = 1"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <extension url="http://touchstone.aegis.net/touchstone/fhir/testing/StructureDefinition/testscript-assert-stopTestOnFail">
               <valueBoolean value="true"/>
            </extension>
            <description value="Immunization resource evaluated in the previous assert contains an .id"/>
            <direction value="response"/>
            <expression value="Bundle.entry.resource.ofType(Immunization).where(vaccineCode.where(coding.where(code = '2924528'))).id.exists()"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <extension url="http://touchstone.aegis.net/touchstone/fhir/testing/StructureDefinition/testscript-assert-stopTestOnFail">
               <valueBoolean value="false"/>
            </extension>
            <label value="1-1"/>
            <description value="Contains .meta with .profile 'http://nictiz.nl/fhir/StructureDefinition/imm-Vaccination-event'"/>
            <direction value="response"/>
            <expression value="Bundle.entry.resource.ofType(Immunization).where(id = '${db4b6028-6b3d-11ec-0000-020000000000-id}').meta.profile.where($this = 'http://nictiz.nl/fhir/StructureDefinition/imm-Vaccination-event').exists()"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <extension url="http://touchstone.aegis.net/touchstone/fhir/testing/StructureDefinition/testscript-assert-stopTestOnFail">
               <valueBoolean value="false"/>
            </extension>
            <label value="1-3"/>
            <description value="Contains .extension with url 'http://nictiz.nl/fhir/StructureDefinition/ext-imm-Vaccination.PharmaceuticalProduct' with .valueReference with either .reference or .identifier and .display"/>
            <direction value="response"/>
            <expression value="Bundle.entry.resource.ofType(Immunization).where(id = '${db4b6028-6b3d-11ec-0000-020000000000-id}').extension('http://nictiz.nl/fhir/StructureDefinition/ext-imm-Vaccination.PharmaceuticalProduct').value.ofType(Reference).where((reference or identifier) and display).exists()"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <extension url="http://touchstone.aegis.net/touchstone/fhir/testing/StructureDefinition/testscript-assert-stopTestOnFail">
               <valueBoolean value="false"/>
            </extension>
            <label value="1-4"/>
            <description value="Contains .identifier with .system and .value"/>
            <direction value="response"/>
            <expression value="Bundle.entry.resource.ofType(Immunization).where(id = '${db4b6028-6b3d-11ec-0000-020000000000-id}').identifier.where(system and value).exists()"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <extension url="http://touchstone.aegis.net/touchstone/fhir/testing/StructureDefinition/testscript-assert-stopTestOnFail">
               <valueBoolean value="false"/>
            </extension>
            <label value="1-5"/>
            <description value="Contains .status 'completed'"/>
            <direction value="response"/>
            <expression value="Bundle.entry.resource.ofType(Immunization).where(id = '${db4b6028-6b3d-11ec-0000-020000000000-id}').status = 'completed'"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <extension url="http://touchstone.aegis.net/touchstone/fhir/testing/StructureDefinition/testscript-assert-stopTestOnFail">
               <valueBoolean value="false"/>
            </extension>
            <label value="1-6"/>
            <description value="Contains .vaccineCode with .coding with .system 'urn:oid:2.16.840.1.113883.2.4.4.7' and .code '2924528' and .display and .coding with .system 'http://snomed.info/sct' and .code '28531000087107' and .display"/>
            <direction value="response"/>
            <expression value="Bundle.entry.resource.ofType(Immunization).where(id = '${db4b6028-6b3d-11ec-0000-020000000000-id}').vaccineCode.where(coding.where(system = 'urn:oid:2.16.840.1.113883.2.4.4.7' and code = '2924528' and display) and coding.where(system = 'http://snomed.info/sct' and code = '28531000087107' and display)).exists()"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <extension url="http://touchstone.aegis.net/touchstone/fhir/testing/StructureDefinition/testscript-assert-stopTestOnFail">
               <valueBoolean value="false"/>
            </extension>
            <label value="1-7"/>
            <description value="Contains .patient with either .reference or .identifier and .display"/>
            <direction value="response"/>
            <expression value="Bundle.entry.resource.ofType(Immunization).where(id = '${db4b6028-6b3d-11ec-0000-020000000000-id}').patient.where((reference or identifier) and display).exists()"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <extension url="http://touchstone.aegis.net/touchstone/fhir/testing/StructureDefinition/testscript-assert-stopTestOnFail">
               <valueBoolean value="false"/>
            </extension>
            <label value="1-8"/>
            <description value="Contains .occurrenceDateTime"/>
            <direction value="response"/>
            <expression value="Bundle.entry.resource.ofType(Immunization).where(id = '${db4b6028-6b3d-11ec-0000-020000000000-id}').occurrence.ofType(dateTime).exists()"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <extension url="http://touchstone.aegis.net/touchstone/fhir/testing/StructureDefinition/testscript-assert-stopTestOnFail">
               <valueBoolean value="false"/>
            </extension>
            <label value="1-9"/>
            <description value="Contains .location with either .reference or .identifier and .display"/>
            <direction value="response"/>
            <expression value="Bundle.entry.resource.ofType(Immunization).where(id = '${db4b6028-6b3d-11ec-0000-020000000000-id}').location.where((reference or identifier) and display).exists()"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <extension url="http://touchstone.aegis.net/touchstone/fhir/testing/StructureDefinition/testscript-assert-stopTestOnFail">
               <valueBoolean value="false"/>
            </extension>
            <label value="1-10"/>
            <description value="Contains .performer with .function with .coding with .system 'http://terminology.hl7.org/CodeSystem/v2-0443' and .code 'AP' and .display, and .actor with either .reference or .identifier and .display. This assert checks if all children exist (if applicable with their specific values) and if they are present within one element. Following asserts check if individual children exist to help you debug if this assert fails"/>
            <direction value="response"/>
            <expression value="Bundle.entry.resource.ofType(Immunization).where(id = '${db4b6028-6b3d-11ec-0000-020000000000-id}').performer.where(function.coding.where(system = 'http://terminology.hl7.org/CodeSystem/v2-0443' and code = 'AP' and display) and actor.where((reference or identifier) and display)).exists()"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <extension url="http://touchstone.aegis.net/touchstone/fhir/testing/StructureDefinition/testscript-assert-stopTestOnFail">
               <valueBoolean value="false"/>
            </extension>
            <label value="1-10-1"/>
            <description value="Contains .performer.function with .coding with .system 'http://terminology.hl7.org/CodeSystem/v2-0443' and .code 'AP' and .display. This assert checks only one child. Assert 1-10 checks if all children are present in the same parent"/>
            <direction value="response"/>
            <expression value="Bundle.entry.resource.ofType(Immunization).where(id = '${db4b6028-6b3d-11ec-0000-020000000000-id}').performer.where(function.coding.where(system = 'http://terminology.hl7.org/CodeSystem/v2-0443' and code = 'AP' and display).exists()).exists()"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <extension url="http://touchstone.aegis.net/touchstone/fhir/testing/StructureDefinition/testscript-assert-stopTestOnFail">
               <valueBoolean value="false"/>
            </extension>
            <label value="1-10-2"/>
            <description value="Contains .performer.actor with either .reference or .identifier and .display. This assert checks only one child. Assert 1-10 checks if all children are present in the same parent"/>
            <direction value="response"/>
            <expression value="Bundle.entry.resource.ofType(Immunization).where(id = '${db4b6028-6b3d-11ec-0000-020000000000-id}').performer.where(actor.where((reference or identifier) and display).exists()).exists()"/>
            <warningOnly value="false"/>
         </assert>
      </action>
   </test>
   <test>
      <name value="Scenario 1.1 - Serve Immunization resources - Check Organization 1"/>
      <description value="Check if the previous operation results in a FHIR Organization that contains the values that are expected following Nictiz' materials (fixture .id: nl-core-HPrv-Org--Org-2165281100733-20000004)"/>
      <action>
         <assert>
            <extension url="http://touchstone.aegis.net/touchstone/fhir/testing/StructureDefinition/testscript-assert-stopTestOnFail">
               <valueBoolean value="true"/>
            </extension>
            <description value="Response Bundle contains exactly 1 Organization with properties: contains .identifier.value = '20000004'"/>
            <direction value="response"/>
            <expression value="Bundle.entry.resource.ofType(Organization).where(identifier.where(value = '20000004')).count() = 1"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <extension url="http://touchstone.aegis.net/touchstone/fhir/testing/StructureDefinition/testscript-assert-stopTestOnFail">
               <valueBoolean value="true"/>
            </extension>
            <description value="Organization resource evaluated in the previous assert contains an .id"/>
            <direction value="response"/>
            <expression value="Bundle.entry.resource.ofType(Organization).where(identifier.where(value = '20000004')).id.exists()"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <extension url="http://touchstone.aegis.net/touchstone/fhir/testing/StructureDefinition/testscript-assert-stopTestOnFail">
               <valueBoolean value="false"/>
            </extension>
            <label value="1-1"/>
            <description value="Contains .meta with .profile 'http://nictiz.nl/fhir/StructureDefinition/nl-core-HealthcareProvider-Organization'"/>
            <direction value="response"/>
            <expression value="Bundle.entry.resource.ofType(Organization).where(id = '${nl-core-HPrv-Org--Org-2165281100733-20000004-id}').meta.profile.where($this = 'http://nictiz.nl/fhir/StructureDefinition/nl-core-HealthcareProvider-Organization').exists()"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <extension url="http://touchstone.aegis.net/touchstone/fhir/testing/StructureDefinition/testscript-assert-stopTestOnFail">
               <valueBoolean value="false"/>
            </extension>
            <label value="1-2"/>
            <description value="Contains .identifier with .system and .value"/>
            <direction value="response"/>
            <expression value="Bundle.entry.resource.ofType(Organization).where(id = '${nl-core-HPrv-Org--Org-2165281100733-20000004-id}').identifier.where(system and value).exists()"/>
            <warningOnly value="false"/>
         </assert>
      </action>
   </test>
   <test>
      <name value="Scenario 1.1 - Serve Immunization resources - Check Immunization 2"/>
      <description value="Check if the previous operation results in a FHIR Immunization that contains the values that are expected following Nictiz' materials (fixture .id: 2e0a05a8-6aad-11ec-0000-020000000000)"/>
      <action>
         <assert>
            <extension url="http://touchstone.aegis.net/touchstone/fhir/testing/StructureDefinition/testscript-assert-stopTestOnFail">
               <valueBoolean value="true"/>
            </extension>
            <description value="Response Bundle contains exactly 1 Immunization with properties: contains .vaccineCode.coding.code = '836379009'"/>
            <direction value="response"/>
            <expression value="Bundle.entry.resource.ofType(Immunization).where(vaccineCode.where(coding.where(code = '836379009'))).count() = 1"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <extension url="http://touchstone.aegis.net/touchstone/fhir/testing/StructureDefinition/testscript-assert-stopTestOnFail">
               <valueBoolean value="true"/>
            </extension>
            <description value="Immunization resource evaluated in the previous assert contains an .id"/>
            <direction value="response"/>
            <expression value="Bundle.entry.resource.ofType(Immunization).where(vaccineCode.where(coding.where(code = '836379009'))).id.exists()"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <extension url="http://touchstone.aegis.net/touchstone/fhir/testing/StructureDefinition/testscript-assert-stopTestOnFail">
               <valueBoolean value="false"/>
            </extension>
            <label value="2-1"/>
            <description value="Contains .meta with .profile 'http://nictiz.nl/fhir/StructureDefinition/imm-Vaccination-event'"/>
            <direction value="response"/>
            <expression value="Bundle.entry.resource.ofType(Immunization).where(id = '${2e0a05a8-6aad-11ec-0000-020000000000-id}').meta.profile.where($this = 'http://nictiz.nl/fhir/StructureDefinition/imm-Vaccination-event').exists()"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <extension url="http://touchstone.aegis.net/touchstone/fhir/testing/StructureDefinition/testscript-assert-stopTestOnFail">
               <valueBoolean value="false"/>
            </extension>
            <label value="2-3"/>
            <description value="Contains .extension with url 'http://nictiz.nl/fhir/StructureDefinition/ext-imm-Vaccination.PharmaceuticalProduct' with .valueReference with either .reference or .identifier and .display"/>
            <direction value="response"/>
            <expression value="Bundle.entry.resource.ofType(Immunization).where(id = '${2e0a05a8-6aad-11ec-0000-020000000000-id}').extension('http://nictiz.nl/fhir/StructureDefinition/ext-imm-Vaccination.PharmaceuticalProduct').value.ofType(Reference).where((reference or identifier) and display).exists()"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <extension url="http://touchstone.aegis.net/touchstone/fhir/testing/StructureDefinition/testscript-assert-stopTestOnFail">
               <valueBoolean value="false"/>
            </extension>
            <label value="2-4"/>
            <description value="Contains .identifier with .system and .value"/>
            <direction value="response"/>
            <expression value="Bundle.entry.resource.ofType(Immunization).where(id = '${2e0a05a8-6aad-11ec-0000-020000000000-id}').identifier.where(system and value).exists()"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <extension url="http://touchstone.aegis.net/touchstone/fhir/testing/StructureDefinition/testscript-assert-stopTestOnFail">
               <valueBoolean value="false"/>
            </extension>
            <label value="2-5"/>
            <description value="Contains .status 'completed'"/>
            <direction value="response"/>
            <expression value="Bundle.entry.resource.ofType(Immunization).where(id = '${2e0a05a8-6aad-11ec-0000-020000000000-id}').status = 'completed'"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <extension url="http://touchstone.aegis.net/touchstone/fhir/testing/StructureDefinition/testscript-assert-stopTestOnFail">
               <valueBoolean value="false"/>
            </extension>
            <label value="2-6"/>
            <description value="Contains .vaccineCode with .coding with .system 'http://snomed.info/sct' and .code '836379009' and .display"/>
            <direction value="response"/>
            <expression value="Bundle.entry.resource.ofType(Immunization).where(id = '${2e0a05a8-6aad-11ec-0000-020000000000-id}').vaccineCode.coding.where(system = 'http://snomed.info/sct' and code = '836379009' and display).exists()"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <extension url="http://touchstone.aegis.net/touchstone/fhir/testing/StructureDefinition/testscript-assert-stopTestOnFail">
               <valueBoolean value="false"/>
            </extension>
            <label value="2-7"/>
            <description value="Contains .patient with either .reference or .identifier and .display"/>
            <direction value="response"/>
            <expression value="Bundle.entry.resource.ofType(Immunization).where(id = '${2e0a05a8-6aad-11ec-0000-020000000000-id}').patient.where((reference or identifier) and display).exists()"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <extension url="http://touchstone.aegis.net/touchstone/fhir/testing/StructureDefinition/testscript-assert-stopTestOnFail">
               <valueBoolean value="false"/>
            </extension>
            <label value="2-8"/>
            <description value="Contains .occurrenceDateTime"/>
            <direction value="response"/>
            <expression value="Bundle.entry.resource.ofType(Immunization).where(id = '${2e0a05a8-6aad-11ec-0000-020000000000-id}').occurrence.ofType(dateTime).exists()"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <extension url="http://touchstone.aegis.net/touchstone/fhir/testing/StructureDefinition/testscript-assert-stopTestOnFail">
               <valueBoolean value="false"/>
            </extension>
            <label value="2-9"/>
            <description value="Contains .location with either .reference or .identifier and .display"/>
            <direction value="response"/>
            <expression value="Bundle.entry.resource.ofType(Immunization).where(id = '${2e0a05a8-6aad-11ec-0000-020000000000-id}').location.where((reference or identifier) and display).exists()"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <extension url="http://touchstone.aegis.net/touchstone/fhir/testing/StructureDefinition/testscript-assert-stopTestOnFail">
               <valueBoolean value="false"/>
            </extension>
            <label value="2-10"/>
            <description value="Contains .performer with .function with .coding with .system 'http://terminology.hl7.org/CodeSystem/v2-0443' and .code 'AP' and .display, and .actor with either .reference or .identifier and .display. This assert checks if all children exist (if applicable with their specific values) and if they are present within one element. Following asserts check if individual children exist to help you debug if this assert fails"/>
            <direction value="response"/>
            <expression value="Bundle.entry.resource.ofType(Immunization).where(id = '${2e0a05a8-6aad-11ec-0000-020000000000-id}').performer.where(function.coding.where(system = 'http://terminology.hl7.org/CodeSystem/v2-0443' and code = 'AP' and display) and actor.where((reference or identifier) and display)).exists()"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <extension url="http://touchstone.aegis.net/touchstone/fhir/testing/StructureDefinition/testscript-assert-stopTestOnFail">
               <valueBoolean value="false"/>
            </extension>
            <label value="2-10-1"/>
            <description value="Contains .performer.function with .coding with .system 'http://terminology.hl7.org/CodeSystem/v2-0443' and .code 'AP' and .display. This assert checks only one child. Assert 2-10 checks if all children are present in the same parent"/>
            <direction value="response"/>
            <expression value="Bundle.entry.resource.ofType(Immunization).where(id = '${2e0a05a8-6aad-11ec-0000-020000000000-id}').performer.where(function.coding.where(system = 'http://terminology.hl7.org/CodeSystem/v2-0443' and code = 'AP' and display).exists()).exists()"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <extension url="http://touchstone.aegis.net/touchstone/fhir/testing/StructureDefinition/testscript-assert-stopTestOnFail">
               <valueBoolean value="false"/>
            </extension>
            <label value="2-10-2"/>
            <description value="Contains .performer.actor with either .reference or .identifier and .display. This assert checks only one child. Assert 2-10 checks if all children are present in the same parent"/>
            <direction value="response"/>
            <expression value="Bundle.entry.resource.ofType(Immunization).where(id = '${2e0a05a8-6aad-11ec-0000-020000000000-id}').performer.where(actor.where((reference or identifier) and display).exists()).exists()"/>
            <warningOnly value="false"/>
         </assert>
      </action>
   </test>
   <test>
      <name value="Scenario 1.1 - Serve Immunization resources - Check Organization 2"/>
      <description value="Check if the previous operation results in a FHIR Organization that contains the values that are expected following Nictiz' materials (fixture .id: nl-core-HPrv-Org--Org-2165281100733-10000004)"/>
      <action>
         <assert>
            <extension url="http://touchstone.aegis.net/touchstone/fhir/testing/StructureDefinition/testscript-assert-stopTestOnFail">
               <valueBoolean value="true"/>
            </extension>
            <description value="Response Bundle contains exactly 1 Organization with properties: contains .identifier.value = '10000004'"/>
            <direction value="response"/>
            <expression value="Bundle.entry.resource.ofType(Organization).where(identifier.where(value = '10000004')).count() = 1"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <extension url="http://touchstone.aegis.net/touchstone/fhir/testing/StructureDefinition/testscript-assert-stopTestOnFail">
               <valueBoolean value="true"/>
            </extension>
            <description value="Organization resource evaluated in the previous assert contains an .id"/>
            <direction value="response"/>
            <expression value="Bundle.entry.resource.ofType(Organization).where(identifier.where(value = '10000004')).id.exists()"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <extension url="http://touchstone.aegis.net/touchstone/fhir/testing/StructureDefinition/testscript-assert-stopTestOnFail">
               <valueBoolean value="false"/>
            </extension>
            <label value="2-1"/>
            <description value="Contains .meta with .profile 'http://nictiz.nl/fhir/StructureDefinition/nl-core-HealthcareProvider-Organization'"/>
            <direction value="response"/>
            <expression value="Bundle.entry.resource.ofType(Organization).where(id = '${nl-core-HPrv-Org--Org-2165281100733-10000004-id}').meta.profile.where($this = 'http://nictiz.nl/fhir/StructureDefinition/nl-core-HealthcareProvider-Organization').exists()"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <extension url="http://touchstone.aegis.net/touchstone/fhir/testing/StructureDefinition/testscript-assert-stopTestOnFail">
               <valueBoolean value="false"/>
            </extension>
            <label value="2-2"/>
            <description value="Contains .identifier with .system and .value"/>
            <direction value="response"/>
            <expression value="Bundle.entry.resource.ofType(Organization).where(id = '${nl-core-HPrv-Org--Org-2165281100733-10000004-id}').identifier.where(system and value).exists()"/>
            <warningOnly value="false"/>
         </assert>
      </action>
   </test>
   <test id="serveMedication0"><!-- This variable needs to be filled with the following params. The name (name of the variable), sequenceNumber (the index), sourceId (id of the resource) and as resource Immunization should be filled in. -->
      <name value="Scenario 1.1 - Read Medication resource 1"/>
      <description value="Serve PharmaceuticalProduct via an HTTP get."/>
      <action>
         <operation>
            <type>
               <system value="http://terminology.hl7.org/CodeSystem/testscript-operation-codes"/>
               <code value="read"/>
            </type>
            <resource value="Medication"/>
            <description value="Test XIS server to serve Medication resource."/>
            <accept value="json"/>
            <destination value="1"/>
            <encodeRequestUrl value="true"/>
            <origin value="1"/>
            <requestHeader>
               <field value="Authorization"/>
               <value value="${patient-token-id}"/>
            </requestHeader>
            <requestHeader>
               <field value="MedMij-Request-ID"/>
               <value value="${UUID}"/>
            </requestHeader>
            <requestHeader>
               <field value="X-Correlation-ID"/>
               <value value="${X-Correlation-ID}"/>
            </requestHeader>
            <url value="${pharmaceuticalProduct-url-1}"/>
         </operation>
      </action>
      <action>
         <assert>
            <extension url="http://touchstone.aegis.net/touchstone/fhir/testing/StructureDefinition/testscript-assert-stopTestOnFail">
               <valueBoolean value="true"/>
            </extension>
            <description value="Confirm that the operation was successful"/>
            <operator value="in"/>
            <responseCode value="200,201"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <extension url="http://touchstone.aegis.net/touchstone/fhir/testing/StructureDefinition/testscript-assert-stopTestOnFail">
               <valueBoolean value="false"/>
            </extension>
            <description value="Confirm that all Coding elements contain both a .system and a .code."/>
            <direction value="response"/>
            <expression value="Medication.descendants().where($this.is(Coding)).all(system.exists() and code.exists())"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <extension url="http://touchstone.aegis.net/touchstone/fhir/testing/StructureDefinition/testscript-assert-stopTestOnFail">
               <valueBoolean value="false"/>
            </extension>
            <description value="Confirm that the OID of the zib valueset is not used for the system of a coding element."/>
            <direction value="response"/>
            <expression value="Medication.descendants().where($this.is(coding)).where(system.startsWith('urn:oid:2.16.840.1.113883.2.4.3.11.60.40.2')).exists().not()"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <extension url="http://touchstone.aegis.net/touchstone/fhir/testing/StructureDefinition/testscript-assert-stopTestOnFail">
               <valueBoolean value="false"/>
            </extension>
            <description value="Confirm that all CodeableConcept elements contain either a coding.display or a text value if no Coding exists or has an extension (e.g. a nullFlavor or data-absent-reason extension). For more information see https://informatiestandaarden.nictiz.nl/wiki/FHIR:V1.0_FHIR_IG_STU3Use_of_coded_concepts."/>
            <direction value="response"/>
            <expression value="Medication.descendants().where($this.is(CodeableConcept)) .all(coding.display.exists() or text.exists() or extension.exists())"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <extension url="http://touchstone.aegis.net/touchstone/fhir/testing/StructureDefinition/testscript-assert-stopTestOnFail">
               <valueBoolean value="false"/>
            </extension>
            <description value="Confirm that all References have a display value, see https://informatiestandaarden.nictiz.nl/wiki/FHIR:V1.0_FHIR_IG_STU3#Use_of_the_reference_datatype."/>
            <direction value="response"/>
            <expression value="Medication.descendants().where($this.is(Reference)).all(display.exists() or extension.where(url = 'http://hl7.org/fhir/StructureDefinition/data-absent-reason').exists() or extension.where(url = 'http://hl7.org/fhir/StructureDefinition/iso21090-nullFlavor').exists())"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <extension url="http://touchstone.aegis.net/touchstone/fhir/testing/StructureDefinition/testscript-assert-stopTestOnFail">
               <valueBoolean value="false"/>
            </extension>
            <description value="Confirm that all Identifiers have both a .system and a .value. In rare cases where a general category of identifiers can be used, .type can replace .system. Edge cases for both .system and .type to be unknown are not applicable to Nictiz. For more information, see https://www.hl7.org/fhir/stu3/datatypes.html#Identifier."/>
            <direction value="response"/>
            <expression value="Medication.descendants().where($this.is(Identifier)).all((system.exists() or type.exists()) and value.exists())"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <!--<nts:contentAsserts href="resources/nl-core-PhPrd-\-FF4213-21684011138832447-2924528.xml" description="contains .code.coding.code = '2924528'" discriminator="code.where(coding.where(code = '2924528'))" nts:in-targets="CheckContent"/>
        <nts:contentAsserts href="resources/nl-core-PhPrd-\-AHPVA064BB-2168401113883696-836379009.xml" description="contains .code.coding.code = '836379009'" discriminator="code.where(coding.where(code = '836379009'))" nts:in-targets="CheckContent"/>-->
   </test>
   <test id="serveMedication1"><!-- This variable needs to be filled with the following params. The name (name of the variable), sequenceNumber (the index), sourceId (id of the resource) and as resource Immunization should be filled in. -->
      <name value="Scenario 1.1 - Read Medication resource 2"/>
      <description value="Serve PharmaceuticalProduct via an HTTP get."/>
      <action>
         <operation>
            <type>
               <system value="http://terminology.hl7.org/CodeSystem/testscript-operation-codes"/>
               <code value="read"/>
            </type>
            <resource value="Medication"/>
            <description value="Test XIS server to serve Medication resource."/>
            <accept value="json"/>
            <destination value="1"/>
            <encodeRequestUrl value="true"/>
            <origin value="1"/>
            <requestHeader>
               <field value="Authorization"/>
               <value value="${patient-token-id}"/>
            </requestHeader>
            <requestHeader>
               <field value="MedMij-Request-ID"/>
               <value value="${UUID}"/>
            </requestHeader>
            <requestHeader>
               <field value="X-Correlation-ID"/>
               <value value="${X-Correlation-ID}"/>
            </requestHeader>
            <url value="${pharmaceuticalProduct-url-2}"/>
         </operation>
      </action>
      <action>
         <assert>
            <extension url="http://touchstone.aegis.net/touchstone/fhir/testing/StructureDefinition/testscript-assert-stopTestOnFail">
               <valueBoolean value="true"/>
            </extension>
            <description value="Confirm that the operation was successful"/>
            <operator value="in"/>
            <responseCode value="200,201"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <extension url="http://touchstone.aegis.net/touchstone/fhir/testing/StructureDefinition/testscript-assert-stopTestOnFail">
               <valueBoolean value="false"/>
            </extension>
            <description value="Confirm that all Coding elements contain both a .system and a .code."/>
            <direction value="response"/>
            <expression value="Medication.descendants().where($this.is(Coding)).all(system.exists() and code.exists())"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <extension url="http://touchstone.aegis.net/touchstone/fhir/testing/StructureDefinition/testscript-assert-stopTestOnFail">
               <valueBoolean value="false"/>
            </extension>
            <description value="Confirm that the OID of the zib valueset is not used for the system of a coding element."/>
            <direction value="response"/>
            <expression value="Medication.descendants().where($this.is(coding)).where(system.startsWith('urn:oid:2.16.840.1.113883.2.4.3.11.60.40.2')).exists().not()"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <extension url="http://touchstone.aegis.net/touchstone/fhir/testing/StructureDefinition/testscript-assert-stopTestOnFail">
               <valueBoolean value="false"/>
            </extension>
            <description value="Confirm that all CodeableConcept elements contain either a coding.display or a text value if no Coding exists or has an extension (e.g. a nullFlavor or data-absent-reason extension). For more information see https://informatiestandaarden.nictiz.nl/wiki/FHIR:V1.0_FHIR_IG_STU3Use_of_coded_concepts."/>
            <direction value="response"/>
            <expression value="Medication.descendants().where($this.is(CodeableConcept)) .all(coding.display.exists() or text.exists() or extension.exists())"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <extension url="http://touchstone.aegis.net/touchstone/fhir/testing/StructureDefinition/testscript-assert-stopTestOnFail">
               <valueBoolean value="false"/>
            </extension>
            <description value="Confirm that all References have a display value, see https://informatiestandaarden.nictiz.nl/wiki/FHIR:V1.0_FHIR_IG_STU3#Use_of_the_reference_datatype."/>
            <direction value="response"/>
            <expression value="Medication.descendants().where($this.is(Reference)).all(display.exists() or extension.where(url = 'http://hl7.org/fhir/StructureDefinition/data-absent-reason').exists() or extension.where(url = 'http://hl7.org/fhir/StructureDefinition/iso21090-nullFlavor').exists())"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <action>
         <assert>
            <extension url="http://touchstone.aegis.net/touchstone/fhir/testing/StructureDefinition/testscript-assert-stopTestOnFail">
               <valueBoolean value="false"/>
            </extension>
            <description value="Confirm that all Identifiers have both a .system and a .value. In rare cases where a general category of identifiers can be used, .type can replace .system. Edge cases for both .system and .type to be unknown are not applicable to Nictiz. For more information, see https://www.hl7.org/fhir/stu3/datatypes.html#Identifier."/>
            <direction value="response"/>
            <expression value="Medication.descendants().where($this.is(Identifier)).all((system.exists() or type.exists()) and value.exists())"/>
            <warningOnly value="false"/>
         </assert>
      </action>
      <!--<nts:contentAsserts href="resources/nl-core-PhPrd-\-FF4213-21684011138832447-2924528.xml" description="contains .code.coding.code = '2924528'" discriminator="code.where(coding.where(code = '2924528'))" nts:in-targets="CheckContent"/>
        <nts:contentAsserts href="resources/nl-core-PhPrd-\-AHPVA064BB-2168401113883696-836379009.xml" description="contains .code.coding.code = '836379009'" discriminator="code.where(coding.where(code = '836379009'))" nts:in-targets="CheckContent"/>-->
   </test>
</TestScript>
